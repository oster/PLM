# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# Rajasekaran Karunanithi <rajasekaran86@gmail.com>, 2021.
# தமிழ்நேரம் <anishprabu.t@gmail.com>, 2025.
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-06-25 04:58+0200\n"
"PO-Revision-Date: 2025-02-13 03:02+0000\n"
"Last-Translator: தமிழ்நேரம் <anishprabu.t@gmail.com>\n"
"Language-Team: Tamil <https://hosted.weblate.org/projects/"
"programmers-learning-machine/missions/ta/>\n"
"Language: ta\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 5.10-dev\n"

#. type: Content of: <h1>
#: src/plm/universe/bugglequest/BuggleWorld.html:2
msgid "BuggleWorld"
msgstr "BuggleWorld"

#. type: Content of: outside any tag (error?)
#: src/plm/universe/bugglequest/BuggleWorld.html:3
msgid ""
"This world was invented by Lyn Turbak, at Wellesley College. It is full of "
"Buggles, little animals understanding simple orders, and offers numerous "
"possibilities of interaction with the world: taking or dropping objects, "
"paint the ground, hit walls, etc."
msgstr ""
"This world was invented by Lyn Turbak, at Wellesley College. It is full of "
"Buggles, little animals understanding simple orders, and offers numerous "
"possibilities of உள்வினை with the world: taking or dropping objects, paint "
"the ground, hit walls, etc."

#. type: Content of: <h2>
#: src/plm/universe/bugglequest/BuggleWorld.html:8
msgid "Methods understood by buggles"
msgstr "முறைகள் understood by buggles"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:10
msgid "<b>Moving</b>"
msgstr "<b>நகர்கிறது</b>"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:10
msgid "(See also the note on exceptions, below)"
msgstr "(கீழே உள்ள விதிவிலக்குகள் பற்றிய குறிப்பையும் பார்க்கவும்)"

#. type: Content of: <table><tr><td><b>
#: src/plm/universe/bugglequest/BuggleWorld.html:11
#: src/lessons/turmites/universe/TurmiteWorld.html:10
msgid "<b>Turn left"
msgstr "<b>இடப்பக்கம் திரும்பு"

#. type: Content of: <table><tr><td><b>
#: src/plm/universe/bugglequest/BuggleWorld.html:11
#: src/lessons/turmites/universe/TurmiteWorld.html:10
msgid "Turn right"
msgstr "வலதுபுறம் திரும்பு"

#. type: Content of: <table><tr><td><b>
#: src/plm/universe/bugglequest/BuggleWorld.html:11
#: src/lessons/turmites/universe/TurmiteWorld.html:10
msgid "Turn back"
msgstr "பின்னே திரும்பு"

#. type: Content of: <table><tr><td><b>
#: src/plm/universe/bugglequest/BuggleWorld.html:11
#: src/lessons/turmites/universe/TurmiteWorld.html:10
msgid "Moving forward"
msgstr "முன்னோக்கி நகர்தல்"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:11
#: src/lessons/turmites/universe/TurmiteWorld.html:10
msgid "Moving back</b>"
msgstr "Moving back</b>"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:12
#: src/lessons/turmites/universe/TurmiteWorld.html:11
msgid "[!java|c]void [/!]left()"
msgstr "[!java|c]void [/!]left()"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:13
#: src/lessons/turmites/universe/TurmiteWorld.html:11
msgid "[!java|c]void [/!]right()"
msgstr "[!java|c]void [/!]right()"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:14
#: src/lessons/turmites/universe/TurmiteWorld.html:11
msgid "[!java|c]void [/!]back()"
msgstr "[!java|c]void [/!]back()"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:15
msgid ""
"[!java|c]void [/!][!python|java|scala]forward()[/!][!c]stepForward()[/!] or "
"[!java|c]void [/!]forward([!java|c]int [/!]steps[!scala]:Int[/!])"
msgstr ""
"[!java|c]void [/!][!python|java|scala]forward()[/!][!c]stepForward()[/!] or "
"[!java|c]void [/!]forward([!java|c]int [/!]steps[!scala]:Int[/!])"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:16
msgid ""
"[!java|c]void [/!][!python|java|scala]backward()[/!][!c]stepBackward()[/!] "
"or [!java]void [/!]backward([!java|c]int [/!]steps[!scala]:Int[/!])"
msgstr ""
"[!java|c]void [/!][!python|java|scala]backward()[/!][!c]stepBackward()[/!] "
"or [!java]void [/!]backward([!java|c]int [/!]steps[!scala]:Int[/!])"

#. type: Content of: <table><tr><td><b>
#: src/plm/universe/bugglequest/BuggleWorld.html:17
msgid "<b>Get X coordinate"
msgstr "<b>Get ஃச் ஆயம்"

#. type: Content of: <table><tr><td><b>
#: src/plm/universe/bugglequest/BuggleWorld.html:17
msgid "Get Y coordinate"
msgstr "Get ஒய் ஆயம்"

#. type: Content of: <table><tr><td><b>
#: src/plm/universe/bugglequest/BuggleWorld.html:17
msgid "Set X coordinate"
msgstr "கணம் ஃச் ஆயம்"

#. type: Content of: <table><tr><td><b>
#: src/plm/universe/bugglequest/BuggleWorld.html:17
msgid "Set Y coordinate"
msgstr "கணம் ஒய் ஆயம்"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:17
msgid "Set position</b>"
msgstr "கணம் position</b>"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:18
msgid "[!java|c]int [/!]getX()[!scala]:Int[/!]"
msgstr "[!java|c]int [/!]getX()[!scala]:Int[/!]"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:19
msgid "[!java|c]int [/!]getY()[!scala]:Int[/!]"
msgstr "[!java|c]int [/!]getY()[!scala]:Int[/!]"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:20
msgid "[!java|c]void [/!]setX([!java|c]int [/!]x[!scala]:Int[/!])"
msgstr "[!java|c]void [/!]setX([!java|c]int [/!]x[!scala]:Int[/!])"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:21
msgid "[!java|c]void [/!]setY([!java|c]int [/!]y[!scala]:Int[/!])"
msgstr "[!java|c]void [/!]setY([!java|c]int [/!]y[!scala]:Int[/!])"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:22
msgid ""
"[!java|c]void [/!]setPos([!java|c]int [/!]x[!scala]:Int[/!], [!java|c]int "
"[/!]y[!scala]:Int[/!])"
msgstr ""
"[!java|c]void [/!]setPos([!java|c]int [/!]x[!scala]:Int[/!], [!java|c]int "
"[/!]y[!scala]:Int[/!])"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:23
msgid ""
"Note that the point (0,0) is on the top left corner, as it is often the case "
"in Computer Science."
msgstr ""
"குறிப்பு that the புள்ளியம் (0,0) is on the மேலே இடது corner, அச் it is often "
"the case in கணிப்பொறி, கணிணி Science."

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:25
msgid "<b>Information on the buggle</b>"
msgstr "<b>Information on the buggle</b>"

#. type: Content of: <table><tr><td><b>
#: src/plm/universe/bugglequest/BuggleWorld.html:26
msgid "<b>Get the color of the body"
msgstr "<b>Get the color of the body"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:26
msgid "Set the color of the body</b>"
msgstr "கணம் the color of the body</b>"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:27
msgid "[!java|c]Color [/!]getBodyColor()[!scala]:Color[/!]"
msgstr "[!java|c]Color [/!]getBodyColor()[!scala]:Color[/!]"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:28
msgid "[!java|c]void [/!]setBodyColor([!java|c]Color [/!]c[!scala]:Color[/!])"
msgstr "[!java|c]void [/!]setBodyColor([!java|c]Color [/!]c[!scala]:Color[/!])"

#. type: Content of: <table><tr><td><b>
#: src/plm/universe/bugglequest/BuggleWorld.html:29
msgid "<b>Look for a wall forward"
msgstr "<b>Look க்கு a wall forward"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:29
msgid "Look for a wall backward</b>"
msgstr "Look க்கு a wall backward</b>"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:30
msgid "[!java]boolean [/!][!c]int [/!]isFacingWall()[!scala]:Boolean[/!]"
msgstr "[!java]boolean [/!][!c]int [/!]isFacingWall()[!scala]:Boolean[/!]"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:31
msgid "[!java]boolean [/!][!c]int [/!]isBackingWall()[!scala]:Boolean[/!]"
msgstr "[!java]boolean [/!][!c]int [/!]isBackingWall()[!scala]:Boolean[/!]"

#. type: Content of: <table><tr><td><b>
#: src/plm/universe/bugglequest/BuggleWorld.html:32
msgid "<b>Get heading"
msgstr "<b>Get heading"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:32
msgid "Set heading</b>"
msgstr "கணம் heading</b>"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:33
msgid "[!java|c]Direction [/!]getDirection()[!scala]:Direction[/!]"
msgstr "[!java|c]Direction [/!]getDirection()[!scala]:Direction[/!]"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:34
msgid ""
"[!java|c]void [/!]setDirection([!java|c]Direction "
"[/!]dir[!scala]:Direction[/!])"
msgstr ""
"[!java|c]void [/!]setDirection([!java|c]Direction [/!]dir[!scala]:Direction[/"
"!])"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:36
msgid "Check whether the buggle is currently <b>selected in the interface</b>"
msgstr ""
"சரிபார் whether the buggle is currently <b>selected in the interface</b>"

#. type: Content of: <pre>
#: src/plm/universe/bugglequest/BuggleWorld.html:37
#: src/plm/universe/turtles/TurtleWorld.html:76
#: src/lessons/recursion/hanoi/universe/HanoiWorld.html:27
#, no-wrap
msgid "[!java]boolean [/!][!c]int [/!]isSelected()[!scala]:Boolean[/!]"
msgstr "[!java]boolean [/!][!c]int [/!]isSelected()[!scala]:Boolean[/!]"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:39
msgid "<b>About the brush</b>"
msgstr "<b>About the brush</b>"

#. type: Content of: <table><tr><td><b>
#: src/plm/universe/bugglequest/BuggleWorld.html:40
msgid "<b>Brush down"
msgstr "<b>Brush down"

#. type: Content of: <table><tr><td><b>
#: src/plm/universe/bugglequest/BuggleWorld.html:40
msgid "Brush up"
msgstr "மின்தொடி மேலே"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:40
msgid "Get brush position</b>"
msgstr "Get மின்தொடி position</b>"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:41
msgid "[!java|c]void [/!]brushUp()"
msgstr "[!java|c]void [/!]brushUp()"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:42
msgid "[!java|c]void [/!]brushDown()"
msgstr "[!java|c]void [/!]brushDown()"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:43
msgid "[!java]boolean [/!][!c]int [/!]isBrushDown()[!scala]:Boolean[/!]"
msgstr "[!java]boolean [/!][!c]int [/!]isBrushDown()[!scala]:Boolean[/!]"

#. type: Content of: <table><tr><td><b>
#: src/plm/universe/bugglequest/BuggleWorld.html:44
msgid "<b>Change the brush color"
msgstr "<b>Change the மின்தொடி color"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:44
msgid "Get the color of the brush</b>"
msgstr "Get the color of the brush</b>"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:45
msgid "[!java|c]void [/!]setBrushColor([!java|c]Color [/!]c[!scala]:Color[/!])"
msgstr "[!java|c]void [/!]setBrushColor([!java|c]Color [/!]c[!scala]:Color[/!])"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:46
msgid "[!java|c]Color [/!]getBrushColor()[!scala]:Color[/!]"
msgstr "[!java|c]Color [/!]getBrushColor()[!scala]:Color[/!]"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:48
msgid "<b>Interacting with the world</b>"
msgstr "<b>Interacting with the world</b>"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:49
#: src/lessons/turmites/universe/TurmiteWorld.html:15
msgid "<b>Get the color of the ground</b>"
msgstr "<b>Get the color of the ground</b>"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:50
#: src/lessons/turmites/universe/TurmiteWorld.html:15
msgid "[!java|c]Color [/!]getGroundColor()[!scala]:Color[/!]"
msgstr "[!java|c]Color [/!]getGroundColor()[!scala]:Color[/!]"

#. type: Content of: <table><tr><td><b>
#: src/plm/universe/bugglequest/BuggleWorld.html:52
msgid "<b>Look for a baggle on the ground"
msgstr "<b>Look க்கு a baggle on the ground"

#. type: Content of: <table><tr><td><b>
#: src/plm/universe/bugglequest/BuggleWorld.html:52
msgid "Look for a baggle in bag"
msgstr "Look க்கு a baggle in bag"

#. type: Content of: <table><tr><td><b>
#: src/plm/universe/bugglequest/BuggleWorld.html:52
msgid "Pickup a baggle"
msgstr "Pickup a baggle"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:52
msgid "Drop a baggle</b>"
msgstr "Drop a baggle</b>"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:53
msgid "(see the note on exceptions)"
msgstr "(see the குறிப்பு on exceptions)"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:54
msgid "[!java]boolean [/!][!c]int [/!]isOverBaggle()[!scala]:Boolean[/!]"
msgstr "[!java]boolean [/!][!c]int [/!]isOverBaggle()[!scala]:Boolean[/!]"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:55
msgid "[!java]boolean [/!][!c]int [/!]isCarryingBaggle()[!scala]:Boolean[/!]"
msgstr "[!java]boolean [/!][!c]int [/!]isCarryingBaggle()[!scala]:Boolean[/!]"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:56
msgid "[!java]void [/!]pickupBaggle()"
msgstr "[!java]void [/!]pickupBaggle()"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:57
msgid "[!java]void [/!]dropBaggle()"
msgstr "[!java]void [/!]dropBaggle()"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:58
#: src/plm/universe/bugglequest/BuggleWorld.html:72
#: src/plm/universe/bugglequest/BuggleWorld.html:73
#: src/plm/universe/bugglequest/BuggleWorld.html:74
#: src/plm/universe/bugglequest/BuggleWorld.html:75
#: src/plm/universe/bugglequest/BuggleWorld.html:76
#: src/plm/universe/bugglequest/BuggleWorld.html:77
#: src/plm/universe/bugglequest/BuggleWorld.html:78
#: src/plm/universe/bugglequest/BuggleWorld.html:79
#: src/plm/universe/bugglequest/BuggleWorld.html:80
#: src/plm/universe/bugglequest/BuggleWorld.html:81
#: src/plm/universe/bugglequest/BuggleWorld.html:82
#: src/plm/universe/bugglequest/BuggleWorld.html:83
#: src/plm/universe/bugglequest/BuggleWorld.html:84
#: src/lessons/welcome/Main.html:9 src/lessons/welcome/Main.html:92
#: src/lessons/welcome/Main.html:175 src/lessons/welcome/Main.html:255
#: src/lessons/welcome/Main.html:349 src/lessons/welcome/Main.html:429
#: src/lessons/welcome/Main.html:469
#: src/plm/universe/turtles/TurtleWorld.html:82
#: src/plm/universe/turtles/TurtleWorld.html:83
#: src/plm/universe/turtles/TurtleWorld.html:84
#: src/plm/universe/turtles/TurtleWorld.html:85
#: src/plm/universe/turtles/TurtleWorld.html:86
#: src/plm/universe/turtles/TurtleWorld.html:87
#: src/plm/universe/turtles/TurtleWorld.html:88
#: src/plm/universe/turtles/TurtleWorld.html:89
#: src/plm/universe/turtles/TurtleWorld.html:90
#: src/plm/universe/turtles/TurtleWorld.html:91
#: src/plm/universe/turtles/TurtleWorld.html:92
#: src/plm/universe/turtles/TurtleWorld.html:93
#: src/plm/universe/turtles/TurtleWorld.html:94
msgid "&nbsp;"
msgstr "&nbsp;"

#. type: Content of: <table><tr><td><b>
#: src/plm/universe/bugglequest/BuggleWorld.html:60
msgid "<b>Look for a message"
msgstr "<b>Look க்கு a செய்தி"

#. type: Content of: <table><tr><td><b>
#: src/plm/universe/bugglequest/BuggleWorld.html:60
msgid "Add a message"
msgstr "கூட்டு a செய்தி"

#. type: Content of: <table><tr><td><b>
#: src/plm/universe/bugglequest/BuggleWorld.html:60
msgid "Read the message"
msgstr "Read the செய்தி"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:60
msgid "Erase the message</b>"
msgstr "Erase the message</b>"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:61
msgid "[!java]boolean [/!][!c]int [/!]isOverMessage()[!scala]:Boolean[/!]"
msgstr "[!java]boolean [/!][!c]int [/!]isOverMessage()[!scala]:Boolean[/!]"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:62
msgid ""
"[!java]void [/!]writeMessage([!java]String [/!][!c]char* "
"[/!]msg[!scala]:String[/!])"
msgstr ""
"[!java]void [/!]writeMessage([!java]String [/!][!c]char* [/!]msg[!scala]:"
"String[/!])"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:63
msgid "[!java]String [/!][!c]char* [/!]readMessage()[!scala]:String[/!]"
msgstr "[!java]String [/!][!c]char* [/!]readMessage()[!scala]:String[/!]"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:64
msgid "[!java]void [/!]clearMessage()"
msgstr "[!java]void [/!]clearMessage()"

#. type: Content of: <h2>
#: src/plm/universe/bugglequest/BuggleWorld.html:69
#: src/plm/universe/turtles/TurtleWorld.html:79
msgid "Valid colors"
msgstr "Valid colors"

#. type: Content of: <table><tr><td><table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:71
#: src/plm/universe/bugglequest/BuggleWorld.html:89
msgid "Name in [!thelang]"
msgstr "பெயர் in [!thelang]"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:71
#: src/plm/universe/turtles/TurtleWorld.html:81
msgid "Color"
msgstr "Color"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:72
#: src/plm/universe/turtles/TurtleWorld.html:82
msgid "[!scala|java|python]Color.[/!]black"
msgstr "[!scala|java|python]Color.[/!]black"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:73
#: src/plm/universe/turtles/TurtleWorld.html:83
msgid "[!scala|java|python]Color.[/!]blue"
msgstr "[!scala|java|python]Color.[/!]blue"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:74
#: src/plm/universe/turtles/TurtleWorld.html:84
msgid "[!scala|java|python]Color.[/!]cyan"
msgstr "[!scala|java|python]Color.[/!]cyan"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:75
#: src/plm/universe/turtles/TurtleWorld.html:85
msgid "[!scala|java|python]Color.[/!]darkGray"
msgstr "[!scala|java|python]Color.[/!]darkGray"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:76
#: src/plm/universe/turtles/TurtleWorld.html:86
msgid "[!scala|java|python]Color.[/!]gray"
msgstr "[!scala|java|python]Color.[/!]gray"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:77
#: src/plm/universe/turtles/TurtleWorld.html:87
msgid "[!scala|java|python]Color.[/!]green"
msgstr "[!scala|java|python]Color.[/!]green"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:78
#: src/plm/universe/turtles/TurtleWorld.html:88
msgid "[!scala|java|python]Color.[/!]lightGray"
msgstr "[!scala|java|python]Color.[/!]lightGray"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:79
#: src/plm/universe/turtles/TurtleWorld.html:89
msgid "[!scala|java|python]Color.[/!]magenta"
msgstr "[!scala|java|python]Color.[/!]magenta"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:80
#: src/plm/universe/turtles/TurtleWorld.html:90
msgid "[!scala|java|python]Color.[/!]orange"
msgstr "[!scala|java|python]Color.[/!]orange"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:81
#: src/plm/universe/turtles/TurtleWorld.html:91
msgid "[!scala|java|python]Color.[/!]pink"
msgstr "[!scala|java|python]Color.[/!]pink"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:82
#: src/plm/universe/turtles/TurtleWorld.html:92
msgid "[!scala|java|python]Color.[/!]red"
msgstr "[!scala|java|python]Color.[/!]red"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:83
#: src/plm/universe/turtles/TurtleWorld.html:93
msgid "[!scala|java|python]Color.[/!]white"
msgstr "[!scala|java|python]Color.[/!]white"

#. type: Content of: <table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:84
#: src/plm/universe/turtles/TurtleWorld.html:94
msgid "[!scala|java|python]Color.[/!]yellow"
msgstr "[!scala|java|python]Color.[/!]yellow"

#. type: Content of: <table><tr><td><h2>
#: src/plm/universe/bugglequest/BuggleWorld.html:87
msgid "Valid directions"
msgstr "Valid directions"

#. type: Content of: <table><tr><td><table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:89
msgid "Meaning"
msgstr "Meaning"

#. type: Content of: <table><tr><td><table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:90
msgid "[!scala|java|python]Direction.[/!]NORTH"
msgstr "[!scala|java|python]Direction.[/!]NORTH"

#. type: Content of: <table><tr><td><table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:90
msgid "Pointing North"
msgstr "Pointing வடக்கு"

#. type: Content of: <table><tr><td><table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:91
msgid "[!scala|java|python]Direction.[/!]EAST"
msgstr "[!scala|java|python]Direction.[/!]EAST"

#. type: Content of: <table><tr><td><table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:91
msgid "Pointing East"
msgstr "Pointing கிழக்கு"

#. type: Content of: <table><tr><td><table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:92
msgid "[!scala|java|python]Direction.[/!]SOUTH"
msgstr "[!scala|java|python]Direction.[/!]SOUTH"

#. type: Content of: <table><tr><td><table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:92
msgid "Pointing South"
msgstr "Pointing தெற்கு"

#. type: Content of: <table><tr><td><table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:93
msgid "[!scala|java|python]Direction.[/!]WEST"
msgstr "[!scala|java|python]Direction.[/!]WEST"

#. type: Content of: <table><tr><td><table><tr><td>
#: src/plm/universe/bugglequest/BuggleWorld.html:93
msgid "Pointing West"
msgstr "Pointing மேற்கு"

#. type: Content of: <h2>
#: src/plm/universe/bugglequest/BuggleWorld.html:97
msgid "Note on exceptions"
msgstr "குறிப்பு on exceptions"

#. type: Content of: outside any tag (error?)
#: src/plm/universe/bugglequest/BuggleWorld.html:98
msgid ""
"Regular buggles throw a BuggleWallException exception if you ask them to "
"traverse a wall.  They throw a NoBaggleUnderBuggleException exception if you "
"ask them to pickup a baggle from an empty cell, or a "
"AlreadyHaveBaggleException exception if they already carry a baggle.  Trying "
"to drop a baggle on a cell already containing one throws an "
"AlreadyHaveBaggleException exception.  Dropping a baggle when you have none "
"throws a DontHaveBaggleException."
msgstr ""
"Regular buggles throw a BuggleWallException exception if you ask them பெறுநர் "
"traverse a wall.  They throw a NoBaggleUnderBuggleException exception if you "
"ask them பெறுநர் pickup a baggle இருந்து an வெறுமை cell, or a "
"AlreadyHaveBaggleException exception if they already carry a baggle.  Trying "
"பெறுநர் drop a baggle on a கலன் already containing one throws an "
"AlreadyHaveBaggleException exception.  Dropping a baggle when you have "
"எதுவுமில்லை throws a DontHaveBaggleException."

#. type: Content of: <p>
#: src/plm/universe/bugglequest/BuggleWorld.html:105
msgid ""
"SimpleBuggles (ie, the one used in first exercises) display an error message "
"on problem so that you don't need to know what an exception is."
msgstr ""
"SimpleBuggles (ie, the one used in first exercises) காட்சி an பிழை செய்தி on "
"problem so that you don't need பெறுநர் know what an exception is."

#. type: Content of: <h1>
#: src/plm/universe/bat/BatWorld.html:2
msgid "BatWorld"
msgstr "BatWorld"

#. type: Content of: <p>
#: src/plm/universe/bat/BatWorld.html:4
msgid ""
"This world is a simplistic testing environment largely inspired from the "
"http://codingbat.com invented by Nick Parlente."
msgstr ""
"This world is a simplistic testing சூழல் largely inspired இருந்து the http://"
"codingbat.com invented by Nick Parlente."

#. type: Content of: <p>
#: src/plm/universe/bat/BatWorld.html:7
msgid ""
"The typical exercises are very short ones, aiming at improving the tactical "
"programming abilities of the students. That is to say that you will be "
"presented a quite long list of very little exercises about rather simple "
"things. The idea is to train you on these issues until they become automatic "
"to you."
msgstr ""
"The typical exercises அரே very குறுக்கு ones, aiming at improving the "
"tactical programming abilities of the students. That is பெறுநர் say that you "
"will be presented a quite long பட்டியல் of very little exercises பற்றி rather "
"simple things. The idea is பெறுநர் train you on these issues until they "
"become automatic பெறுநர் you."

#. type: Content of: <p>
#: src/plm/universe/bat/BatWorld.html:13
msgid ""
"In contrary to the other worlds, the BatWorld does not provide any fancy "
"abstraction nor visualization. You have to fill a function, which gets "
"called for a bunch of parameter sets, and that's it."
msgstr ""
"In contrary பெறுநர் the மற்றொன்று worlds, the BatWorld does not provide any "
"fancy abstraction nor visualization. You have பெறுநர் fill a function, which "
"gets called க்கு a bunch of கூறளவு sets, and that's it."

#. type: Content of: <p>
#: src/plm/universe/bat/BatWorld.html:17
msgid ""
"For more information, you should refer to the CodingBat.com documentation, "
"which contains for example a very useful documentation on boolean operators: "
"http://codingbat.com/doc/ifboolean.html"
msgstr ""
"க்கு more information, you should refer பெறுநர் the CodingBat.com "
"documentation, which contains க்கு example a very useful ஆவணப்படுத்துதல் on "
"boolean operators: http://codingbat.com/doc/ifboolean.html"

#. type: Content of: <h3>
#: src/lessons/welcome/Main.html:2 src/lessons/welcome/short_desc.html:2
msgid "First steps"
msgstr "First படிகள்"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/Main.html:4
msgid ""
"This first lesson will lead your first steps in programming. It is intended "
"for beginners. List of seen notions per exercise:"
msgstr ""
"This first பாடம் will ஈயம் your first படிகள் in programming. It is intended க்கு "
"beginners. பட்டியல் of seen notions per exercise:"

#. type: Content of: <h2>
#: src/lessons/welcome/Main.html:10 src/lessons/welcome/Main.html:93
#: src/lessons/welcome/Main.html:176 src/lessons/welcome/Main.html:256
#: src/lessons/welcome/Main.html:350 src/lessons/welcome/Main.html:430
#: src/lessons/welcome/Main.html:470
#: src/lessons/welcome/instructions/Instructions.html:2
msgid "Instructions"
msgstr "Instructions"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/Main.html:11 src/lessons/welcome/Main.html:94
#: src/lessons/welcome/Main.html:177 src/lessons/welcome/Main.html:257
#: src/lessons/welcome/Main.html:351 src/lessons/welcome/Main.html:431
#: src/lessons/welcome/Main.html:471
msgid "Comments"
msgstr "Comments"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/Main.html:12 src/lessons/welcome/Main.html:95
#: src/lessons/welcome/Main.html:178 src/lessons/welcome/Main.html:258
#: src/lessons/welcome/Main.html:352 src/lessons/welcome/Main.html:432
#: src/lessons/welcome/Main.html:472
msgid "Conditionals/ Expressions"
msgstr "Conditionals/ Expressions"

#. type: Content of: <h2>
#: src/lessons/welcome/Main.html:13 src/lessons/welcome/Main.html:79
#: src/lessons/welcome/Main.html:96 src/lessons/welcome/Main.html:179
#: src/lessons/welcome/Main.html:259 src/lessons/welcome/Main.html:353
#: src/lessons/welcome/Main.html:433 src/lessons/welcome/Main.html:473
#: src/lessons/welcome/loopwhile/LoopWhile.html:2
msgid "While loops"
msgstr "While வளையங்கள்"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/Main.html:14 src/lessons/welcome/Main.html:97
#: src/lessons/welcome/Main.html:180 src/lessons/welcome/Main.html:260
#: src/lessons/welcome/Main.html:354 src/lessons/welcome/Main.html:434
#: src/lessons/welcome/Main.html:474
msgid "Variables"
msgstr "மாறிகள்"

#. type: Content of: <h2>
#: src/lessons/welcome/Main.html:15 src/lessons/welcome/Main.html:98
#: src/lessons/welcome/Main.html:134 src/lessons/welcome/Main.html:181
#: src/lessons/welcome/Main.html:261 src/lessons/welcome/Main.html:355
#: src/lessons/welcome/Main.html:435 src/lessons/welcome/Main.html:475
#: src/lessons/welcome/loopfor/LoopFor.html:2
msgid "For loops"
msgstr "க்கு வளையங்கள்"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/Main.html:16 src/lessons/welcome/Main.html:99
#: src/lessons/welcome/Main.html:182 src/lessons/welcome/Main.html:262
#: src/lessons/welcome/Main.html:356 src/lessons/welcome/Main.html:436
#: src/lessons/welcome/Main.html:476
msgid "Do/While loops"
msgstr "Do/While வளையங்கள்"

#. type: Content of: <h2>
#: src/lessons/welcome/Main.html:17 src/lessons/welcome/Main.html:100
#: src/lessons/welcome/Main.html:162 src/lessons/welcome/Main.html:183
#: src/lessons/welcome/Main.html:263 src/lessons/welcome/Main.html:357
#: src/lessons/welcome/Main.html:437 src/lessons/welcome/Main.html:477
#: src/lessons/welcome/methods/basics/Methods.html:2
msgid "Methods"
msgstr "முறைகள்"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/Main.html:18 src/lessons/welcome/Main.html:101
#: src/lessons/welcome/Main.html:184 src/lessons/welcome/Main.html:264
#: src/lessons/welcome/Main.html:358 src/lessons/welcome/Main.html:438
#: src/lessons/welcome/Main.html:478
msgid "Switch"
msgstr "ஆளி, நிலைமாறி"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/Main.html:19 src/lessons/welcome/Main.html:102
#: src/lessons/welcome/Main.html:185 src/lessons/welcome/Main.html:265
#: src/lessons/welcome/Main.html:359 src/lessons/welcome/Main.html:439
#: src/lessons/welcome/Main.html:479
msgid "Arrays"
msgstr "Arrays"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/Main.html:23
msgid "Welcome in the Buggles' World"
msgstr "Welcome in the Buggles' World"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/Main.html:37
msgid "Java Instructions"
msgstr "சாவா Instructions"

#. type: Content of: <h2>
#: src/lessons/welcome/Main.html:51
#: src/lessons/welcome/instructions/InstructionsDrawG.html:2
msgid "Writing more complex programs"
msgstr "Writing more அணைவு திட்டங்கள்"

#. type: Content of: <h2>
#: src/lessons/welcome/Main.html:65
#: src/lessons/welcome/conditions/Conditions.html:2
msgid "Conditional instructions"
msgstr "Conditional instructions"

#. type: Content of: <h2>
#: src/lessons/welcome/Main.html:106
#: src/lessons/welcome/loopwhile/BaggleSeeker.html:2
msgid "Baggle Seeking"
msgstr "Baggle Seeking"

#. type: Content of: <h2>
#: src/lessons/welcome/Main.html:120
#: src/lessons/welcome/variables/Variables.html:2
msgid "Storing and manipulating data"
msgstr "Storing and manipulating தகவல்கள்"

#. type: Content of: <h2>
#: src/lessons/welcome/Main.html:148
#: src/lessons/welcome/loopdowhile/LoopDoWhile.html:2
msgid "Do .. while loops"
msgstr "Do .. while வளையங்கள்"

#. type: Content of: <h2>
#: src/lessons/welcome/Main.html:188
#: src/lessons/welcome/methods/basics/MethodsDogHouse.html:2
msgid "Building methodically"
msgstr "Building methodically"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/Main.html:202
msgid "Methods returning a result"
msgstr "முறைகள் returning a result"

#. type: Content of: <h2>
#: src/lessons/welcome/Main.html:215
#: src/lessons/welcome/methods/args/MethodsArgs.html:2
msgid "Methods with parameters"
msgstr "முறைகள் with parameters"

#. type: Content of: <h2>
#: src/lessons/welcome/Main.html:229
#: src/lessons/welcome/methods/picture/PictureMono1.html:2
msgid "Methodically drawing"
msgstr "Methodically drawing"

#. type: Content of: <h2>
#: src/lessons/welcome/Main.html:242
#: src/lessons/welcome/methods/picture/PictureMono2.html:2
msgid "Methodically drawing (only bigger)"
msgstr "Methodically drawing (only bigger)"

#. type: Content of: <h2>
#: src/lessons/welcome/Main.html:268
#: src/lessons/welcome/methods/picture/PictureMono3.html:2
msgid "Drawing bigger and bigger"
msgstr "Drawing bigger and bigger"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/Main.html:281
msgid "Even more pattern to draw"
msgstr "இரட்டை more pattern பெறுநர் draw"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/Main.html:295
msgid "Buggle Dance Revolution"
msgstr "Buggle Dance சுற்று"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/Main.html:309
msgid "Buggle Dance Revolution 2"
msgstr "Buggle Dance சுற்று 2"

#. type: Content of: <h2>
#: src/lessons/welcome/Main.html:323
#: src/lessons/welcome/methods/slug/SlugHunting.html:2
msgid "Slug Hunting"
msgstr "குருட்டடி Hunting"

#. type: Content of: <h2>
#: src/lessons/welcome/Main.html:336
#: src/lessons/welcome/methods/slug/SlugTracking.html:2
msgid "Slug Tracking"
msgstr "குருட்டடி Tracking"

#. type: Content of: <h2>
#: src/lessons/welcome/Main.html:362 src/lessons/welcome/traversal/Snake.html:2
msgid "Snake World"
msgstr "Snake World"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/Main.html:376
msgid "Knitting and Arrays"
msgstr "Knitting and Arrays"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/Main.html:390
msgid "Knitting, Arrays and modulos"
msgstr "Knitting, Arrays and modulos"

#. type: Content of: <h2>
#: src/lessons/welcome/Main.html:403
#: src/lessons/welcome/traversal/column/TraversalByColumn.html:2
msgid "Traversal by column"
msgstr "Traversal by நெடுவரிசை"

#. type: Content of: <h2>
#: src/lessons/welcome/Main.html:416
#: src/lessons/welcome/traversal/line/TraversalByLine.html:2
msgid "Traversal by line"
msgstr "Traversal by வரி"

#. type: Content of: <h2>
#: src/lessons/welcome/Main.html:442
#: src/lessons/welcome/traversal/zigzag/TraversalZigZag.html:2
msgid "Zig-zag traversal"
msgstr "Zig-zag traversal"

#. type: Content of: <h2>
#: src/lessons/welcome/Main.html:455
#: src/lessons/welcome/traversal/diagonal/TraversalDiagonal.html:2
msgid "Diagonal Traversal"
msgstr "மூலைவிட்டம் Traversal"

#. type: Content of: <h2>
#: src/lessons/welcome/Main.html:483
msgid "Meaning of the symbols"
msgstr "Meaning of the குறியிடுகள்"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/Main.html:486
msgid "Introducing the concept"
msgstr "Introducing the concept"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/Main.html:489
msgid "Working on the concept"
msgstr "Working on the concept"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/Main.html:492
msgid "Concept assumed mastered"
msgstr "Concept assumed mastered"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/Main.html:495
msgid "Concept not mandated by the exercise"
msgstr "Concept not mandated by the exercise"

#. type: Content of: <h2>
#: src/lessons/welcome/Main.html:501
msgid "What will I learn?"
msgstr "What will I learn?"

#. type: Content of: <p>
#: src/lessons/welcome/Main.html:502
msgid ""
"You will learn the very basics of programming. At least, you will be "
"presented the most important concepts, allowing you to read most simple "
"algorithms. You will not be able to write or read full programs because you "
"will still not know about objects, but you will master what is called "
"\"Tactical programming\", meaning that you will master the syntax enough to "
"not have any issue with it, allowing you to focus on the fundamental "
"problems of what you want to solve instead of struggling with syntactic "
"difficulties."
msgstr ""
"You will learn the very basics of programming. At least, you will be "
"presented the பெரும்பாலானவை important concepts, allowing you பெறுநர் read "
"பெரும்பாலானவை simple algorithms. You will not be able பெறுநர் write or read "
"full திட்டங்கள் because you will still not know பற்றி objects, but you will "
"master what is called \"Tactical programming\", meaning that you will master "
"the syntax enough பெறுநர் not have any சிக்கல் with it, allowing you பெறுநர் குவி"
" on the fundamental problems of what you want பெறுநர் solve instead of "
"struggling with syntactic difficulties."

#. type: Content of: <p>
#: src/lessons/welcome/short_desc.html:3
msgid ""
"This first lesson will lead your first steps in programming. It is intended "
"for beginners."
msgstr ""
"This first பாடம் will ஈயம் your first படிகள் in programming. It is intended க்கு "
"beginners."

#. type: Content of: <p>
#: src/lessons/welcome/short_desc.html:6
msgid ""
"If you are not sure, go for this lesson that will teach you the bases of "
"programming."
msgstr ""
"If you அரே not sure, go க்கு this பாடம் that will teach you the bases of "
"programming."

#. type: Content of: <h2>
#: src/lessons/welcome/environment/Environment.html:3
msgid "Welcome to the PLM"
msgstr "Welcome பெறுநர் the PLM"

#. type: Content of: <p>
#: src/lessons/welcome/environment/Environment.html:5
msgid ""
"The goal of this first exercise is to instruct your buggle to move forward "
"by one step. Switch between the views on the right for more "
"info. <i>World</i> depicts the world as it is now, while <i>Objective</i> "
"depicts what you should get."
msgstr ""
"The goal of this first exercise is பெறுநர் instruct your buggle பெறுநர் move "
"forward by one step. ஆளி, நிலைமாறி between the காட்சிகள் on the வலது க்கு more "
"info. <i>World</i> depicts the world அச் it is now, while <i>Objective</i> "
"depicts what you should get."

#. type: Content of: <h3>
#: src/lessons/welcome/environment/Environment.html:10
msgid "My <i>buggle</i>? What is this??"
msgstr "My <i>buggle</i>? What is this??"

#. type: Content of: <p>
#: src/lessons/welcome/environment/Environment.html:12
msgid ""
"Buggles are little animals obeying any order you may give them. Currently, "
"you must use the [!thelang/] programming language for that, but you can "
"change the language from the menu, or by clicking the icon in the status "
"bar."
msgstr ""
"Buggles அரே little animals obeying any order you சி-வைகாசி give them. "
"Currently, you must use the [!thelang/] programming மொழி க்கு that, but you "
"can change the மொழி இருந்து the menu, or by clicking the icon in the நிலை bar."

#. type: Content of: <h3>
#: src/lessons/welcome/environment/Environment.html:17
msgid "How to proceed?"
msgstr "How பெறுநர் proceed?"

#. type: Content of: <p>
#: src/lessons/welcome/environment/Environment.html:19
msgid "Write your program in the \"Code\" pane. It should read as follows:"
msgstr "Write your திட்டம் in the \"Code\" pane. It should read அச் follows:"

#. type: Content of: <pre>
#: src/lessons/welcome/environment/Environment.html:20
#: src/lessons/welcome/instructions/Instructions.html:53
#, no-wrap
msgid "[!java|scala|python]forward()[!java];[/!][/!][!c]stepForward();[/!]"
msgstr "[!java|scala|python]forward()[!java];[/!][/!][!c]stepForward();[/!]"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/environment/Environment.html:21
#: src/lessons/welcome/loopfor/LoopFor.html:57
#: src/lessons/welcome/bdr/BDR.html:189
msgid "[!java|c]"
msgstr "[!java|c]"

#. type: Content of: <p>
#: src/lessons/welcome/environment/Environment.html:21
msgid ""
"Do not forget the final <code>;</code> which tells the compiler that the "
"instruction is over (yes, computers are so dumb that they cannot "
"<i>guess</i> obvious stuff like this)."
msgstr ""
"Do not forget the final <code>;</code> which tells the தொகுப்பி that the "
"instruction is வீச்சலகு (yes, computers அரே so dumb that they cannot <i>guess</"
"i> obvious stuff like this)."

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/environment/Environment.html:23
#: src/lessons/welcome/variables/Variables.html:78
#: src/lessons/welcome/variables/Variables.html:152
#: src/lessons/welcome/loopfor/LoopFor.html:80
#: src/lessons/welcome/loopdowhile/LoopDoWhile.html:54
#: src/lessons/welcome/loopdowhile/Poucet2.html:25
#: src/lessons/welcome/array/basics/Array1.html:183
#: src/lessons/welcome/array/basics/Array1.html:209
#: src/lessons/welcome/methods/args/MethodsArgs.html:66
#: src/lessons/welcome/methods/picture/MethodsPicture.html:40
#: src/lessons/welcome/bdr/BDR.html:61 src/lessons/welcome/bdr/BDR.html:196
#: src/lessons/welcome/bdr/BDR2.html:130
#: src/lessons/turmites/langton/Langton.html:32
#: src/lessons/turmites/helloturmite/HelloTurmite.html:65
#: src/lessons/sort/basic/comb/AlgCombSort.html:39
#: src/lessons/recursion/cons/universe/ConsWorld.html:35
#: src/lessons/recursion/cons/Length.html:8
#: src/lessons/recursion/lego/square/FourSquare.html:46
#: src/lessons/maze/pledge/PledgeMaze.html:68
#: src/lessons/welcome/bat/bool1/Max1020.html:6
msgid "[/!]"
msgstr "[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/environment/Environment.html:25
msgid "Once done, click on Run to execute your code."
msgstr "Once done, click on ஓடு பெறுநர் execute your code."

#. type: Content of: <p>
#: src/lessons/welcome/environment/Environment.html:27
msgid ""
"If your code contains errors, that's perfectly OK: Even talented programmers "
"struggle on their code.  The computer will display error messages in the "
"console to help you fixing them. These messages may sound scary at first "
"glance, but don't panic. The compiler is only somehow limited in its "
"communication abilities, but it's not mean. If you look closer, the solution "
"to solve your issue is written somewhere in those cryptic messages. You will "
"see, with a bit of habit, we get used to it."
msgstr ""
"If your குறியீடு contains errors, that's perfectly OK: இரட்டை talented "
"programmers struggle on their code.  The கணிப்பொறி, கணிணி will காட்சி பிழை "
"செய்திகள் in the console பெறுநர் உதவி you fixing them. These செய்திகள் சி-வைகாசி "
"sound scary at first glance, but don't panic. The தொகுப்பி is only somehow "
"limited in its communication abilities, but it's not mean. If you look "
"closer, the நீர்மக்கூழ் பெறுநர் solve your சிக்கல் is written somewhere in those "
"cryptic messages. You will see, with a துணுக்கு of habit, we get used பெறுநர் "
"it."

#. type: Content of: <h3>
#: src/lessons/welcome/environment/Environment.html:36
msgid "But that's [!thelang]!"
msgstr "But that's [!thelang]!"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/environment/Environment.html:37
msgid ""
"Currently, the PLM is configured to accept [!thelang] programs, but it can "
"also accept [!java]Python or Scala[/!][!scala]Java or "
"Python[/!][!python]Java or Scala[/!] programs.  Either click on the language "
"icon at the very bottom right of the window, or head to the "
"<tt>Language/Computer</tt> menu item to change it."
msgstr ""
"Currently, the PLM is configured பெறுநர் ஏற்றுக்கொள் [!thelang] programs, but it "
"can also ஏற்றுக்கொள் [!java]Python or Scala[/!][!scala]Java or Python[/!]"
"[!python]Java or Scala[/!] programs.  Either click on the மொழி icon at the "
"very கீழே வலது of the window, or head பெறுநர் the <tt>Language/Computer</tt> "
"பட்டியல் item பெறுநர் change it."

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/instructions/Instructions.html:4
msgid ""
"Congratulations! You just wrote your first program! You got the idea now: "
"programming is nothing more than giving simple instructions to the computer "
"that blindly apply them. The main difficulty is to explain stuff to "
"something as stupid as a computer..."
msgstr ""
"Congratulations! You just wrote your first program! You got the idea now: "
"programming is nothing more than giving simple instructions பெறுநர் the "
"கணிப்பொறி, கணிணி that blindly இடு them. The main difficulty is பெறுநர் explain "
"stuff பெறுநர் something அச் stupid அச் a computer..."

#. type: Content of: <p>
#: src/lessons/welcome/instructions/Instructions.html:9
msgid ""
"Our second program will be a bit more complicated, but not much. The goal "
"for your buggle is simply to draw a house (a box), and hide inside. Check "
"the objective world to see exactly what this means."
msgstr ""
"Our second திட்டம் will be a துணுக்கு more complicated, but not much. The goal "
"க்கு your buggle is simply பெறுநர் draw a house (a box), and மறை inside. சரிபார்"
" the objective world பெறுநர் see exactly what this means."

#. type: Content of: <p>
#: src/lessons/welcome/instructions/Instructions.html:14
msgid ""
"For that, you will need <code>forward()</code>, <code>left()</code> and "
"<code>right()</code>. Use your brush to mark the ground as you walk. Start "
"marking the ground with <code>brushDown()</code>, and stop it with "
"<code>brushUp()</code> afterward (e.g., to enter your house without marking "
"its ground)."
msgstr ""
"க்கு that, you will need <code>forward()</code>, <code>left()</code> and "
"<code>right()</code>. Use your மின்தொடி பெறுநர் mark the ground அச் you walk. "
"தொடங்கு marking the ground with <code>brushDown()</code>, and நிறுத்து it with "
"<code>brushUp()</code> afterward (e.g., பெறுநர் enter your house without "
"marking its ground)."

#. type: Content of: <h3>
#: src/lessons/welcome/instructions/Instructions.html:20
msgid "What exactly is a program?"
msgstr "What exactly is a program?"

#. type: Content of: <p>
#: src/lessons/welcome/instructions/Instructions.html:22
msgid ""
"Programs are mainly suites of method calls, which are no more than a list of "
"simple orders given to the machine. It is very similar to a recipe stating "
"<i>Melt the chocolate pieces, add sugar, cool the mix and serve</i>.  "
"[!thelang] wants to have the instructions separated by semi-columns "
"(;)[!python|scala] or by new lines[/!], and followed by parenthesis. Our "
"little receipe would thus be written in the following way[!python|scala] "
"(you can also add semi-columns at the end of the lines, but this is not "
"mandatory)[/!]."
msgstr ""
"திட்டங்கள் அரே mainly suites of method calls, which அரே இல்லை more than a பட்டியல் "
"of simple orders given பெறுநர் the machine. It is very similar பெறுநர் a "
"recipe stating <i>Melt the சாக்லேட் pieces, கூட்டு sugar, cool the mix and "
"serve</i>.  [!thelang] wants பெறுநர் have the instructions separated by semi-"
"columns (;)[!python|scala] or by புதிய lines[/!], and followed by "
"parenthesis. Our little receipe would thus be written in the following way"
"[!python|scala] (you can also கூட்டு semi-columns at the end of the lines, "
"but this is not mandatory)[/!]."

#. type: Content of: <pre>
#: src/lessons/welcome/instructions/Instructions.html:33
#, no-wrap
msgid ""
"meltTheChocolatePieces()[!java|c];[/!]\n"
"addSugar()[!java|c];[/!]\n"
"coolMix()[!java|c];[/!]\n"
"serve()[!java|c];[/!]\n"
msgstr ""
"meltTheChocolatePieces()[!java|c];[/!]\n"
"addSugar()[!java|c];[/!]\n"
"coolMix()[!java|c];[/!]\n"
"serve()[!java|c];[/!]\n"

#. type: Content of: <p>
#: src/lessons/welcome/instructions/Instructions.html:39
msgid ""
"Do not write it all on one line only even if the computer would accept it "
"[!python|scala](provided that you don't omit the semi-columns)[/!]. This is "
"a <b>really bad idea</b>, hindering the readability.  <i>Programs must be "
"written for people to read, and only incidentally for machines to "
"execute,</i> as said Harold Abelson."
msgstr ""
"Do not write it அனைத்தும் on one வரி only இரட்டை if the கணிப்பொறி, கணிணி would "
"ஏற்றுக்கொள் it [!python|scala](provided that you don't omit the semi-columns)"
"[/!]. This is a <b>really bad idea</b>, hindering the readability.  "
"<i>Programs must be written க்கு people பெறுநர் read, and only incidentally க்கு"
" machines பெறுநர் execute,</i> அச் said Harold Abelson."

#. type: Content of: <p>
#: src/lessons/welcome/instructions/Instructions.html:46
msgid ""
"There is a limited set of instructions that buggles understand, and we will "
"eventually learn how to define new ones. For now, there is a method for each "
"button of the interactive control panel. To achieve the same effect than the "
"<b>forward</b> button (making the buggle moving one step forward), you need "
"to write the following in the editor:"
msgstr ""
"There is a limited கணம் of instructions that buggles understand, and we will "
"eventually learn how பெறுநர் define புதிய ones. க்கு now, there is a method க்கு"
" each button of the interactive control panel. பெறுநர் achieve the same விளைவு"
" than the <b>forward</b> button (making the buggle moving one படி forward), "
"you need பெறுநர் write the following in the ஆசிரியர்:"

#. type: Content of: <p>
#: src/lessons/welcome/instructions/Instructions.html:54
msgid ""
"Likewise, to achieve the same effect than the "
"<b>[!java|scala|python]backward[/!][!c]stepBackward[/!]</b>, <b>left</b> and "
"<b>right</b> buttons, you need to use respectively:"
msgstr ""
"Likewise, பெறுநர் achieve the same விளைவு than the <b>[!java|scala|python]"
"backward[/!][!c]stepBackward[/!]</b>, <b>left</b> and <b>right</b> buttons, "
"you need பெறுநர் use respectively:"

#. type: Content of: <pre>
#: src/lessons/welcome/instructions/Instructions.html:58
#, no-wrap
msgid ""
"backward()[!java|c];[/!]\n"
"left()[!java|c];[/!]\n"
"right()[!java|c];[/!]\n"
msgstr ""
"backward()[!java|c];[/!]\n"
"left()[!java|c];[/!]\n"
"right()[!java|c];[/!]\n"

#. type: Content of: <p>
#: src/lessons/welcome/instructions/Instructions.html:63
msgid ""
"The <b>mark</b> button is a bit particular, since it correspond to two "
"methods: the first one moves the pen up while the second moves it down."
msgstr ""
"The <b>mark</b> button is a துணுக்கு particular, since it correspond பெறுநர் "
"two methods: the first one moves the pen மேலே while the second moves it down."

#. type: Content of: <pre>
#: src/lessons/welcome/instructions/Instructions.html:67
#, no-wrap
msgid ""
"brushUp()[!java|c];[/!]\n"
"brushDown()[!java|c];[/!]\n"
msgstr ""
"brushUp()[!java|c];[/!]\n"
"brushDown()[!java|c];[/!]\n"

#. type: Content of: <p>
#: src/lessons/welcome/instructions/Instructions.html:71
msgid ""
"The buggle offers other methods, that are presented from the \"Help/about "
"this world\" menu and will be introduced on need."
msgstr ""
"The buggle offers மற்றொன்று methods, that அரே presented இருந்து the "
"\"Help/about this world\" பட்டியல் and will be introduced on need."

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/instructions/InstructionsDrawG.html:3
msgid ""
"Now that we know how to draw things on the board, we'll enjoy this ability "
"and draw a beautiful G on the board (check Objective panel for details on "
"what is expected)."
msgstr ""
"Now that we know how பெறுநர் draw things on the board, we'll enjoy this திறமை "
"and draw a beautiful G on the board (check Objective panel க்கு details on "
"what is expected)."

#. type: Content of: <p>
#: src/lessons/welcome/instructions/InstructionsDrawG.html:7
msgid ""
"When you write a quite complex program, it is sometimes useful to <b>add "
"comments</b> to simplify the code reviews afterward. Here for example, it's "
"quite easy to get lost in the drawing process, and you may want to add "
"comments like <i>vertical bar done</i> or <i>finished drawing the G. Time to "
"move back to initial position</i>. Commenting your code is almost mandatory "
"if you (or someone else) want to read it afterward, although over-commenting "
"(describing obvious stuff) is a bad idea as the important idea get lost in "
"the noise."
msgstr ""
"When you write a quite அணைவு program, it is sometimes useful பெறுநர் <b>add "
"comments</b> பெறுநர் simplify the குறியீடு reviews afterward. Here க்கு "
"example, it's quite easy பெறுநர் get lost in the drawing process, and you "
"சி-வைகாசி want பெறுநர் கூட்டு comments like <i>vertical மதுக்கூடம் done</i> or "
"<i>finished drawing the G. Time பெறுநர் move பின் பெறுநர் initial position</i>. "
"Commenting your குறியீடு is almost mandatory if you (or someone else) want "
"பெறுநர் read it afterward, although over-commenting (describing obvious stuff)"
" is a bad idea அச் the important idea get lost in the noise."

#. type: Content of: <p>
#: src/lessons/welcome/instructions/InstructionsDrawG.html:15
msgid ""
"There is [!java]three[/!][!python|scala|c]two[/!] types of comments in "
"[!thelang], instructing the "
"[!java|scala|c]compiler[/!][!python]interpreter[/!] to not read the text you "
"add for humans:"
msgstr ""
"There is [!java]three[/!][!python|scala|c]two[/!] வகைகள் of comments in "
"[!thelang], instructing the [!java|scala|c]compiler[/!][!python]interpreter[/"
"!] பெறுநர் not read the உரை you கூட்டு க்கு humans:"

#. type: Content of: <ul><li>
#: src/lessons/welcome/instructions/InstructionsDrawG.html:19
msgid ""
"<b>Comments on a single line</b>. When the "
"[!java|scala|c]compiler[/!][!python]interpreter[/!] encounters the symbol "
"[!java|scala|c]//[/!][!python]#[/!], it ignores the end of the line."
msgstr ""
"<b>Comments on a ஒற்றை line</b>. When the [!java|scala|c]compiler[/!][!python]"
"interpreter[/!] encounters the symbol [!java|scala|c]//[/!][!python]#[/!], "
"it ignores the end of the line."

#. type: Content of: <ul><li>
#: src/lessons/welcome/instructions/InstructionsDrawG.html:21
msgid ""
"<b>Comments on several lines</b>. The "
"[!java|scala|c]compiler[/!][!python]interpreter[/!] ignores anything placed "
"between [!java|scala|c]the symbols /* and */ even if they are placed on "
"differing lines.[/!] [!python]a line beginning with ''' until the next line "
"ending with '''.[/!]"
msgstr ""
"<b>Comments on several lines</b>. The [!java|scala|c]compiler[/!][!python]"
"interpreter[/!] ignores anything placed between [!java|scala|c]the குறியிடுகள்"
" /* and */ இரட்டை if they அரே placed on differing lines.[/!] [!python]a வரி "
"beginning with ''' until the அடுத்தது வரி ending with '''.[/!]"

#. type: Content of: <pre>
#: src/lessons/welcome/instructions/InstructionsDrawG.html:28
#, no-wrap
msgid ""
"methodCallReadByThe[!java|scala|c]Compiler[/!][!python]Interpreter[/!]()[!java|c];[/!] "
"<span class=\"comment\">[!java|scala|c]//[/!][!python]#[/!] all this is "
"ignored</span>\n"
"otherCall()[!java|c];[/!] [!java|scala|c]<span class=\"comment\">/* This "
"is</span>\n"
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "
"<span class=\"comment\"> also ignored */</span>[/!]\n"
"[!python]<span class=\"comment\">''' This is</span>\n"
"<span class=\"comment\">also ignored  '''</span>[/!]\n"
"yetAnotherCall()[!java|c];[/!]\n"
msgstr ""
"methodCallReadByThe[!java|scala|c]Compiler[/!][!python]Interpreter[/!]()"
"[!java|c];[/!] <span class=\"comment\">[!java|scala|c]//[/!][!python]#[/!] "
"அனைத்தும் this is ignored</span>\n"
"otherCall()[!java|c];[/!] [!java|scala|c]<span class=\"comment\">/* This "
"is</span>\n"
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
" <span class=\"comment\"> also ignored */</span>[/!]\n"
"[!python]<span class=\"comment\">''' This is</span>\n"
"<span class=\"comment\">also ignored  '''</span>[/!]\n"
"yetAnotherCall()[!java|c];[/!]\n"

#. type: Content of: <p>
#: src/lessons/welcome/instructions/InstructionsDrawG.html:35
msgid ""
"There is a third kind of comments in Java, between /** and */, which are "
"read by a specific program called JavaDoc to generate automatically the "
"documentation explaining how to use the code. These comments must follow a "
"very precise formalism."
msgstr ""
"There is a third kind of comments in Java, between /** and */, which அரே "
"read by a specific திட்டம் called JavaDoc பெறுநர் generate automatically the "
"ஆவணப்படுத்துதல் explaining how பெறுநர் use the code. These comments must follow "
"a very precise formalism."

#. type: Content of: <p>
#: src/lessons/welcome/instructions/InstructionsDrawG.html:40
msgid ""
"The comments on several lines are often used to document how to use the "
"code, while others are more used to describe how this code works."
msgstr ""
"The comments on several வரிகள் அரே often used பெறுநர் ஆவணம் how பெறுநர் use the "
"code, while others அரே more used பெறுநர் describe how this குறியீடு works."

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/conditions/Conditions.html:4
msgid ""
"Programs made of simple suite of instructions similar to previous exercise "
"are quite boring. They always do the same thing, and cannot react to "
"external conditions. A <b>conditional</b> let the program adapt by doing "
"something like <i>if it's raining, take an umbrella</i>."
msgstr ""
"திட்டங்கள் made of simple suite of instructions similar பெறுநர் previous "
"exercise அரே quite boring. They எப்போதும் do the same thing, and cannot react "
"பெறுநர் external conditions. A <b>conditional</b> let the திட்டம் adapt by "
"doing something like <i>if it's raining, take an umbrella</i>."

#. type: Content of: <p>
#: src/lessons/welcome/conditions/Conditions.html:9
msgid "The [!thelang] syntax is the following:"
msgstr "The [!thelang] syntax is the following:"

#. type: Content of: <pre>
#: src/lessons/welcome/conditions/Conditions.html:11
#, no-wrap
msgid ""
"[!java|scala|c]if (<b>condition</b>) {\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>whatToDoIfTrue();</b>\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>whatToDoNextIfTrue();</b>\n"
"}[/!][!python]if <b>condition</b>:\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>whatToDoIfTrue()</b>\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>whatToDoNextIfTrue()</b>[/!]\n"
"<b>whatToDoAnyway()[!java|c];[/!]</b>"
msgstr ""
"[!java|scala|c]if (<b>condition</b>) {\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>whatToDoIfTrue();</b>\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>whatToDoNextIfTrue();</b>\n"
"}[/!][!python]if <b>condition</b>:\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>whatToDoIfTrue()</b>\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>whatToDoNextIfTrue()</b>[/!]\n"
"<b>whatToDoAnyway()[!java|c];[/!]</b>"

#. type: Content of: <p>
#: src/lessons/welcome/conditions/Conditions.html:19
msgid ""
"If the condition is true, the code of the next block will be executed and "
"then it will continue with the rest of the code.  If the condition is false, "
"the next block is ignored and the execution continues after it.  The "
"conditional block can contain several instructions, it can even contain "
"other tests, along with their sub-blocks."
msgstr ""
"If the condition is true, the குறியீடு of the அடுத்தது block will be executed "
"and then it will தொடரவும் with the rest of the code.  If the condition is "
"false, the அடுத்தது block is ignored and the execution continues after it.  "
"The conditional block can contain several instructions, it can இரட்டை contain "
"மற்றொன்று tests, along with their sub-blocks."

#. type: Content of: <p>
#: src/lessons/welcome/conditions/Conditions.html:23
msgid ""
"In this example, the instructions <code>whatToDoIfTrue()</code> and "
"<code>whatToDoNextIfTrue()</code> will be executed if and only if the "
"condition is true, while the instruction <code>whatToDoAnyway()</code> will "
"be executed whether or not the condition is true."
msgstr ""
"In this example, the instructions <code>whatToDoIfTrue()</code> and "
"<code>whatToDoNextIfTrue()</code> will be executed if and only if the "
"condition is true, while the instruction <code>whatToDoAnyway()</code> will "
"be executed whether or not the condition is true."

#. type: Content of: <p>
#: src/lessons/welcome/conditions/Conditions.html:28
msgid ""
"In [!thelang], the blocks of code are [!java|scala|c]enclosed between curly "
"brackets: a { sign opens the block, while a } sign closes it.  White spaces "
"are not important[/!][!java|c].[/!][!scala], provided that your instructions "
"are still separated with a semi-column or an end of line.[/!] "
"[!java|scala|c]It is still very important to correctly indent your code to "
"keep it readable.[/!] [!python]marked by the indentation: every lines that "
"are a bit shifted to the right with white spaces belong to the block. Quite "
"often, people use 4 spaces for indentation, but it works if you use more or "
"less spaces. Simply, any lines of the block must use the same amount of "
"spaces.  The end of Python code blocks are not marked by any specific char.  "
"Indenting lines starts a block and unindenting ends it. Do not forget the "
"colon (:) at the end of the <code>if</code> line, python needs it to know "
"that a new block begins. The fact that python relies on indentation to "
"delimit blocks is a very good property for beginners: it will force you to "
"adhere to strict code presentation standards.[/!] It is very easy to get "
"lost in your own code if it's not properly indented, so you want to clean it "
"up so that working on your code remains pleasant and productive."
msgstr ""
"In [!thelang], the தொகுதிகள் of குறியீடு அரே [!java|scala|c]enclosed between "
"curly brackets: a { sign திறப்புகள் the block, while a } sign closes it.  வெள்ளை"
" இடங்கள் அரே not important[/!][!java|c].[/!][!scala], provided that your "
"instructions அரே still separated with a semi-column or an end of line.[/!] "
"[!java|scala|c]It is still very important பெறுநர் correctly indent your "
"குறியீடு பெறுநர் keep it readable.[/!] [!python]marked by the indentation: "
"every வரிகள் that அரே a துணுக்கு shifted பெறுநர் the வலது with வெள்ளை இடங்கள் "
"belong பெறுநர் the block. Quite often, people use 4 இடங்கள் க்கு indentation, "
"but it works if you use more or less spaces. Simply, any வரிகள் of the block "
"must use the same amount of spaces.  The end of பைதான் குறியீடு தொகுதிகள் அரே "
"not marked by any specific char.  Indenting வரிகள் starts a block and "
"unindenting ends it. Do not forget the பெருங்குடல் (:) at the end of the "
"<code>if</code> line, பைதான் needs it பெறுநர் know that a புதிய block begins. "
"The fact that பைதான் relies on உள்தள்ளல் பெறுநர் delimit தொகுதிகள் is a very good "
"property க்கு beginners: it will force you பெறுநர் adhere பெறுநர் strict குறியீடு"
" presentation standards.[/!] It is very easy பெறுநர் get lost in your own "
"குறியீடு if it's not properly indented, so you want பெறுநர் clean it மேலே so "
"that working on your குறியீடு remains pleasant and productive."

#. type: Content of: <p>
#: src/lessons/welcome/conditions/Conditions.html:44
msgid ""
"All indentations of a given block must be consistent, and it is not possible "
"to cut a block. The two following codes are incorrect and will raise errors."
msgstr ""
"அனைத்தும் indentations of a given block must be consistent, and it is not "
"possible பெறுநர் வெட்டு a block. The two following codes அரே incorrect and "
"will raise errors."

#. type: Content of: <pre>
#: src/lessons/welcome/conditions/Conditions.html:47
#, no-wrap
msgid ""
"if <b>condition</b>:\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>whatToDo()</b>\n"
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>whatToDoNext()</b> <span "
"class=\"comment\"># one space too much </span>\n"
"<b>whatToDoAnyway()</b>\n"
msgstr ""
"if <b>condition</b>:\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>whatToDo()</b>\n"
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>whatToDoNext()</b> <span class=\"comment\">#"
" one இடைவெளி too much </span>\n"
"<b>whatToDoAnyway()</b>\n"

#. type: Content of: <pre>
#: src/lessons/welcome/conditions/Conditions.html:52
#, no-wrap
msgid ""
"if <b>condition</b>:\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>whatToDo()</b>\n"
"<b>whatToDoAnyway()</b>\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>whatToDoNext()</b> <span class=\"comment\"># this "
"block is not hanging to a condition line</span>\n"
msgstr ""
"if <b>condition</b>:\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>whatToDo()</b>\n"
"<b>whatToDoAnyway()</b>\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>whatToDoNext()</b> <span class=\"comment\"># this "
"block is not hanging பெறுநர் a condition line</span>\n"

#. type: Content of: <p>
#: src/lessons/welcome/conditions/Conditions.html:58
msgid ""
"The condition must be a "
"<code>[!c]int[/!][!java]boolean[/!][!scala|python]Boolean[/!]</code> "
"expression.  The inner block of code will get executed if the expression is "
"evaluated to <code>[!c]1[/!][!java|scala]true[/!][!python]True[/!]</code> "
"and it will be ignored if it is "
"<code>[!c]0[/!][!java|scala]false[/!][!python]False[/!]</code>.  "
"[!python|scala|java]<code>[!java|scala]true[/!][!python]True[/!]</code> and "
"<code>[!java|scala]false[/!][!python]False[/!]</code> are constant values "
"defined by [!thelang] directly, just as 0 or 1 in mathematics.[/!]"
msgstr ""
"The condition must be a <code>[!c]int[/!][!java]boolean[/!][!scala|python]"
"Boolean[/!]</code> expression.  The inner block of குறியீடு will get executed "
"if the கோவை is evaluated பெறுநர் <code>[!c]1[/!][!java|scala]true[/!][!python]"
"True[/!]</code> and it will be ignored if it is <code>[!c]0[/!][!java|scala]"
"false[/!][!python]False[/!]</code>.  [!python|scala|java]<code>[!java|scala]"
"true[/!][!python]True[/!]</code> and <code>[!java|scala]false[/!][!python]"
"False[/!]</code> அரே மாறா, மாறிலி values defined by [!thelang] directly, "
"just அச் 0 or 1 in mathematics.[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/conditions/Conditions.html:64
msgid ""
"The condition can be a "
"<code>[!c]int[/!][!java]boolean[/!][!scala|python]Boolean[/!]</code> "
"variable (we will come back on variables in a later exercise, don't worry) "
"or an arithmetic test, such as <code>x == 5</code>, which checks whether the "
"current value of <code>x</code> is 5, or such as <b>!=</b> (checking "
"inequality, that is, returning "
"[!c]1[/!][!java|scala]true[/!][!python]True[/!] only if the left-hand side "
"is different from the right-hand side), <b>&lt;</b> (smaller than), "
"<b>&gt;</b> (larger than), <b>&lt;=</b> (smaller or equal to), <b>&gt;=</b> "
"(larger or equal to)."
msgstr ""
"The condition can be a <code>[!c]int[/!][!java]boolean[/!][!scala|python]"
"Boolean[/!]</code> variable (we will come பின் on மாறிகள் in a later exercise, "
"don't worry) or an arithmetic test, such அச் <code>x == 5</code>, which "
"checks whether the மின்னோட்ட்ம், ஓட்டம் மதிப்பு of <code>x</code> is 5, or such அச் "
"<b>!=</b> (checking inequality, that is, returning [!c]1[/!][!java|scala]"
"true[/!][!python]True[/!] only if the left-hand பக்கம் is different இருந்து the "
"right-hand side), <b>&lt;</b> (smaller than), <b>&gt;</b> (larger than), "
"<b>&lt;=</b> (smaller or equal to), <b>&gt;=</b> (larger or equal to)."

#. type: Content of: <p>
#: src/lessons/welcome/conditions/Conditions.html:71
msgid ""
"Beware of the classical trap, which consists in testing the equality of a "
"variable using = instead of ==. Hopefully, the "
"[!java|scala|c]compiler[/!][!python]interpreter[/!] detects this problem "
"most of the time, but it could get trapped is some cases (such as when you "
"are affecting a [!c]int[/!][!java|python|scala]boolean[/!] variable). So "
"you'd better to be careful..."
msgstr ""
"Beware of the classical trap, which consists in testing the equality of a "
"variable using = instead of ==. Hopefully, the [!java|scala|c]compiler[/!]"
"[!python]interpreter[/!] detects this problem பெரும்பாலானவை of the time, but "
"it could get trapped is some cases (such அச் when you அரே affecting a [!c]"
"int[/!][!java|python|scala]boolean[/!] variable). So you'd better பெறுநர் be "
"careful..."

#. type: Content of: <p>
#: src/lessons/welcome/conditions/Conditions.html:76
msgid ""
"The condition can also be a call to some particular methods returning a "
"boolean. For example, the <code>isFacingWall()</code> method of the buggle "
"returns [!c]1[/!][!java|python|scala]true[/!] if the buggle is facing a "
"wall, and [!c]0[/!][!java|python|scala]false[/!] in the other case."
msgstr ""
"The condition can also be a call பெறுநர் some particular முறைகள் returning a "
"boolean. க்கு example, the <code>isFacingWall()</code> method of the buggle "
"returns [!c]1[/!][!java|python|scala]true[/!] if the buggle is facing a "
"wall, and [!c]0[/!][!java|python|scala]false[/!] in the மற்றொன்று case."

#. type: Content of: <p>
#: src/lessons/welcome/conditions/Conditions.html:80
msgid ""
"Finally, a condition can be composed of several sub-conditions connected by "
"boolean operations:"
msgstr ""
"Finally, a condition can be composed of several sub-conditions connected by "
"boolean operations:"

#. type: Content of: <ul><li>
#: src/lessons/welcome/conditions/Conditions.html:83
msgid ""
"<code>cond1 [!java|scala|c]&&[/!][!python]and[/!] cond2</code> is true when "
"<tt>cond1</tt> <b>and</b> <tt>cond2</tt> are both true (if <tt>cond1</tt> is "
"false, <tt>cond2</tt> is not even evaluated as we already know that the "
"conjunction of both propositions cannot be true)."
msgstr ""
"<code>cond1 [!java|scala|c]&&[/!][!python]and[/!] cond2</code> is true when "
"<tt>cond1</tt> <b>and</b> <tt>cond2</tt> அரே both true (if <tt>cond1</tt> is "
"false, <tt>cond2</tt> is not இரட்டை evaluated அச் we already know that the "
"conjunction of both propositions cannot be true)."

#. type: Content of: <ul><li>
#: src/lessons/welcome/conditions/Conditions.html:86
msgid ""
"<code>cond1 [!java|scala|c]||[/!][!python]or[/!] cond2</code> is true if "
"<tt>cond1</tt> <b>or</b> <tt>cond2</tt> is true (if <tt>cond1</tt> is true, "
"<tt>cond2</tt> is not even evaluated as we already know that the disjunction "
"of both propositions cannot be false)."
msgstr ""
"<code>cond1 [!java|scala|c]||[/!][!python]or[/!] cond2</code> is true if "
"<tt>cond1</tt> <b>or</b> <tt>cond2</tt> is true (if <tt>cond1</tt> is true, "
"<tt>cond2</tt> is not இரட்டை evaluated அச் we already know that the "
"disjunction of both propositions cannot be false)."

#. type: Content of: <ul><li>
#: src/lessons/welcome/conditions/Conditions.html:89
msgid ""
"<code>[!java|scala|c]![/!][!python]not [/!]cond</code> is true if "
"<tt>cond</tt> is false."
msgstr ""
"<code>[!java|scala|c]![/!][!python]not [/!]cond</code> is true if <tt>cond</"
"tt> is false."

#. type: Content of: <ul><li>
#: src/lessons/welcome/conditions/Conditions.html:90
msgid ""
"When the expression becomes complicated, it is better to add parenthesis to "
"force the order of evaluation.  Do not hesitate to add more parenthesis to "
"remove any ambiguities that may appear in an expression."
msgstr ""
"When the கோவை becomes complicated, it is better பெறுநர் கூட்டு parenthesis "
"பெறுநர் force the order of evaluation.  Do not hesitate பெறுநர் கூட்டு more "
"parenthesis பெறுநர் அகற்று any ambiguities that சி-வைகாசி appear in an "
"expression."

#. type: Content of: <p>
#: src/lessons/welcome/conditions/Conditions.html:94
msgid ""
"Last, it is possible to specify what to do when the condition is false using "
"the following syntax. In this case, the instruction "
"<code>whatToDoIfItsFalse</code> will be executed only if the condition is "
"false."
msgstr ""
"Last, it is possible பெறுநர் specify what பெறுநர் do when the condition is "
"false using the following syntax. In this case, the instruction "
"<code>whatToDoIfItsFalse</code> will be executed only if the condition is "
"false."

#. type: Content of: <pre>
#: src/lessons/welcome/conditions/Conditions.html:97
#, no-wrap
msgid ""
"[!java|scala|c]if (<b>condition</b>) {\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>whatToDoIfTheConditionIsTrue();</b>\n"
"} else {\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>whatToDoIfItsFalse();</b>\n"
"}[/!][!python]if (<b>condition</b>):\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>whatToDoIfTheConditionIsTrue()</b>\n"
"else:\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>whatToDoIfItsFalse()</b>[/!]"
msgstr ""
"[!java|scala|c]if (<b>condition</b>) {\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>whatToDoIfTheConditionIsTrue();</b>\n"
"} else {\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>whatToDoIfItsFalse();</b>\n"
"}[/!][!python]if (<b>condition</b>):\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>whatToDoIfTheConditionIsTrue()</b>\n"
"else:\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>whatToDoIfItsFalse()</b>[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/conditions/Conditions.html:106
msgid ""
"Don't forget the colon (:) after the else, it is indicating that a new block "
"is beginning."
msgstr ""
"Don't forget the பெருங்குடல் (:) after the else, it is indicating that a புதிய "
"block is beginning."

#. type: Content of: <h3>
#: src/lessons/welcome/conditions/Conditions.html:109
#: src/lessons/welcome/loopwhile/LoopWhile.html:35
#: src/lessons/welcome/loopwhile/BaggleSeeker.html:9
#: src/lessons/welcome/variables/Variables.html:119
#: src/lessons/welcome/loopfor/LoopFor.html:82
#: src/lessons/welcome/methods/basics/Methods.html:96
#: src/lessons/welcome/methods/basics/MethodsDogHouse.html:38
#: src/lessons/welcome/methods/returning/MethodsReturning.html:50
#: src/lessons/welcome/methods/args/MethodsArgs.html:70
#: src/lessons/welcome/methods/slug/SlugHunting.html:19
#: src/lessons/welcome/methods/slug/SlugTracking.html:24
#: src/lessons/welcome/bdr/BDR.html:151 src/lessons/welcome/bdr/BDR2.html:132
#: src/lessons/maze/wallfollower/WallFollowerMaze.html:18
#: src/lessons/maze/pledge/PledgeMaze.html:37
#: src/lessons/maze/shortestpath/ShortestPathMaze.html:23
#: src/lessons/maze/wallfindfollow/WallFindFollowMaze.html:22
msgid "Exercise goal"
msgstr "Exercise goal"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/conditions/Conditions.html:109
msgid ""
"<a name=\"Objectives\"/> If the buggle is facing a wall, you must move one "
"step back. If not, you must move one step forward. To detect whether you are "
"facing a wall, simply use the <code>isFacingWall()</code> built-in, that "
"every buggle understands."
msgstr ""
"<a name=\"Objectives\"/> If the buggle is facing a wall, you must move one "
"படி back. If not, you must move one படி forward. பெறுநர் detect whether you "
"அரே facing a wall, simply use the <code>isFacingWall()</code> built-in, that "
"every buggle understands."

#. type: Content of: <p>
#: src/lessons/welcome/conditions/Conditions.html:116
msgid ""
"This exercise is a bit different: your code has to work for several buggles, "
"each of them being in a specific initial condition. The same code will be "
"executed for each of them."
msgstr ""
"This exercise is a துணுக்கு different: your குறியீடு has பெறுநர் வேலை க்கு "
"several buggles, each of them being in a specific initial condition. The "
"same குறியீடு will be executed க்கு each of them."

#. type: Content of: <p>
#: src/lessons/welcome/conditions/Conditions.html:120
msgid ""
"When your program works, move forward to the next exercise, that is hidden "
"in a sub-tree of the selection window."
msgstr ""
"When your திட்டம் works, move forward பெறுநர் the அடுத்தது exercise, that is "
"hidden in a sub-tree of the தேர்வு window."

#. type: Content of: <p>
#: src/lessons/welcome/loopwhile/LoopWhile.html:4
msgid ""
"In addition to conditionals, another handy construction is the ability to "
"repeat an action while a specific condition does not appear. A while loop is "
"used for that, with the following syntax."
msgstr ""
"In கூட்டல் பெறுநர் conditionals, another handy construction is the திறமை பெறுநர் "
"repeat an செயல் while a specific condition does not appear. A while loop is "
"used க்கு that, with the following syntax."

#. type: Content of: <pre>
#: src/lessons/welcome/loopwhile/LoopWhile.html:8
#, no-wrap
msgid ""
"[!java|scala|c]while (<b>condition</b>) {\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>action()</b>;\n"
"}[/!][!python]while <b>condition</b>:\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>action()</b>[/!]"
msgstr ""
"[!java|scala|c]while (<b>condition</b>) {\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>action()</b>;\n"
"}[/!][!python]while <b>condition</b>:\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>action()</b>[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/loopwhile/LoopWhile.html:13
msgid ""
"The inner bloc is then executed again and again, as long as the condition "
"remains true.  More specifically, the buggle tests the value of the "
"condition. If it's false, it ignores the bloc and continue below.  If it's "
"true, it executes the bloc.  After that, it tests the condition. If it's now "
"false (for example because the moves of the block made us facing the wall), "
"it now ignores the bloc and continue.  If it's still true, it execute the "
"bloc and reevaluate the condition. It does so as long as the condition "
"remains true."
msgstr ""
"The inner bloc is then executed again and again, அச் long அச் the condition "
"remains true.  More specifically, the buggle தேர்வுகள் the மதிப்பு of the "
"condition. If it's false, it ignores the bloc and தொடரவும் below.  If it's "
"true, it executes the bloc.  After that, it தேர்வுகள் the condition. If it's "
"now false (for example because the moves of the block made us facing the "
"wall), it now ignores the bloc and continue.  If it's still true, it execute "
"the bloc and reevaluate the condition. It does so அச் long அச் the condition "
"remains true."

#. type: Content of: <p>
#: src/lessons/welcome/loopwhile/LoopWhile.html:20
msgid ""
"Naturally, if the chosen action does not modify the value of the condition, "
"the buggle will do the action endlessly. The <b>stop</b> button of the "
"interface becomes then handy. To test this, you can try to type the "
"following code in the editor:"
msgstr ""
"Naturally, if the chosen செயல் does not modify the மதிப்பு of the condition, "
"the buggle will do the செயல் endlessly. The <b>stop</b> button of the இடைமுகம் "
"becomes then handy. பெறுநர் தேர்வு this, you can try பெறுநர் வகை the following "
"குறியீடு in the ஆசிரியர்:"

#. type: Content of: <pre>
#: src/lessons/welcome/loopwhile/LoopWhile.html:25
#, no-wrap
msgid ""
"[!java|scala]while (true) {\n"
"&nbsp;&nbsp;&nbsp;&nbsp;left();\n"
"}[/!][!c]while (1) {\n"
"&nbsp;&nbsp;&nbsp;&nbsp;left();\n"
"}[/!][!python]while True:\n"
"&nbsp;&nbsp;&nbsp;&nbsp;left()[/!]"
msgstr ""
"[!java|scala]while (true) {\n"
"&nbsp;&nbsp;&nbsp;&nbsp;left();\n"
"}[/!][!c]while (1) {\n"
"&nbsp;&nbsp;&nbsp;&nbsp;left();\n"
"}[/!][!python]while True:\n"
"&nbsp;&nbsp;&nbsp;&nbsp;left()[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/loopwhile/LoopWhile.html:32
msgid ""
"This will let the buggle turn left as long as "
"<code>[!c]1[/!][!java|scala]true[/!][!python]True[/!]</code> remains true "
"(ie, endlessly), or until you stop it manually using the stop button."
msgstr ""
"This will let the buggle turn இடது அச் long அச் <code>[!c]1[/!][!java|scala]"
"true[/!][!python]True[/!]</code> remains true (ie, endlessly), or until you "
"நிறுத்து it manually using the நிறுத்து button."

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/loopwhile/LoopWhile.html:36
msgid ""
"You now have to write some code so that your buggles move forward until they "
"encounter a wall. The idea is thus to do something like:"
msgstr ""
"You now have பெறுநர் write some குறியீடு so that your buggles move forward "
"until they encounter a wall. The idea is thus பெறுநர் do something like:"

#. type: Content of: <pre>
#: src/lessons/welcome/loopwhile/LoopWhile.html:39
#, no-wrap
msgid ""
"while we are not facing a wall, do:\n"
"&nbsp;&nbsp;moveForward()"
msgstr ""
"while we அரே not facing a wall, do:\n"
"&nbsp;&nbsp;moveForward()"

#. type: Content of: <p>
#: src/lessons/welcome/loopwhile/LoopWhile.html:42
msgid ""
"Look at the documentation (in \"Help/About this world\") for the full list "
"of buggles' methods."
msgstr ""
"Look at the ஆவணப்படுத்துதல் (in \"Help/About this world\") க்கு the full பட்டியல் "
"of buggles' methods."

#. type: Content of: <p>
#: src/lessons/welcome/loopwhile/BaggleSeeker.html:3
msgid ""
"The buggle world can sometimes contain some <i>baggles</i>, which are little "
"biscuits that buggles can carry from one point to another. For that, they "
"have to use specific methods such as <code>isOverBaggle(), "
"isCarryingBaggle(), pickupBaggle()</code> or "
"<code>dropBaggle()</code>. Check their documentation in \"Help/About this "
"world\" for more details."
msgstr ""
"The buggle world can sometimes contain some <i>baggles</i>, which அரே little "
"biscuits that buggles can carry இருந்து one புள்ளியம் பெறுநர் another. க்கு that, "
"they have பெறுநர் use specific முறைகள் such அச் <code>isOverBaggle(), "
"isCarryingBaggle(), pickupBaggle()</code> or <code>dropBaggle()</code>. "
"சரிபார் their ஆவணப்படுத்துதல் in \"Help/About this world\" க்கு more details."

#. type: Content of: <p>
#: src/lessons/welcome/loopwhile/BaggleSeeker.html:11
msgid ""
"Let each buggle find its baggle by adapting the code you wrote in previous "
"exercise (copy/paste what you've done before if you want)."
msgstr ""
"Let each buggle கண்டுபிடி its baggle by adapting the குறியீடு you wrote in "
"previous exercise (copy/paste what you've முடிந்தது before if you want)."

#. type: Content of: <p>
#: src/lessons/welcome/variables/Variables.html:3
msgid ""
"The programs we wrote so far are missing a fundamental point in computing.  "
"Actually, it is all about processing <b>data</b> through specific "
"<b>instructions</b>. In the buggle world, the main data are a bit hidden "
"behind the graphical representation, but that's no reason to never "
"manipulate some data explicitly."
msgstr ""
"The திட்டங்கள் we wrote so far அரே missing a fundamental புள்ளியம் in computing.  "
"Actually, it is அனைத்தும் பற்றி processing <b>data</b> through specific "
"<b>instructions</b>. In the buggle world, the main தகவல்கள் அரே a துணுக்கு "
"hidden behind the graphical representation, but that's இல்லை reason பெறுநர் "
"ஒருபோதும் manipulate some தகவல்கள் explicitly."

#. type: Content of: <h3>
#: src/lessons/welcome/variables/Variables.html:9
msgid "Data in [!thelang]"
msgstr "தகவல்கள் in [!thelang]"

#. type: Content of: <p>
#: src/lessons/welcome/variables/Variables.html:10
msgid ""
"In a program, you can use several <i>types</i> of data, such as integers or "
"strings of chars. If you want to use a data several times, you need to store "
"it within a <i>variable</i>, which is a memory cell containing a value: you "
"put your data (say the value '5') in the variable (say 'length'), and you "
"can retrieve it later when you need it. That's very similar to a box of "
"label 'gift' in which you would put some stuff, like a bottle of perfume "
"\"Channel N°5\"."
msgstr ""
"In a program, you can use several <i>types</i> of data, such அச் integers or "
"சரங்கள் of chars. If you want பெறுநர் use a தகவல்கள் several times, you need "
"பெறுநர் store it within a <i>variable</i>, which is a memory கலன் containing a "
"value: you put your தகவல்கள் (say the மதிப்பு '5') in the variable (say "
"'length'), and you can retrieve it later when you need it. That's very "
"similar பெறுநர் a box of சிட்டை 'gift' in which you would put some stuff, like "
"a bottle of perfume \"Channel N°5\"."

#. type: Content of: <h3>
#: src/lessons/welcome/variables/Variables.html:17
msgid "Variable declarations"
msgstr "Variable declarations"

#. type: Content of: <p>
#: src/lessons/welcome/variables/Variables.html:19
msgid ""
"<b>Declaring</b> (ie, creating) a variable in [!thelang], is very "
"simple. You just need to write [!java]its type, a space, and the variable "
"name.[/!] [!scala]the <code>var</code> keyword, the variable name, a column "
"(:) and the variable type an equal sign (=) and an initial value.[/!] "
"[!python]the variable name, an equal sign (=) and an initial value.[/!] The "
"variable name is the label to retrieve it afterward[!python].[/!] "
"[!java|scala] while the type is the kind of data that this variable accepts "
"to store.[/!] It is forbidden to use spaces in variable names. You can name "
"a variable <code>stepAmount</code> if you want, but <code>step amount</code> "
"is not a valid name."
msgstr ""
"<b>Declaring</b> (ie, creating) a variable in [!thelang], is very simple. "
"You just need பெறுநர் write [!java]its type, a space, and the variable name.[/"
"!] [!scala]the <code>var</code> keyword, the variable name, a நெடுவரிசை (:) "
"and the variable வகை an equal sign (=) and an initial value.[/!] [!python]"
"the variable name, an equal sign (=) and an initial value.[/!] The variable "
"பெயர் is the சிட்டை பெறுநர் retrieve it afterward[!python].[/!] [!java|scala] "
"while the வகை is the kind of தகவல்கள் that this variable accepts பெறுநர் "
"store.[/!] It is forbidden பெறுநர் use இடங்கள் in variable names. You can பெயர் "
"a variable <code>stepAmount</code> if you want, but <code>step amount</code> "
"is not a valid name."

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/variables/Variables.html:29
msgid "[!c|java]"
msgstr "[!c|java]"

#. type: Content of: <p>
#: src/lessons/welcome/variables/Variables.html:30
msgid ""
"So, to create a variable named <b>x</b> intended to contain integers, one "
"should write:"
msgstr ""
"So, பெறுநர் create a variable named <b>x</b> intended பெறுநர் contain "
"integers, one should எழுது:"

#. type: Content of: <pre>
#: src/lessons/welcome/variables/Variables.html:31
#, no-wrap
msgid "int x;"
msgstr "int x;"

#. type: Content of: <p>
#: src/lessons/welcome/variables/Variables.html:32
msgid ""
"If you want, you can specify the initial value of the variable by adding an "
"equal sign (=) followed by the value after the declaration."
msgstr ""
"If you want, you can specify the initial மதிப்பு of the variable by adding an "
"equal sign (=) followed by the மதிப்பு after the declaration."

#. type: Content of: <pre>
#: src/lessons/welcome/variables/Variables.html:34
#, no-wrap
msgid "int x=5;"
msgstr "int x=5;"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/variables/Variables.html:35
#: src/lessons/welcome/variables/Variables.html:69
msgid "[/!] [!python]"
msgstr "[/!] [!python]"

#. type: Content of: <p>
#: src/lessons/welcome/variables/Variables.html:38
msgid ""
"So, if you want that the variable contains 5 as initial value, you should "
"type:"
msgstr ""
"So, if you want that the variable contains 5 அச் initial value, you should "
"தட்டச்சு:"

#. type: Content of: <pre>
#: src/lessons/welcome/variables/Variables.html:39
#, no-wrap
msgid "x = 5"
msgstr "ஃச் = 5"

#. type: Content of: <ul><li>
#: src/lessons/welcome/variables/Variables.html:40
#: src/lessons/welcome/loopfor/LoopFor.html:68
#: src/lessons/welcome/bdr/BDR2.html:83
#: src/lessons/recursion/cons/universe/ConsWorld.html:34
msgid "[/!] [!scala]"
msgstr "[/!] [!scala]"

#. type: Content of: <p>
#: src/lessons/welcome/variables/Variables.html:43
msgid ""
"So, to create a variable named <b>x</b> intended to contain integers with 42 "
"as initial value, one should write:"
msgstr ""
"So, பெறுநர் create a variable named <b>x</b> intended பெறுநர் contain integers "
"with 42 அச் initial value, one should எழுது:"

#. type: Content of: <pre>
#: src/lessons/welcome/variables/Variables.html:44
#, no-wrap
msgid "var x:Int = 42"
msgstr "var x:Int = 42"

#. type: Content of: <p>
#: src/lessons/welcome/variables/Variables.html:45
msgid ""
"In most cases, the compiler is able to guess the type of the variable from "
"the initialization value, and you can omit it:"
msgstr ""
"In பெரும்பாலானவை cases, the தொகுப்பி is able பெறுநர் guess the வகை of the "
"variable இருந்து the முன்னமைவு value, and you can omit it:"

#. type: Content of: <pre>
#: src/lessons/welcome/variables/Variables.html:46
#, no-wrap
msgid "var x = 42"
msgstr "var ஃச் = 42"

#. type: Content of: <p>
#: src/lessons/welcome/variables/Variables.html:47
msgid ""
"You still have to specify if you use some generic values as an "
"initialization, such as the very particular value <code>null</code>, which "
"type happens to be ambiguous. Even when the type is clear, you can still "
"specify it if you prefer.  So you want that the variable contains 5 as "
"initial value, you should type:"
msgstr ""
"You still have பெறுநர் specify if you use some generic values அச் an "
"initialization, such அச் the very particular மதிப்பு <code>null</code>, which "
"வகை happens பெறுநர் be ambiguous. இரட்டை when the வகை is clear, you can still "
"specify it if you prefer.  So you want that the variable contains 5 அச் "
"initial value, you should தட்டச்சு:"

#. type: Content of: <pre>
#: src/lessons/welcome/variables/Variables.html:50
#, no-wrap
msgid ""
"var x: Int =  5 <span class=\"comment\">// I can define the type if I want "
"to</span>\n"
"var y =  10      <span class=\"comment\">// or I can omit the type if I "
"prefer</span>"
msgstr ""
"var x: Int =  5 <span class=\"comment\">// I can define the வகை if I want "
"to</span>\n"
"var ஒய் =  10      <span class=\"comment\">// or I can omit the வகை if I "
"prefer</span>"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/variables/Variables.html:52
#: src/lessons/welcome/loopdowhile/LoopDoWhile.html:39
msgid "[/!] [!java|scala|c]"
msgstr "[/!] [!java|scala|c]"

#. type: Content of: <p>
#: src/lessons/welcome/variables/Variables.html:55
msgid ""
"As you can see, the variables are <b>typed</b> in [!thelang], which means "
"that they are somehow specialized: A given variable can only store data of a "
"given type; Don't even think of storing numbers in a variable that is "
"tailored for letters! The [!thelang] language is said to be <b>statically "
"typed</b>."
msgstr ""
"அச் you can see, the மாறிகள் அரே <b>typed</b> in [!thelang], which means that "
"they அரே somehow specialized: A given variable can only store தகவல்கள் of a "
"given type; Don't இரட்டை think of storing numbers in a variable that is "
"tailored க்கு letters! The [!thelang] மொழி is said பெறுநர் be <b>statically "
"typed</b>."

#. type: Content of: <p>
#: src/lessons/welcome/variables/Variables.html:58
msgid ""
"Other languages (such as Python) are less picky and allow you to store any "
"kind of data in any variable, without restriction (those languages are said "
"to be <b>dynamically typed</b>).  This seems easier at the first glance, but "
"this kind of restriction allows the compiler to catch more logic errors for "
"you, which is also good. In some sense, Python is easier to write but errors "
"can sneak in more easily than in [!thelang]."
msgstr ""
"மற்றொன்று மொழிகள் (such அச் Python) அரே less எடுத்துரை and allow you பெறுநர் store "
"any kind of தகவல்கள் in any variable, without restriction (those மொழிகள் அரே "
"said பெறுநர் be <b>dynamically typed</b>).  This seems easier at the first "
"glance, but this kind of restriction allows the தொகுப்பி பெறுநர் catch more "
"தருக்கம், ஏரணம் errors க்கு you, which is also good. In some sense, பைதான் is "
"easier பெறுநர் write but errors can sneak in more easily than in [!thelang]."

#. type: Content of: <p>
#: src/lessons/welcome/variables/Variables.html:62
msgid "Here are some existing types in [!thelang]:"
msgstr "Here அரே some existing வகைகள் in [!thelang]:"

#. type: Content of: <ul><li>
#: src/lessons/welcome/variables/Variables.html:64
msgid "<b>[!java|c]int[/!][!scala]Int[/!]</b>, for integers;"
msgstr "<b>[!java|c]int[/!][!scala]Int[/!]</b>, க்கு integers;"

#. type: Content of: <ul><li>
#: src/lessons/welcome/variables/Variables.html:65
msgid "<b>[!java|c]double[/!][!scala]Double[/!]</b>, for dot numbers;"
msgstr "<b>[!java|c]double[/!][!scala]Double[/!]</b>, க்கு dot numbers;"

#. type: Content of: <ul><li>
#: src/lessons/welcome/variables/Variables.html:66
msgid ""
"<b>[!c]int[/!][!java]boolean[/!][!scala]Boolean[/!]</b>, for booleans that "
"are values being either [!c]1[/!][!java|scala]true[/!] or "
"[!c]0[/!][!java|scala]false[/!];"
msgstr ""
"<b>[!c]int[/!][!java]boolean[/!][!scala]Boolean[/!]</b>, க்கு booleans that "
"அரே values being either [!c]1[/!][!java|scala]true[/!] or [!c]0[/!]"
"[!java|scala]false[/!];"

#. type: Content of: <ul><li>
#: src/lessons/welcome/variables/Variables.html:67
msgid "<b>[!c]char*[/!][!java|scala]String[/!]</b>, for char strings."
msgstr "<b>[!c]char*[/!][!java|scala]String[/!]</b>, க்கு char strings."

#. type: Content of: <p>
#: src/lessons/welcome/variables/Variables.html:72
msgid ""
"As you can see, the variables are not <b>typed</b> in Python, which means "
"that they are not specialized in any type of data.  A given variable store "
"any type of data of a given type: you can store a number in a variable and "
"later on store a number in the same variable.  The values themselves are "
"still typed, but not the variable. Python is said to be <b>dynamically "
"typed</b>."
msgstr ""
"அச் you can see, the மாறிகள் அரே not <b>typed</b> in Python, which means that "
"they அரே not specialized in any வகை of data.  A given variable store any வகை "
"of தகவல்கள் of a given தட்டச்சு: you can store a எண் in a variable and later on "
"store a எண் in the same variable.  The values themselves அரே still typed, but "
"not the variable. பைதான் is said பெறுநர் be <b>dynamically typed</b>."

#. type: Content of: <p>
#: src/lessons/welcome/variables/Variables.html:75
msgid ""
"Other languages (such as Java, Scala or C) are much more picky and prevent "
"you to mix data types in a given variable (they are said to be <b>statically "
"typed</b>).  This seems annoying at the first glance, but this kind of "
"restriction allows the compiler to catch more logic errors for you, which is "
"also good. In some sense, Python is easier to write but errors can sneak in "
"more easily."
msgstr ""
"மற்றொன்று மொழிகள் (such அச் Java, Scala or C) அரே much more எடுத்துரை and prevent "
"you பெறுநர் mix தகவல்கள் வகைகள் in a given variable (they அரே said பெறுநர் be "
"<b>statically typed</b>).  This seems annoying at the first glance, but this "
"kind of restriction allows the தொகுப்பி பெறுநர் catch more தருக்கம், ஏரணம் errors "
"க்கு you, which is also good. In some sense, பைதான் is easier பெறுநர் write but "
"errors can sneak in more easily."

#. type: Content of: <p>
#: src/lessons/welcome/variables/Variables.html:81
msgid ""
"If you know that the value of your \"variable\" will never change (eg "
"because it contains the screen size or some other constant value), then you "
"should make it a <b>value</b> instead of a variable. Simply change the "
"<code>var</code> keyword with the <code>val</code> one. The compiler can "
"then check your actions and catch your error when you inadvertently modify "
"the value. More interestingly, the compiler can produce faster code in some "
"cases."
msgstr ""
"If you know that the மதிப்பு of your \"variable\" will ஒருபோதும் change (eg "
"because it contains the screen அளவு or some மற்றொன்று மாறா, மாறிலி value), "
"then you should make it a <b>value</b> instead of a variable. Simply change "
"the <code>var</code> keyword with the <code>val</code> one. The தொகுப்பி can "
"then சரிபார் your செயல்கள் and catch your பிழை when you inadvertently modify "
"the value. More interestingly, the தொகுப்பி can produce faster குறியீடு in "
"some cases."

#. type: Content of: <p>
#: src/lessons/welcome/variables/Variables.html:86
msgid ""
"Variables work very similarly for strings, floating point numbers and "
"boolean values."
msgstr ""
"மாறிகள் வேலை very similarly க்கு strings, floating புள்ளியம் numbers and boolean "
"values."

#. type: Content of: <pre>
#: src/lessons/welcome/variables/Variables.html:88
#, no-wrap
msgid ""
"char* name = \"Martin Quinson\";\n"
"double height=1.77; <span class=\"comment\">// in meters</span>\n"
"int married=1;<span class=\"comment\">// 1 means \"true\"; \"false\" would "
"be written 0</span>"
msgstr ""
"char* பெயர் = \"Martin Quinson\";\n"
"double height=1.77; <span class=\"comment\">// in meters</span>\n"
"int married=1;<span class=\"comment\">// 1 means \"true\"; \"false\" would "
"be written 0</span>"

#. type: Content of: <pre>
#: src/lessons/welcome/variables/Variables.html:93
#, no-wrap
msgid ""
"String name = \"Martin Quinson\";\n"
"double height=1.77; <span class=\"comment\">// in meters</span>\n"
"boolean married=true;<span class=\"comment\">// the contrary would be "
"written \"false\"</span>"
msgstr ""
"சரம் பெயர் = \"Martin Quinson\";\n"
"double height=1.77; <span class=\"comment\">// in meters</span>\n"
"boolean married=true;<span class=\"comment\">// the contrary would be "
"written \"false\"</span>"

#. type: Content of: <pre>
#: src/lessons/welcome/variables/Variables.html:97
#, no-wrap
msgid ""
"val name:String = \"Martin Quinson\"; <span class=\"comment\">// this cannot "
"be modified (it's a value)</span>\n"
"var height: Double = 1.77; <span class=\"comment\">// in meters</span>\n"
"var married = true; <span class=\"comment\">// the contrary would be written "
"\"false\"</span>\n"
"<span class=\"comment\">// Scala knows that 'true' is a Boolean value, no "
"need to repeat it here</span>"
msgstr ""
"val name:String = \"Martin Quinson\"; <span class=\"comment\">// this cannot "
"be மாற்றியமைக்கப்பட்ட (it's a value)</span>\n"
"var height: இரட்டை = 1.77; <span class=\"comment\">// in meters</span>\n"
"var married = true; <span class=\"comment\">// the contrary would be written "
"\"false\"</span>\n"
"<span class=\"comment\">// Scala knows that 'true' is a Boolean value, இல்லை "
"need பெறுநர் repeat it here</span>"

#. type: Content of: <pre>
#: src/lessons/welcome/variables/Variables.html:102
#, no-wrap
msgid ""
"firstName = \"Martin\"\n"
"lastName = 'Quinson' <span class=\"comment\"># both single and double quote "
"work here</span>\n"
"motto = \"I never finish anyth' (but I keep trying)\" <span "
"class=\"comment\"># having single quote within double quote is fine</span> "
"\n"
"height=1.77 <span class=\"comment\"># in meters</span>\n"
"married=True <span class=\"comment\"># the contrary would be written "
"\"False\"</span>"
msgstr ""
"firstName = \"Martin\"\n"
"lastName = 'Quinson' <span class=\"comment\"># both ஒற்றை and இரட்டை quote வேலை"
" here</span>\n"
"motto = \"I ஒருபோதும் finish anyth' (but I keep trying)\" <span class="
"\"comment\"># having ஒற்றை quote within இரட்டை quote is fine</span> \n"
"height=1.77 <span class=\"comment\"># in meters</span>\n"
"married=True <span class=\"comment\"># the contrary would be written "
"\"False\"</span>"

#. type: Content of: <h3>
#: src/lessons/welcome/variables/Variables.html:108
msgid "Affectations"
msgstr "Affectations"

#. type: Content of: <p>
#: src/lessons/welcome/variables/Variables.html:110
msgid ""
"Once your variable is declared, you can <b>affect</b> a new value to it "
"later in the program. That's really easy:"
msgstr ""
"Once your variable is declared, you can <b>affect</b> a புதிய மதிப்பு பெறுநர் "
"it later in the program. That's really easy:"

#. type: Content of: <pre>
#: src/lessons/welcome/variables/Variables.html:111
#, no-wrap
msgid "x = 3[!java|c];[/!]"
msgstr "ஃச் = 3[!java|c];[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/variables/Variables.html:113
msgid ""
"To the right of the equal symbol, you can put an arithmetic expression "
"containing constants, variables and operations."
msgstr ""
"பெறுநர் the வலது of the equal symbol, you can put an arithmetic கோவை "
"containing constants, மாறிகள் and operations."

#. type: Content of: <pre>
#: src/lessons/welcome/variables/Variables.html:115
#, no-wrap
msgid ""
"x = 3 + 2[!java|c];[/!]\n"
"x = 3 * x[!java|c];[/!]\n"
"[!java|scala|python]greeting = \"Hello \"+name[!java];[/!] <span "
"class=\"comment\">[!python]#[/!][!scala|java]//[/!] + is (also) the "
"operation to concatenate (ie, to join) strings[/!]</span>"
msgstr ""
"ஃச் = 3 + 2[!java|c];[/!]\n"
"x = 3 * x[!java|c];[/!]\n"
"[!java|scala|python]greeting = \"Hello \"+name[!java];[/!] <span class="
"\"comment\">[!python]#[/!][!scala|java]//[/!] + is (also) the செயல்பாடு பெறுநர்"
" concatenate (ie, பெறுநர் join) strings[/!]</span>"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/variables/Variables.html:120
msgid ""
"It is now time to do more challenging exercises, don't you think? The "
"objective is now to move forward until you find a baggle, pick it up, and "
"then move back to your initial location before dropping the baggle."
msgstr ""
"It is now time பெறுநர் do more challenging exercises, don't you think? The "
"objective is now பெறுநர் move forward until you கண்டுபிடி a baggle, pick it "
"up, and then move பின் பெறுநர் your initial location before dropping the "
"baggle."

#. type: Content of: <h3>
#: src/lessons/welcome/variables/Variables.html:125
msgid "How to do this?"
msgstr "How பெறுநர் do this?"

#. type: Content of: <p>
#: src/lessons/welcome/variables/Variables.html:126
msgid ""
"To solve this problem, you have to decompose it in easier sub-parts. For "
"example, you may want to do the following steps:"
msgstr ""
"பெறுநர் solve this problem, you have பெறுநர் decompose it in easier sub-parts. "
"க்கு example, you சி-வைகாசி want பெறுநர் do the following steps:"

#. type: Content of: <p><ol><li>
#: src/lessons/welcome/variables/Variables.html:129
msgid "Move forward until located over a baggle"
msgstr "Move forward until located வீச்சலகு a baggle"

#. type: Content of: <p><ol><li>
#: src/lessons/welcome/variables/Variables.html:130
msgid "Pickup the baggle"
msgstr "Pickup the baggle"

#. type: Content of: <p><ol><li>
#: src/lessons/welcome/variables/Variables.html:131
msgid "Move backward of the same amount of steps than done in first step"
msgstr ""
"Move பின்னோக்கு of the same amount of படிகள் than முடிந்தது in first படி"

#. type: Content of: <p><ol><li>
#: src/lessons/welcome/variables/Variables.html:132
msgid "Drop back the baggle"
msgstr "Drop பின் the baggle"

#. type: Content of: <p>
#: src/lessons/welcome/variables/Variables.html:135
msgid ""
"Naturally, it is impossible to do the right amount of steps backward at step "
"3 if you didn't count the amount of steps done in the first phase. You can "
"use a variable for that, which can be named <code>stepAmount</code>."
msgstr ""
"Naturally, it is impossible பெறுநர் do the வலது amount of படிகள் பின்னோக்கு at "
"படி 3 if you didn't எண்ணுங்கள் the amount of படிகள் முடிந்தது in the first phase. "
"You can use a variable க்கு that, which can be named <code>stepAmount</code>."

#. type: Content of: <p>
#: src/lessons/welcome/variables/Variables.html:139
msgid ""
"Create an integer variable before phase 1, initialize it to 0, and each time "
"you move one step forward, increment its value by one (<code>stepAmount = "
"stepAmount + 1;</code>[!java|c] or <code>stepAmount++;</code>, both syntaxes "
"being equivalent[/!]).  Such variable which takes every values of a given "
"range is often called a <b>stepper</b>."
msgstr ""
"Create an முழு எண் variable before கட்டம் 1, initialize it பெறுநர் 0, and each "
"time you move one படி forward, increment its மதிப்பு by one (<code>stepAmount "
"= stepAmount + 1;</code>[!java|c] or <code>stepAmount++;</code>, both "
"syntaxes being equivalent[/!]).  Such variable which takes every values of a "
"given வீச்சு is often called a <b>stepper</b>."

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/variables/Variables.html:145
msgid "[!python|scala]"
msgstr "[!python|scala]"

#. type: Content of: <p>
#: src/lessons/welcome/variables/Variables.html:146
msgid ""
"If you know Java or other languages, you will probably try to use the "
"<code>++</code> operator to increment the variable, but it's not allowed in "
"[!thelang].  This is because it would be difficult to define this operator "
"for every data types.  For example, what should ++ do when applied to a "
"Complex value or to a String? The problem does not occur in Java as "
"<code>int</code> is not an object but a primitive type.  (if you don't know "
"the <code>++</code>, just ignore this paragraph: it does not exist in "
"[!thelang])"
msgstr ""
"If you know சாவா or மற்றொன்று languages, you will probably try பெறுநர் use the "
"<code>++</code> operator பெறுநர் increment the variable, but it's not allowed "
"in [!thelang].  This is because it would be difficult பெறுநர் define this "
"operator க்கு every தகவல்கள் types.  க்கு example, what should ++ do when "
"applied பெறுநர் a அணைவு மதிப்பு or பெறுநர் a String? The problem does not occur "
"in சாவா அச் <code>int</code> is not an பொருள் but a தொடக்கநிலை type.  (if you "
"don't know the <code>++</code>, just ignore this paragraph: it does not "
"exist in [!thelang])"

#. type: Content of: <p>
#: src/lessons/welcome/variables/Variables.html:154
msgid ""
"Then, phase 3 consists in simply creating a new integer variable "
"<code>doneSteps</code> initialized to 0, and do one step backward as long as "
"<code>doneSteps</code> is not equal to <code>stepAmount</code>, incrementing "
"<code>doneSteps</code> each time. The <code>!=</code> operator should be "
"used to test the inequality (whether some values are NOT equal)."
msgstr ""
"Then, கட்டம் 3 consists in simply creating a புதிய முழு எண் variable "
"<code>doneSteps</code> initialized பெறுநர் 0, and do one படி பின்னோக்கு அச் long "
"அச் <code>doneSteps</code> is not equal பெறுநர் <code>stepAmount</code>, "
"incrementing <code>doneSteps</code> each time. The <code>!=</code> operator "
"should be used பெறுநர் தேர்வு the சமனிலி (whether some values அரே NOT equal)."

#. type: Content of: <p>
#: src/lessons/welcome/variables/Variables.html:161
msgid "It's your turn now!"
msgstr "It's your turn now!"

#. type: Content of: <h2>
#: src/lessons/welcome/variables/RunFour.html:2
msgid "Run Four bases"
msgstr "ஓடு நான்கு, நாலடி, நான்கடி bases"

#. type: Content of: <p>
#: src/lessons/welcome/variables/RunFour.html:4
msgid ""
"Today is a great day for the buggles: the Big Buggles' Race begun. It's a "
"traditional competition in which young buggles prove their value to the "
"tribe. Both force and intelligence is exercised: you have to rush forward, "
"but stop as soon as you reach your fourth baggle.  Please help the buggles "
"to move forward while counting the baggles and to determine when to stop."
msgstr ""
"இன்று is a great நாள் க்கு the buggles: the Big Buggles' Race begun. It's a "
"traditional competition in which young buggles prove their மதிப்பு பெறுநர் the "
"tribe. Both force and நுண்ணறிவு is exercised: you have பெறுநர் rush forward, "
"but நிறுத்து அச் soon அச் you reach your fourth baggle.  Please உதவி the "
"buggles பெறுநர் move forward while counting the baggles and பெறுநர் determine "
"when பெறுநர் stop."

#. type: Content of: <h2>
#: src/lessons/welcome/variables/RunHalf.html:2
msgid "The Four Halves run"
msgstr "The நான்கு, நாலடி, நான்கடி Halves ஓடு"

#. type: Content of: <p>
#: src/lessons/welcome/variables/RunHalf.html:4
msgid ""
"Here is the second day of the Big Buggles' Race.  As previously, you have to "
"run forward until you reach the right cell to stop on.  But this time, you "
"have to reach the cell where the amount of baggles you saw is the double of "
"the orange cells plus 1.  In other words, the following condition must "
"become true: <code>2 * baggles = orangeCells + 1</code>."
msgstr ""
"Here is the second நாள் of the Big Buggles' Race.  அச் previously, you have "
"பெறுநர் ஓடு forward until you reach the வலது கலன் பெறுநர் நிறுத்து on.  But this "
"time, you have பெறுநர் reach the கலன் where the amount of baggles you saw is "
"the இரட்டை of the ஆரஞ்சு cells plus 1.  In மற்றொன்று words, the following "
"condition must become true: <code>2 * baggles = orangeCells + 1</code>."

#. type: Content of: <p>
#: src/lessons/welcome/variables/RunHalf.html:10
msgid ""
"You can determine whether you are over a orange cell with the "
"<code>isOverOrange()</code> method."
msgstr ""
"You can determine whether you அரே வீச்சலகு a ஆரஞ்சு கலன் with the "
"<code>isOverOrange()</code> method."

#. type: Content of: <p>
#: src/lessons/welcome/loopfor/LoopFor.html:4
msgid ""
"While loops are well adapted to situations where you want to achieve an "
"action while a condition stays true, but it is less adapted to achieve a "
"given action a predetermined amount of time. For example, when we wanted to "
"move <code>stepAmount</code> steps backward in a previous exercise, we had "
"to create a new variable, initialize it, and move backward while "
"incrementing this variable until it became equal to <code>stepAmount</code>."
msgstr ""
"While வளையங்கள் அரே well adapted பெறுநர் situations where you want பெறுநர் "
"achieve an செயல் while a condition stays true, but it is less adapted பெறுநர் "
"achieve a given செயல் a predetermined amount of time. க்கு example, when we "
"wanted பெறுநர் move <code>stepAmount</code> படிகள் பின்னோக்கு in a previous "
"exercise, we had பெறுநர் create a புதிய variable, initialize it, and move "
"பின்னோக்கு while incrementing this variable until it became equal பெறுநர் "
"<code>stepAmount</code>."

#. type: Content of: <p>
#: src/lessons/welcome/loopfor/LoopFor.html:11
msgid ""
"In such situations, <code>for</code> loops become handy. Their syntax is the "
"following:"
msgstr ""
"In such situations, <code>for</code> வளையங்கள் become handy. Their syntax is "
"the following:"

#. type: Content of: <pre>
#: src/lessons/welcome/loopfor/LoopFor.html:13
#, no-wrap
msgid ""
"[!java|c]for (<b>initializing</b>; <b>condition</b>; <b>incrementing</b>) "
"{\n"
"    <b>action</b>();\n"
"}[/!][!python]for <b>variable</b> in <b>sequence of values</b>:\n"
"    <b>action</b>()[/!][!scala] for (<b>variable</b> &lt;- <b>firstValue</b> "
"to <b>lastValue</b>) { \n"
"    <b>action</b>();\n"
"}[/!]"
msgstr ""
"[!java|c]for (<b>initializing</b>; <b>condition</b>; <b>incrementing</b>) {\n"
"    <b>action</b>();\n"
"}[/!][!python]for <b>variable</b> in <b>sequence of values</b>:\n"
"    <b>action</b>()[/!][!scala] க்கு (<b>variable</b> &lt;- <b>firstValue</b> "
"பெறுநர் <b>lastValue</b>) { \n"
"    <b>action</b>();\n"
"}[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/loopfor/LoopFor.html:20
msgid ""
"For example to repeat the loop body <code>n</code> times, [!python] it is "
"handy to use the instruction <code>range(n)</code> to generate the sequence "
"n integer value from 0 to n-1.[/!] [!java|scala|c] one should write:[/!]"
msgstr ""
"க்கு example பெறுநர் repeat the loop body <code>n</code> times, [!python] it "
"is handy பெறுநர் use the instruction <code>range(n)</code> பெறுநர் generate "
"the வரிசை n முழு எண் மதிப்பு இருந்து 0 பெறுநர் n-1.[/!] [!java|scala|c] one "
"should write:[/!]"

#. type: Content of: <pre>
#: src/lessons/welcome/loopfor/LoopFor.html:23
#, no-wrap
msgid ""
"[!java]for (int stepper=0; stepper&lt;n; stepper++) {\n"
"    <b>action</b>();\n"
"}[/!][!c]int stepper;\n"
"for (stepper=0; stepper&lt;n; stepper++) {\n"
"    <b>action</b>();\n"
"}[/!][!python]for <b>stepper</b> in <b>range(n)</b>:\n"
"    <b>action</b>()[/!][!scala] for (<b>stepper</b> &lt;- <b>1</b> to "
"<b>n</b>) { \n"
"    <b>action</b>();\n"
"}[/!]"
msgstr ""
"[!java]for (int stepper=0; stepper&lt;n; stepper++) {\n"
"    <b>action</b>();\n"
"}[/!][!c]int stepper;\n"
"for (stepper=0; stepper&lt;n; stepper++) {\n"
"    <b>action</b>();\n"
"}[/!][!python]for <b>stepper</b> in <b>range(n)</b>:\n"
"    <b>action</b>()[/!][!scala] க்கு (<b>stepper</b> &lt;- <b>1</b> பெறுநர் "
"<b>n</b>) { \n"
"    <b>action</b>();\n"
"}[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/loopfor/LoopFor.html:33
msgid ""
"This code is then equivalent to the following one from the computer point of "
"view. From the programmer point of view, one form or the other can make the "
"source code easier to read, depending on the situation. You should chose "
"wisely in each situation whether you want to use a for loop or a while "
"loop. Your uttermost goal should remain to keep your code simple and easy to "
"read, to ensure that your day remain pleasant and productive."
msgstr ""
"This குறியீடு is then equivalent பெறுநர் the following one இருந்து the கணிப்பொறி"
", கணிணி புள்ளியம் of view. இருந்து the நிரலி (device), நிரலர் (person) புள்ளியம் "
"of view, one form or the மற்றொன்று can make the மூலம் குறியீடு easier பெறுநர் "
"read, depending on the situation. You should chose wisely in each situation "
"whether you want பெறுநர் use a க்கு loop or a while loop. Your uttermost goal "
"should remain பெறுநர் keep your குறியீடு simple and easy பெறுநர் read, பெறுநர் "
"ensure that your நாள் remain pleasant and productive."

#. type: Content of: <pre>
#: src/lessons/welcome/loopfor/LoopFor.html:41
#, no-wrap
msgid ""
"[!java|c]int stepper = 0;\n"
"while (stepper &lt; n) {\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>action</b>();\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>stepper++</b>;\n"
"}[/!][!python]stepper=0\n"
"while stepper &lt; n: \n"
"    action()\n"
"    stepper = stepper + 1[/!][!scala]\n"
"var stepper = 1\n"
"while (stepper &lt;= n) {\n"
"    <b>action</b>()\n"
"    stepper = stepper + 1\n"
"}[/!]"
msgstr ""
"[!java|c]int stepper = 0;\n"
"while (stepper &lt; n) {\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>action</b>();\n"
"&nbsp;&nbsp;&nbsp;&nbsp;<b>stepper++</b>;\n"
"}[/!][!python]stepper=0\n"
"while stepper &lt; n: \n"
"    action()\n"
"    stepper = stepper + 1[/!][!scala]\n"
"var stepper = 1\n"
"while (stepper &lt;= n) {\n"
"    <b>action</b>()\n"
"    stepper = stepper + 1\n"
"}[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/loopfor/LoopFor.html:55
msgid "In that case, the <code>for</code> loop is easier to read, don't you think?"
msgstr ""
"In that case, the <code>for</code> loop is easier பெறுநர் read, don't you "
"think?"

#. type: Content of: <p>
#: src/lessons/welcome/loopfor/LoopFor.html:58
msgid ""
"It is possible to build more advanced <tt>for</tt> loops since any valid "
"instruction can be used as initialization, condition and incrementing "
"instruction. The following example is a bit extreme as there is no need for "
"a loop body to move the buggle forward until it reaches the wall, but it "
"works well: all the work is done in the condition and incrementing "
"instruction."
msgstr ""
"It is possible பெறுநர் உருவாக்கு more மேம்பட்ட <tt>for</tt> வளையங்கள் since any "
"valid instruction can be used அச் initialization, condition and incrementing "
"instruction. The following example is a துணுக்கு extreme அச் there is இல்லை "
"need க்கு a loop body பெறுநர் move the buggle forward until it reaches the "
"wall, but it works well: அனைத்தும் the வேலை is முடிந்தது in the condition and "
"incrementing instruction."

#. type: Content of: <pre>
#: src/lessons/welcome/loopfor/LoopFor.html:64
#, no-wrap
msgid ""
"for (; !isFacingWall() ; forward()) { \n"
"   <span class=\"comment\">/* nothing in the loop body */</span>\n"
"}\n"
"<span class=\"comment\">/* the buggle now faces a wall */</span>"
msgstr ""
"க்கு (; !isFacingWall() ; forward()) { \n"
"   <span class=\"comment\">/* nothing in the loop body */</span>\n"
"}\n"
"<span class=\"comment\">/* the buggle now faces a wall */</span>"

#. type: Content of: <p>
#: src/lessons/welcome/loopfor/LoopFor.html:71
msgid ""
"If you want to nest several loops, you can do it on one line in Scala. This "
"means that the two following chunks are equivalent:"
msgstr ""
"If you want பெறுநர் nest several loops, you can do it on one வரி in Scala. "
"This means that the two following chunks அரே equivalent:"

#. type: Content of: <pre>
#: src/lessons/welcome/loopfor/LoopFor.html:72
#, no-wrap
msgid ""
"for (stepper1 &lt;- 1 to n) {\n"
"    for (stepper2 &lt;- 1 to m) {\n"
"       actions()\n"
"    }\n"
"}"
msgstr ""
"க்கு (stepper1 &lt;- 1 பெறுநர் n) {\n"
"    க்கு (stepper2 &lt;- 1 பெறுநர் m) {\n"
"       actions()\n"
"    }\n"
"}"

#. type: Content of: <pre>
#: src/lessons/welcome/loopfor/LoopFor.html:77
#, no-wrap
msgid ""
"for (stepper1 &lt;- 1 to n; stepper2 &lt;- 1 to m) { <span "
"class=\"comment\">// Simply separate both loop conditions with a "
"semi-column</span>\n"
"    actions()\n"
"}"
msgstr ""
"க்கு (stepper1 &lt;- 1 பெறுநர் n; stepper2 &lt;- 1 பெறுநர் m) { <span class="
"\"comment\">// Simply separate both loop conditions with a semi-column</span>"
"\n"
"    actions()\n"
"}"

#. type: Content of: <p>
#: src/lessons/welcome/loopfor/LoopFor.html:83
msgid ""
"You now have to redo the same exercise than previously (move forward until "
"being over a baggle, pick it up, move back to your original location, drop "
"the baggle), but using a <code>for</code> loop instead of a "
"<code>while</code> loop to move back to the initial location."
msgstr ""
"You now have பெறுநர் மீண்டும்செய் the same exercise than previously (move forward "
"until being வீச்சலகு a baggle, pick it up, move பின் பெறுநர் your original "
"location, drop the baggle), but using a <code>for</code> loop instead of a "
"<code>while</code> loop பெறுநர் move பின் பெறுநர் the initial location."

#. type: Content of: <p>
#: src/lessons/welcome/loopfor/LoopFor.html:88
msgid "Once done, you can proceed to next exercise."
msgstr "Once done, you can proceed பெறுநர் அடுத்தது exercise."

#. type: Content of: <h2>
#: src/lessons/welcome/loopfor/LoopStairs.html:2
msgid "Stairway to Heaven"
msgstr "Stairway பெறுநர் Heaven"

#. type: Content of: <p>
#: src/lessons/welcome/loopfor/LoopStairs.html:4
msgid ""
"Your buggle feels a bit depressed today, but it's currently facing a magic "
"stair: It leads directly to heaven, and each time you walk on it, joyful "
"colors spur all around."
msgstr ""
"Your buggle feels a துணுக்கு depressed today, but it's currently facing a "
"magic stair: It இழுதுகள் directly பெறுநர் heaven, and each time you walk on "
"it, joyful colors spur அனைத்தும் around."

#. type: Content of: <p>
#: src/lessons/welcome/loopfor/LoopStairs.html:7
msgid ""
"Your goal is to take this stair, one step after the other.  First devise the "
"four instructions you have to give you buggle to take one stair step, and "
"then put them in a loop to take the whole stair."
msgstr ""
"Your goal is பெறுநர் take this stair, one படி after the other.  First devise "
"the நான்கு, நாலடி, நான்கடி instructions you have பெறுநர் give you buggle பெறுநர் "
"take one stair step, and then put them in a loop பெறுநர் take the whole stair."

#. type: Content of: <p>
#: src/lessons/welcome/loopfor/LoopStairs.html:11
msgid ""
"Before that, walk a bit forward to reach that stair, and ensure that you are "
"in the right situation for your loop content to run properly. And once you "
"reach the heaven, take some steps in your new home.  Meanwhile, you just "
"have to walk your way, the colors appear automagically."
msgstr ""
"Before that, walk a துணுக்கு forward பெறுநர் reach that stair, and ensure that "
"you அரே in the வலது situation க்கு your loop content பெறுநர் ஓடு properly. And "
"once you reach the heaven, take some படிகள் in your புதிய home.  Meanwhile, "
"you just have பெறுநர் walk your way, the colors appear automagically."

#. type: Content of: <h2>
#: src/lessons/welcome/loopfor/LoopCourse.html:2
msgid "Training Buggle"
msgstr "Training Buggle"

#. type: Content of: <p>
#: src/lessons/welcome/loopfor/LoopCourse.html:4
msgid ""
"Today, your buggle wants to get some serious exercise: It wants to run 'till "
"the track burns! Its super-shoes are just perfect to run like hell, but "
"unfortunately, they can actually damage the track on the long run..."
msgstr ""
"Today, your buggle wants பெறுநர் get some serious exercise: It wants பெறுநர் "
"ஓடு 'till the மின்தடம் burns! Its super-shoes அரே just perfect பெறுநர் ஓடு like "
"hell, but unfortunately, they can actually damage the மின்தடம் on the long "
"run..."

#. type: Content of: <p>
#: src/lessons/welcome/loopfor/LoopCourse.html:7
msgid ""
"Your goal is to run the track 10 times, no matter what happens.  Even if the "
"track suffers, you <b>really HAVE</b> to take that run.  Remember, the track "
"has four sides, that take eight steps each to run along.  Now go, and show "
"them what these super shoes can do."
msgstr ""
"Your goal is பெறுநர் ஓடு the மின்தடம் 10 times, இல்லை பொருண்மை, பருப்பொருள் what "
"happens.  இரட்டை if the மின்தடம் suffers, you <b>really HAVE</b> பெறுநர் take "
"that run.  Remember, the மின்தடம் has நான்கு, நாலடி, நான்கடி sides, that take "
"eight படிகள் each பெறுநர் ஓடு along.  Now go, and காட்டு them what these super "
"shoes can do."

#. type: Content of: <p>
#: src/lessons/welcome/loopfor/LoopCourse.html:12
msgid ""
"You don't have to do anything particular with regard of the colors: your "
"shoes will do it for you. Just take that run!"
msgstr ""
"You don't have பெறுநர் do anything particular with regard of the colors: your "
"shoes will do it க்கு you. Just take that run!"

#. type: Content of: <h2>
#: src/lessons/welcome/loopfor/LoopCourseForest.html:2
msgid "Outdoor Training Buggle"
msgstr "Outdoor Training Buggle"

#. type: Content of: <p>
#: src/lessons/welcome/loopfor/LoopCourseForest.html:4
msgid ""
"Well, our last training didn't went that well. The track actually burned, "
"and we are now banned from there.  This time, our buggle decided to practice "
"outdoor, in the middle of the forest, with its good old shoes instead.  The "
"problem is that you have to be careful to not fall into water. The track on "
"which you can run is rather narrow: One side is now 4 steps forward, 2 steps "
"to the left, 4 steps to the right, 2 steps to the right, 4 steps to the "
"left, and you want to run 7 around."
msgstr ""
"Well, our last training didn't went that well. The மின்தடம் actually burned, "
"and we அரே now banned இருந்து there.  This time, our buggle decided பெறுநர் "
"practice outdoor, in the middle of the forest, with its good old shoes "
"instead.  The problem is that you have பெறுநர் be careful பெறுநர் not fall "
"into water. The மின்தடம் on which you can ஓடு is rather narrow: One பக்கம் is "
"now 4 படிகள் forward, 2 படிகள் பெறுநர் the left, 4 படிகள் பெறுநர் the right, 2 "
"படிகள் பெறுநர் the right, 4 படிகள் பெறுநர் the left, and you want பெறுநர் ஓடு 7 "
"around."

#. type: Content of: <p>
#: src/lessons/welcome/loopfor/LoopCourseForest.html:10
msgid ""
"Oh crap, running on the grass seems to destroy it too! So just take your 7 "
"loops around the garden, and move along to the next exercise before anyone "
"notices the damage you made..."
msgstr ""
"Oh crap, running on the grass seems பெறுநர் destroy it too! So just take your "
"7 வளையங்கள் around the garden, and move along பெறுநர் the அடுத்தது exercise "
"before anyone notices the damage you made..."

#. type: Content of: <p>
#: src/lessons/welcome/loopdowhile/LoopDoWhile.html:4
msgid ""
"Some cells of the world are yellow, but your buggle cannot stand being in "
"such cells. Write the necessary code to move forward until the ground gets "
"white. For that, use the provided method <code>isGroundWhite()</code>."
msgstr ""
"Some cells of the world அரே yellow, but your buggle cannot stand being in "
"such cells. Write the necessary குறியீடு பெறுநர் move forward until the ground "
"gets white. க்கு that, use the provided method <code>isGroundWhite()</code>."

#. type: Content of: <p>
#: src/lessons/welcome/loopdowhile/LoopDoWhile.html:8
msgid ""
"The trick is that most buggles of this world are currently on this yellow "
"ground that they dislike so much. That is why they are in panic, and every "
"buggle rushes one cell forward, even the buggle that was not on a yellow "
"cell at first. In other worlds, even if the ground is white on the first "
"cell, you still want to move forward to the next cell."
msgstr ""
"The trick is that பெரும்பாலானவை buggles of this world அரே currently on this "
"மஞ்சள் ground that they dislike so much. That is why they அரே in panic, and "
"every buggle rushes one கலன் forward, இரட்டை the buggle that was not on a மஞ்சள் "
"கலன் at first. In மற்றொன்று worlds, இரட்டை if the ground is வெள்ளை on the first "
"cell, you still want பெறுநர் move forward பெறுநர் the அடுத்தது cell."

#. type: Content of: <p>
#: src/lessons/welcome/loopdowhile/LoopDoWhile.html:13
msgid "The general idea is to do something like:"
msgstr "The பொது idea is பெறுநர் do something like:"

#. type: Content of: <pre>
#: src/lessons/welcome/loopdowhile/LoopDoWhile.html:14
#, no-wrap
msgid "move forward until located in a white cell"
msgstr "move forward until located in a வெள்ளை கலன்"

#. type: Content of: <p>
#: src/lessons/welcome/loopdowhile/LoopDoWhile.html:16
msgid ""
"The main difficulty is that we want this loop body to be executed once, even "
"we are already on a white cell.  It would be easy to do so by duplicating "
"the loop content before the actual loop, but this would be a bad idea: code "
"duplication is a <b>very</b> bad habit, and you should <b>always</b> avoid "
"it."
msgstr ""
"The main difficulty is that we want this loop body பெறுநர் be executed once, "
"இரட்டை we அரே already on a வெள்ளை cell.  It would be easy பெறுநர் do so by "
"duplicating the loop content before the actual loop, but this would be a bad "
"idea: குறியீடு படியீடு is a <b>very</b> bad habit, and you should <b>always</"
"b> avoid it."

#. type: Content of: <p>
#: src/lessons/welcome/loopdowhile/LoopDoWhile.html:20
msgid ""
"Code duplication easily turns code maintenance into a nightmare: reading the "
"code becomes difficult as the reader must ensure that no slight difference "
"exist between the versions. Debugging the code becomes difficult, as bugs "
"have to be fixed in all versions. Actually, every modification of the code "
"becomes difficult. So, really, you should <b>always</b> strive to not "
"duplicate your code if you can avoid. And the good news is that you always "
"can..."
msgstr ""
"குறியீடு படியீடு easily turns குறியீடு maintenance into a nightmare: படித்தல் the "
"குறியீடு becomes difficult அச் the reader must ensure that இல்லை slight வேறுபாடு"
" exist between the versions. Debugging the குறியீடு becomes difficult, அச் "
"bugs have பெறுநர் be fixed in அனைத்தும் versions. Actually, every modification "
"of the குறியீடு becomes difficult. So, really, you should <b>always</b> "
"strive பெறுநர் not duplicate your குறியீடு if you can avoid. And the good செய்தி"
" is that you எப்போதும் can..."

#. type: Content of: <h3>
#: src/lessons/welcome/loopdowhile/LoopDoWhile.html:25
msgid "Executing the loop body at least once"
msgstr "Executing the loop body at least once"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/loopdowhile/LoopDoWhile.html:26
#: src/lessons/welcome/loopdowhile/Poucet2.html:19
#: src/lessons/welcome/array/basics/Array1.html:100
#: src/lessons/turmites/helloturmite/HelloTurmite.html:54
#: src/lessons/maze/pledge/PledgeMaze.html:59
msgid "[!python]"
msgstr "[!python]"

#. type: Content of: <p>
#: src/lessons/welcome/loopdowhile/LoopDoWhile.html:27
msgid ""
"Some languages have specific constructs for that, but not the Python "
"language. No problem, we can do it on our own! A good way is to have a "
"dedicated variable indicating whether we are taking the loop for the first "
"time or not, as follows."
msgstr ""
"Some மொழிகள் have specific constructs க்கு that, but not the பைதான் language. "
"இல்லை problem, we can do it on our own! A good way is பெறுநர் have a dedicated "
"variable indicating whether we அரே taking the loop க்கு the first time or "
"not, அச் follows."

#. type: Content of: <pre>
#: src/lessons/welcome/loopdowhile/LoopDoWhile.html:31
#, no-wrap
msgid ""
"firstTime = True\n"
"while firstTime or (other conditions):\n"
"  firstTime = False\n"
"  (loop body)\n"
msgstr ""
"firstTime = True\n"
"while firstTime or (other conditions):\n"
"  firstTime = False\n"
"  (loop body)\n"

#. type: Content of: <p>
#: src/lessons/welcome/loopdowhile/LoopDoWhile.html:37
msgid ""
"When <code>firstTime</code> is true, the loop body is executed even if the "
"other conditions would imply the contrary.  Once the loop body has been "
"executed once, it is set to false and never impact again the decision to "
"enter the body or not."
msgstr ""
"When <code>firstTime</code> is true, the loop body is executed இரட்டை if the "
"மற்றொன்று conditions would imply the contrary.  Once the loop body has been "
"executed once, it is கணம் பெறுநர் false and ஒருபோதும் impact again the decision "
"பெறுநர் enter the body or not."

#. type: Content of: <p>
#: src/lessons/welcome/loopdowhile/LoopDoWhile.html:43
msgid ""
"In a <tt>while</tt> loop, the condition is evaluated before anything else, "
"and if it's false, the loop body is never evaluated. Sometimes (although not "
"that often), you would prefer the loop body to get evaluated at least once, "
"even if the condition is initially false. For that, a variation of the "
"<tt>while</tt> loop gets used, using the following syntax in [!thelang].  "
"[!java|c]Do not forget the semi-column (;) after the condition, it is "
"mandatory.[/!]"
msgstr ""
"In a <tt>while</tt> loop, the condition is evaluated before anything else, "
"and if it's false, the loop body is ஒருபோதும் evaluated. Sometimes (although "
"not that often), you would prefer the loop body பெறுநர் get evaluated at "
"least once, இரட்டை if the condition is initially false. க்கு that, a variation "
"of the <tt>while</tt> loop gets used, using the following syntax in "
"[!thelang].  [!java|c]Do not forget the semi-column (;) after the condition, "
"it is mandatory.[/!]"

#. type: Content of: <p><pre>
#: src/lessons/welcome/loopdowhile/LoopDoWhile.html:51
#, no-wrap
msgid ""
"do {\n"
"    <b>action()</b>[!java];[/!]\n"
"} while (<b>condition</b>)[!java];[/!]"
msgstr ""
"do {\n"
"    <b>action()</b>[!java];[/!]\n"
"} while (<b>condition</b>)[!java];[/!]"

#. type: Content of: <h2>
#: src/lessons/welcome/loopdowhile/Poucet1.html:2
msgid "Tracks of buggles"
msgstr "Tracks of buggles"

#. type: Content of: <p>
#: src/lessons/welcome/loopdowhile/Poucet1.html:4
msgid ""
"Your buggle got lost in a strange maze, and you must help it to find the "
"exit that is represented in orange.  You cannot simply explain the path to "
"the exit in something like "
"<code>right();forward();forward();forward()</code> because you have to save "
"two buggles at the same time, that are lost in similar but not identical "
"worlds.  You can switch to the other world by using the combobox above the "
"world representation (where it's written 'Deep Forest' right now), and "
"selecting the other entry (that should read 'Deeper Forest')."
msgstr ""
"Your buggle got lost in a strange maze, and you must உதவி it பெறுநர் கண்டுபிடி "
"the exit that is represented in orange.  You cannot simply explain the பாதை "
"பெறுநர் the exit in something like "
"<code>right();forward();forward();forward()</code> because you have பெறுநர் "
"சேமி two buggles at the same time, that அரே lost in similar but not "
"identical worlds.  You can ஆளி, நிலைமாறி பெறுநர் the மற்றொன்று world by using "
"the combobox above the world representation (where it's written 'Deep "
"Forest' வலது now), and selecting the மற்றொன்று நுழைவு (that should read "
"'Deeper Forest')."

#. type: Content of: <p>
#: src/lessons/welcome/loopdowhile/Poucet1.html:10
msgid ""
"The good news is that the path to the exit is written on the ground. As you "
"can see, the world is made of several corridors, with baggles on the "
"ground. After each corridor, you should turn left if the corridor contains "
"three baggels or more, and you have to turn right if there is only 2 baggles "
"or less."
msgstr ""
"The good செய்தி is that the பாதை பெறுநர் the exit is written on the ground. அச் "
"you can see, the world is made of several corridors, with baggles on the "
"ground. After each corridor, you should turn இடது if the corridor contains "
"three baggels or more, and you have பெறுநர் turn வலது if there is only 2 "
"baggles or less."

#. type: Content of: <p>
#: src/lessons/welcome/loopdowhile/Poucet1.html:14
msgid ""
"You should count exactly 5 cells per corridor, from intersection to "
"intersection.  Consider in your count the intersection ending the corridor "
"but not the intersection before the corridor."
msgstr ""
"You should எண்ணுங்கள் exactly 5 cells per corridor, இருந்து intersection பெறுநர் "
"intersection.  Consider in your எண்ணுங்கள் the intersection ending the corridor "
"but not the intersection before the corridor."

#. type: Content of: <p>
#: src/lessons/welcome/loopdowhile/Poucet1.html:18
msgid ""
"So, the general form of your code must be something like \"while I did not "
"find the exit, take the next corridor to decide whether I should turn left "
"or right at the next intersection\". You can determine whether you are on "
"the exit cell (that is orange) with the provided <code>exitReached()</code> "
"method."
msgstr ""
"So, the பொது form of your குறியீடு must be something like \"while I did not "
"கண்டுபிடி the exit, take the அடுத்தது corridor பெறுநர் decide whether I should "
"turn இடது or வலது at the அடுத்தது intersection\". You can determine whether "
"you அரே on the exit கலன் (that is orange) with the provided "
"<code>exitReached()</code> method."

#. type: Content of: <p>
#: src/lessons/welcome/loopdowhile/Poucet1.html:22
msgid ""
"To take one corridor, you simply have to run from one intersection to "
"another while counting the baggles you see on your path. That's easy: there "
"is 5 steps in each corridors so a simple <code>for</code> loop suffices."
msgstr ""
"பெறுநர் take one corridor, you simply have பெறுநர் ஓடு இருந்து one intersection "
"பெறுநர் another while counting the baggles you see on your path. That's easy: "
"there is 5 படிகள் in each corridors so a simple <code>for</code> loop "
"suffices."

#. type: Attribute 'alt' of: <p><div>
#: src/lessons/welcome/loopdowhile/Poucet1.html:26
msgid "I cannot imagine how to count the baggles I see."
msgstr "I cannot imagine how பெறுநர் எண்ணுங்கள் the baggles I see."

#. type: Content of: <p><div>
#: src/lessons/welcome/loopdowhile/Poucet1.html:27
msgid ""
"You need a variable that is initialized to 0, and incremented each time you "
"see a baggle on the ground. A variable used this way is often called "
"<i>counter</i>."
msgstr ""
"You need a variable that is initialized பெறுநர் 0, and incremented each time "
"you see a baggle on the ground. A variable used this way is often called "
"<i>counter</i>."

#. type: Content of: <p><div>
#: src/lessons/welcome/loopdowhile/Poucet1.html:29
msgid "Don't forget to reset your counter to 0 at the beginning of each corridor!"
msgstr ""
"Don't forget பெறுநர் மீட்டமை your counter பெறுநர் 0 at the beginning of each "
"corridor!"

#. type: Content of: <p>
#: src/lessons/welcome/loopdowhile/Poucet1.html:32
msgid ""
"Oh, and when you reach the exit, don't forget to take an extra step to "
"actually exit the maze!"
msgstr ""
"Oh, and when you reach the exit, don't forget பெறுநர் take an extra படி பெறுநர்"
" actually exit the maze!"

#. type: Content of: <h2>
#: src/lessons/welcome/loopdowhile/Poucet2.html:2
msgid "More buggles tracks"
msgstr "More buggles tracks"

#. type: Content of: <p>
#: src/lessons/welcome/loopdowhile/Poucet2.html:4
msgid ""
"Hu oh! Your buggle got lost again in the same kind of maze, but this time, "
"the corridors are not always of the same size. Since there is no way to know "
"the length of the corridor before taking it, a <code>for</code> will not "
"suffice anymore. Instead, you will have to change your inner loop to use a "
"<code>while</code> loop, using the method <code>crossing()</code> that tells "
"whether your buggle currently stands on an intersection."
msgstr ""
"உ oh! Your buggle got lost again in the same kind of maze, but this time, "
"the corridors அரே not எப்போதும் of the same size. Since there is இல்லை way "
"பெறுநர் know the length of the corridor before taking it, a <code>for</code> "
"will not suffice anymore. Instead, you will have பெறுநர் change your inner "
"loop பெறுநர் use a <code>while</code> loop, using the method "
"<code>crossing()</code> that tells whether your buggle currently stands on "
"an intersection."

#. type: Content of: <p>
#: src/lessons/welcome/loopdowhile/Poucet2.html:10
msgid ""
"The extra complexity is that at the beginning of a corridor, you obviously "
"stand on an intersection, but you still want to move on.  [!java|scala|c]For "
"that, the easiest is to use a <code>do / while</code> loop instead of a "
"regular <code>while</code> loop to move until the next intersection.[/!] "
"[!python]For that, use an extra variable indicating whether you already "
"entered the corridor, as follows. This will ensure that you execute the loop "
"body at least once (when <code>firstTime</code> is true) before we actually "
"use the value returned by <code>crossing()</code> to determine to continue "
"or not.[/!]"
msgstr ""
"The extra complexity is that at the beginning of a corridor, you obviously "
"stand on an intersection, but you still want பெறுநர் move on.  [!java|scala|c]"
"For that, the easiest is பெறுநர் use a <code>do / while</code> loop instead "
"of a regular <code>while</code> loop பெறுநர் move until the அடுத்தது "
"intersection.[/!] [!python]For that, use an extra variable indicating "
"whether you already entered the corridor, அச் follows. This will ensure that "
"you execute the loop body at least once (when <code>firstTime</code> is true)"
" before we actually use the மதிப்பு returned by <code>crossing()</code> பெறுநர்"
" determine பெறுநர் தொடரவும் or not.[/!]"

#. type: Content of: <pre>
#: src/lessons/welcome/loopdowhile/Poucet2.html:20
#, no-wrap
msgid ""
"firstTime = True\n"
"while firstTime or not crossing():\n"
"  firstTime = False\n"
"  (loop body)\n"
msgstr ""
"firstTime = True\n"
"while firstTime or not crossing():\n"
"  firstTime = False\n"
"  (loop body)\n"

#. type: Content of: <p>
#: src/lessons/welcome/loopdowhile/Poucet2.html:27
msgid "With that new trick, your buggle should exit this maze quite easily."
msgstr "With that புதிய trick, your buggle should exit this maze quite easily."

#. type: Content of: <h1>
#: src/lessons/welcome/array/basics/Array1.html:2
msgid "[!java|scala]Arrays[/!][!python]Lists[/!] and Knotting"
msgstr "[!java|scala]Arrays[/!][!python]Lists[/!] and Knotting"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/array/basics/Array1.html:4
msgid ""
"The goal of this exercise is to reproduce the pattern of the first row in "
"the other rows with a shift of one cell (see the Objective tab for "
"details). The biggest difference between this exercise and the others we had "
"on patterns is that you have to read the pattern (on first row) before "
"reproducing it. You cannot do otherwise because the same code will be "
"executed on three different worlds, each of them having a specific pattern."
msgstr ""
"The goal of this exercise is பெறுநர் reproduce the pattern of the first நிரை "
"in the மற்றொன்று rows with a உயர்த்து of one கலன் (see the Objective தாவல் க்கு "
"details). The biggest வேறுபாடு between this exercise and the others we had "
"on patterns is that you have பெறுநர் read the pattern (on first row) before "
"reproducing it. You cannot do otherwise because the same குறியீடு will be "
"executed on three different worlds, each of them having a specific pattern."

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:12
msgid ""
"One solution is to read the next cell, and go copy it in position before "
"coming back to read the second cell. But since it is forbidden to use the "
"methods to teleport the buggle to a specific position (<code>setPos()</code> "
"and similar), this approach will be a pain to implement."
msgstr ""
"One நீர்மக்கூழ் is பெறுநர் read the அடுத்தது cell, and go நகலெடு it in position "
"before coming பின் பெறுநர் read the second cell. But since it is forbidden "
"பெறுநர் use the முறைகள் பெறுநர் teleport the buggle பெறுநர் a specific position "
"(<code>setPos()</code> and similar), this approach will be a pain பெறுநர் "
"implement."

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:17
msgid ""
"The simplest is to store the sequence of colors that constitute the whole "
"pattern in an [!java|scala]<b>array</b>[/!][!python]<b>list</b>[/!].  But "
"before we can do so, we should learn a bit what "
"[!java|scala]arrays[/!][!python]lists[/!] are."
msgstr ""
"The simplest is பெறுநர் store the வரிசை of colors that constitute the whole "
"pattern in an [!java|scala]<b>array</b>[/!][!python]<b>list</b>[/!].  But "
"before we can do so, we should learn a துணுக்கு what [!java|scala]arrays[/!]"
"[!python]lists[/!] are."

#. type: Content of: <h2>
#: src/lessons/welcome/array/basics/Array1.html:21
msgid "[!java|scala]Arrays[/!][!python]List[/!]"
msgstr "[!java|scala]Arrays[/!][!python]List[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:23
msgid ""
"[!java|scala]An array[/!][!python]A list[/!] is an ordered sequence of "
"variables that go together.  It is somehow similar to a shelve where each "
"level can store a separate value. Each variable of the sequence is "
"identified by its position, and can store a specific value. [!java|scala]All "
"cells of the array must store values of the same type because arrays are "
"homogeneous in [!thelang]. It is possible to trick this restriction by using "
"the datatype <code>[!java]Object[/!][!scala]Any[/!]</code> that can contain "
"[!java]almost[/!] any other datatype. [!java]Primitive types such as the "
"ones we saw so far (int, boolean, double, char, etc) cannot be stored in an "
"Object variable, but their objectified counter-part (Integer, Boolean, "
"Double, Char, Boolean, etc) can.[/!] It is however a good practice to make "
"the type of an array as specific as possible, i.e., if you plan to store "
"some integers in your array, make it an array of integers, not of "
"[!java]Object[/!][!scala]Any[/!].[/!] [!python]Lists can even mix values of "
"differing types, such as integer values in some cells and colors in other "
"cells.[/!]"
msgstr ""
"[!java|scala]An array[/!][!python]A list[/!] is an ordered வரிசை of மாறிகள் "
"that go together.  It is somehow similar பெறுநர் a shelve where each நிலை can "
"store a separate value. Each variable of the வரிசை is identified by its "
"position, and can store a specific value. [!java|scala]All cells of the "
"array must store values of the same வகை because arrays அரே homogeneous in "
"[!thelang]. It is possible பெறுநர் trick this restriction by using the "
"datatype <code>[!java]Object[/!][!scala]Any[/!]</code> that can contain "
"[!java]almost[/!] any மற்றொன்று datatype. [!java]Primitive வகைகள் such அச் the "
"ones we saw so far (int, boolean, double, char, etc) cannot be stored in an "
"பொருள் variable, but their objectified counter-part (Integer, Boolean, "
"Double, Char, Boolean, etc) can.[/!] It is however a good practice பெறுநர் "
"make the வகை of an array அச் specific அச் possible, i.e., if you plan பெறுநர் "
"store some integers in your array, make it an array of integers, not of "
"[!java]Object[/!][!scala]Any[/!].[/!] [!python]Lists can இரட்டை mix values of "
"differing types, such அச் முழு எண் values in some cells and colors in மற்றொன்று "
"cells.[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:40
msgid ""
"T is the [!java|scala]array[/!][!python]list[/!]'s name, "
"[!java|python]T[0][/!][!scala]T(0)[/!] is the name of the first cell, "
"[!java|python]T[1][/!][!scala]T(1)[/!] the name of the second cell, "
"[!java|python]T[2][/!][!scala]T(2)[/!] the third one, etc. And yes, the "
"first cell is numbered [!java|python]T[0][/!][!scala]T(0)[/!] while the last "
"one of [!java|scala]an array[/!][!python]a list[/!] of size N is "
"[!java|python]T[N-1][/!][!scala]T(N-1)[/!]. It may seem funny to count "
"starting from 0 and not from 1 as usual, but some historical reasons make it "
"unavoidable here."
msgstr ""
"T is the [!java|scala]array[/!][!python]list[/!]'s name, [!java|python]T[0][/"
"!][!scala]T(0)[/!] is the பெயர் of the first cell, [!java|python]T[1][/!]"
"[!scala]T(1)[/!] the பெயர் of the second cell, [!java|python]T[2][/!][!scala]"
"T(2)[/!] the third one, etc. And yes, the first கலன் is numbered "
"[!java|python]T[0][/!][!scala]T(0)[/!] while the last one of [!java|scala]an "
"array[/!][!python]a list[/!] of அளவு N is [!java|python]T[N-1][/!][!scala]"
"T(N-1)[/!]. It சி-வைகாசி seem funny பெறுநர் எண்ணுங்கள் starting இருந்து 0 and not "
"இருந்து 1 அச் usual, but some historical reasons make it unavoidable here."

#. type: Content of: <h3>
#: src/lessons/welcome/array/basics/Array1.html:48
msgid "Basic usage"
msgstr "அடிப்படை usage"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:50
msgid ""
"We can use an integer variable <i>i</i> to access with "
"[!java|python]T[i][/!][!scala]T(i)[/!] to the cells: when the value of "
"<i>i</i> is 0, then [!java|python]T[i][/!][!scala]T(i)[/!] accesses "
"[!java|python]T[0][/!][!scala]T(0)[/!]; when the value of <i>i</i> is 10, "
"then [!java|python]T[i][/!][!scala]T(i)[/!] accesses "
"[!java|python]T[10][/!][!scala]T(10)[/!].  <i>i</i> is said to be the "
"<b>index</b> in T.  <code>[!java|python]T[i][/!][!scala]T(i)[/!]</code> can "
"be used just like any variable. We can set a new value:"
msgstr ""
"We can use an முழு எண் variable <i>i</i> பெறுநர் access with [!java|python]"
"T[i][/!][!scala]T(i)[/!] பெறுநர் the cells: when the மதிப்பு of <i>i</i> is 0, "
"then [!java|python]T[i][/!][!scala]T(i)[/!] accesses [!java|python]T[0][/!]"
"[!scala]T(0)[/!]; when the மதிப்பு of <i>i</i> is 10, then [!java|python]"
"T[i][/!][!scala]T(i)[/!] accesses [!java|python]T[10][/!][!scala]T(10)[/!].  "
"<i>i</i> is said பெறுநர் be the <b>index</b> in T.  <code>[!java|python]T[i][/"
"!][!scala]T(i)[/!]</code> can be used just like any variable. We can கணம் a "
"புதிய value:"

#. type: Content of: <pre>
#: src/lessons/welcome/array/basics/Array1.html:58
#, no-wrap
msgid "[!java|python]T[i][/!][!scala]T(i)[/!] = 78[!java];[/!]"
msgstr "[!java|python]T[i][/!][!scala]T(i)[/!] = 78[!java];[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:60
msgid "We can retrieve and use its value:"
msgstr "We can retrieve and use its value:"

#. type: Content of: <pre>
#: src/lessons/welcome/array/basics/Array1.html:61
#, no-wrap
msgid "x = [!java|python]T[i][/!][!scala]T(i)[/!][!java];[/!]"
msgstr "ஃச் = [!java|python]T[i][/!][!scala]T(i)[/!][!java];[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:63
msgid "We can test this value:"
msgstr "We can தேர்வு this value:"

#. type: Content of: <pre>
#: src/lessons/welcome/array/basics/Array1.html:64
#, no-wrap
msgid ""
"if ([!java|python]T[i][/!][!scala]T(i)[/!] > 0) "
"[!scala|java]{[/!][!python]:[/!]\n"
"    [!java|scala]//[/!][!python]#[/!] instructions...\n"
"[!java|scala]}[/!]"
msgstr ""
"if ([!java|python]T[i][/!][!scala]T(i)[/!] > 0) [!scala|java]{[/!][!python]:"
"[/!]\n"
"    [!java|scala]//[/!][!python]#[/!] instructions...\n"
"[!java|scala]}[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:68
msgid ""
"It is very easy to traverse the whole "
"[!scala|java]array[/!][!python]list[/!], for example to initialize each "
"cells."
msgstr ""
"It is very easy பெறுநர் traverse the whole [!scala|java]array[/!][!python]"
"list[/!], க்கு example பெறுநர் initialize each cells."

#. type: Content of: <pre>
#: src/lessons/welcome/array/basics/Array1.html:71
#, no-wrap
msgid ""
"[!java]for (int i = 0; i&lt;T.length; i++) {[/!][!python]for i in "
"range(len(T)):[/!][!scala]for (i &lt;- 0 to T.length-1) {[/!]\n"
"   [!java|python]T[i][/!][!scala]T(i)[/!] = 3[!java];[/!]\n"
"[!java|scala]}[/!]"
msgstr ""
"[!java]for (int i = 0; i&lt;T.length; i++) {[/!][!python]for i in "
"range(len(T)):[/!][!scala]for (i &lt;- 0 பெறுநர் T.length-1) {[/!]\n"
"   [!java|python]T[i][/!][!scala]T(i)[/!] = 3[!java];[/!]\n"
"[!java|scala]}[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:75
msgid ""
"[!java|scala]The notation <code>T.length</code> retrieves the length of the "
"array T,[/!] [!python]The function <code>len()</code> retrieves the length "
"of the list T,[/!] allowing to build a classical for loop easily.  "
"[!python]Actually, the <code>len()</code> function is much more generic and "
"can be used to retrieve the length of many objects.  Applied to strings for "
"example, it returns the amount of chars in this string.[/!] [!scala]Don't "
"forget to start at <code>0</code> and stop at <code>T.length-1</code> "
"instead of <code>1</code> to <code>T.length</code> however.[/!]"
msgstr ""
"[!java|scala]The notation <code>T.length</code> retrieves the length of the "
"array T,[/!] [!python]The சார்பு <code>len()</code> retrieves the length of "
"the பட்டியல் T,[/!] allowing பெறுநர் உருவாக்கு a classical க்கு loop easily.  "
"[!python]Actually, the <code>len()</code> சார்பு is much more generic and can "
"be used பெறுநர் retrieve the length of many objects.  Applied பெறுநர் சரங்கள் க்கு"
" example, it returns the amount of chars in this string.[/!] [!scala]Don't "
"forget பெறுநர் தொடங்கு at <code>0</code> and நிறுத்து at <code>T.length-1</"
"code> instead of <code>1</code> பெறுநர் <code>T.length</code> however.[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:83
msgid ""
"If you just want to iterate over the values of T without keeping track of "
"their index, you can simply write:"
msgstr ""
"If you just want பெறுநர் iterate வீச்சலகு the values of T without keeping மின்தடம்"
" of their index, you can simply எழுது:"

#. type: Content of: <pre>
#: src/lessons/welcome/array/basics/Array1.html:84
#, no-wrap
msgid ""
"[!java]for (int i: T) {[/!][!scala]for (i &lt;- T) {[/!][!python]for i in "
"T:[/!]\n"
"  action()[!java];[/!]\n"
"[!java|scala]}[/!]"
msgstr ""
"[!java]for (int i: T) {[/!][!scala]for (i &lt;- T) {[/!][!python]for i in T:"
"[/!]\n"
"  action()[!java];[/!]\n"
"[!java|scala]}[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:87
msgid ""
"[!java]This construct is called an <i>extended loop</i> in Java. The "
"variable <i>i</i> takes all values of the set located to the right of the "
"colon (:), one after the other.[/!] [!python|scala]This is actually very "
"similar to the previous construct.  Simply, "
"<code>[!python]range(n)[/!][!scala]i to j[/!]</code> returns a set of "
"integers over which the for construct iterates.  Actually, [!thelang] offers "
"much more elegant ways to traverse [!python]lists[/!][!scala]arrays[/!] and "
"other data collections, but this should be the topic of a specific set of "
"exercises (that are still to be written in PLM).[/!]"
msgstr ""
"[!java]This construct is called an <i>extended loop</i> in Java. The "
"variable <i>i</i> takes அனைத்தும் values of the கணம் located பெறுநர் the வலது of "
"the பெருங்குடல் (:), one after the other.[/!] [!python|scala]This is actually "
"very similar பெறுநர் the previous construct.  Simply, <code>[!python]range(n)"
"[/!][!scala]i பெறுநர் j[/!]</code> returns a கணம் of integers வீச்சலகு which the "
"க்கு construct iterates.  Actually, [!thelang] offers much more elegant ways "
"பெறுநர் traverse [!python]lists[/!][!scala]arrays[/!] and மற்றொன்று தகவல்கள் "
"collections, but this should be the topic of a specific கணம் of exercises ("
"that அரே still பெறுநர் be written in PLM).[/!]"

#. type: Content of: <h3>
#: src/lessons/welcome/array/basics/Array1.html:98
msgid "Declaring [!python]a list[/!][!java|scala]an array[/!]"
msgstr "Declaring [!python]a list[/!][!java|scala]an array[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:101
msgid ""
"If you know beforehand the content of your list, you can affect these values "
"all together.  Just put them between square braces and separated by commas "
"as follows:"
msgstr ""
"If you know beforehand the content of your list, you can affect these values "
"அனைத்தும் together.  Just put them between square braces and separated by "
"commas அச் follows:"

#. type: Content of: <pre>
#: src/lessons/welcome/array/basics/Array1.html:104
#, no-wrap
msgid ""
"L = [1, 3, 5, 7, 9] \n"
"<span class=\"comment\"># L is now an array of 5 values, all of them being "
"integers</span>"
msgstr ""
"L = [1, 3, 5, 7, 9] \n"
"<span class=\"comment\"># L is now an array of 5 values, அனைத்தும் of them "
"being integers</span>"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:106
msgid ""
"Otherwise, you probably want to create an empty list and then append each "
"values separately to the list:"
msgstr ""
"Otherwise, you probably want பெறுநர் create an வெறுமை பட்டியல் and then பிற்சேர் "
"each values separately பெறுநர் the list:"

#. type: Content of: <pre>
#: src/lessons/welcome/array/basics/Array1.html:108
#, no-wrap
msgid ""
"L2 = [] \n"
"<span class=\"comment\"># L2 is now an empty list</span>\n"
"L2.append(1)\n"
"L2.append(3)\n"
"L2.append(5)\n"
"L2.append(7)\n"
"L2.append(9) \n"
"<span class=\"comment\"># Its content is now the same as L previously</span>"
msgstr ""
"L2 = [] \n"
"<span class=\"comment\"># L2 is now an வெறுமை list</span>\n"
"L2.append(1)\n"
"L2.append(3)\n"
"L2.append(5)\n"
"L2.append(7)\n"
"L2.append(9) \n"
"<span class=\"comment\"># Its content is now the same அச் L previously</span>"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/array/basics/Array1.html:116
#: src/lessons/turmites/helloturmite/HelloTurmite.html:61
msgid "[/!] [!java|scala]"
msgstr "[/!] [!java|scala]"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:119
msgid ""
"To declare a variable named <b>T</b> that can store an array of integers, "
"one should write:"
msgstr ""
"பெறுநர் declare a variable named <b>T</b> that can store an array of "
"integers, one should எழுது:"

#. type: Content of: <pre>
#: src/lessons/welcome/array/basics/Array1.html:120
#, no-wrap
msgid "[!java]int[] T;[/!][!scala]var T:Array[Int][/!]"
msgstr "[!java]int[] T;[/!][!scala]var T:Array[Int][/!]"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:122
msgid ""
"[!java]<code>int</code> means that the elements of the array are of type "
"integer; <code>[]</code> means that we are speaking of an array and "
"<code>T</code> is the name of the variable.  For historical reasons, this "
"can also be written as <code>int T[]</code> (with the [] after the variable "
"name), but this is less readable and should probably be avoided.[/!] "
"[!scala]The <code>[Int]</code> notation specializes the Array type (that is "
"generic), specifying that each cell of this array is an integer. An array of "
"booleans would simply by written <code>Array[Boolean]</code>.[/!]"
msgstr ""
"[!java]<code>int</code> means that the elements of the array அரே of வகை "
"integer; <code>[]</code> means that we அரே speaking of an array and <code>T</"
"code> is the பெயர் of the variable.  க்கு historical reasons, this can also be "
"written அச் <code>int T[]</code> (with the [] after the variable name), but "
"this is less readable and should probably be avoided.[/!] [!scala]The <code>"
"[Int]</code> notation specializes the Array வகை (that is generic), "
"specifying that each கலன் of this array is an integer. An array of booleans "
"would simply by written <code>Array[Boolean]</code>.[/!]"

#. type: Content of: <h3>
#: src/lessons/welcome/array/basics/Array1.html:130
msgid "Allocating an array"
msgstr "Allocating an array"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:132
msgid ""
"Declaring a variable <code>T</code> that stores an array only reserve the "
"<b>name</b> <code>T</code> for later use, but not the memory area to store "
"the cells. The array is not initialized yet: it does not have any "
"value. What would <code>[!java]T[4][/!][!scala]T(4)[/!]</code> mean if we "
"didn't say that the array is 5 cells long?"
msgstr ""
"Declaring a variable <code>T</code> that stores an array only காப்பு the "
"<b>name</b> <code>T</code> க்கு later use, but not the memory area பெறுநர் "
"store the cells. The array is not initialized yet: it does not have any "
"value. What would <code>[!java]T[4][/!][!scala]T(4)[/!]</code> இடை, சராசரி "
"if we didn't say that the array is 5 cells long?"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:137
msgid "First and foremost, we have to give a value to <code>T</code>:"
msgstr ""
"First and foremost, we have பெறுநர் give a மதிப்பு பெறுநர் <code>T</code>:"

#. type: Content of: <pre>
#: src/lessons/welcome/array/basics/Array1.html:138
#, no-wrap
msgid "[!java]T = new int[10];[/!][!scala]var T = new Array[Int](10)[/!]"
msgstr "[!java]T = புதிய int[10];[/!][!scala]var T = புதிய Array[Int](10)[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:140
msgid ""
"<code>new</code> means that we want to create something, and "
"<code>[!java]int[10][/!][!scala]Array[Int](10)[/!]</code> means that it is "
"an array of 10 integer values.  In return, an array of 10 integer cells is "
"created in memory, and the <code>T</code> variable <b>references</b> this "
"array."
msgstr ""
"<code>new</code> means that we want பெறுநர் create something, and <code>"
"[!java]int[10][/!][!scala]Array[Int](10)[/!]</code> means that it is an "
"array of 10 முழு எண் values.  In return, an array of 10 முழு எண் cells is "
"உருவாக்கப்பட்டது in memory, and the <code>T</code> variable <b>references</b> "
"this array."

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:145
msgid ""
"The size of an array is fixed and cannot be changed after the creation of "
"the array. The size of a <code>T</code> array can be retrieve by consulting "
"the variable <code>T.length</code>."
msgstr ""
"The அளவு of an array is fixed and cannot be changed after the creation of "
"the array. The அளவு of a <code>T</code> array can be retrieve by consulting "
"the variable <code>T.length</code>."

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:149
msgid ""
"While allocating, you can specify the size with a variable: "
"<code>[!java]int[] T = new int[i];[/!][!scala]var T = new "
"Array[Int](i);[/!]</code> In this case, the array's size will be set to the "
"value of <code>i</code> <i>when <code>new</code> gets called</i>.  The size "
"of the array still cannot be modified: even if the variable <code>i</code> "
"changes afterward, the size remains to the value given when it was "
"allocated.  [!java]Also, it is forbidden to write something like <code>int "
"T[10];</code> when declaring the variable.  You are required to use the "
"<code>new</code> instruction to allocate it, as in <code>int[] T = new "
"int[10];</code> [/!]"
msgstr ""
"While allocating, you can specify the அளவு with a variable: <code>[!java]"
"int[] T = புதிய int[i];[/!][!scala]var T = புதிய Array[Int](i);[/!]</code> "
"In this case, the array's அளவு will be கணம் பெறுநர் the மதிப்பு of <code>i</"
"code> <i>when <code>new</code> gets called</i>.  The அளவு of the array still "
"cannot be மாற்றியமைக்கப்பட்ட: இரட்டை if the variable <code>i</code> changes "
"afterward, the அளவு remains பெறுநர் the மதிப்பு given when it was allocated.  "
"[!java]Also, it is forbidden பெறுநர் write something like <code>int T[10];</"
"code> when declaring the variable.  You அரே required பெறுநர் use the "
"<code>new</code> instruction பெறுநர் allocate it, அச் in <code>int[] T = புதிய "
"int[10];</code> [/!]"

#. type: Content of: <h4>
#: src/lessons/welcome/array/basics/Array1.html:157
msgid "Declaration and initialization"
msgstr "சாற்றுதல் and முன்னமைவு"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:158
msgid ""
"If you know beforehand the content of your array, you can declare, allocate "
"and initialize it in one shoot:"
msgstr ""
"If you know beforehand the content of your array, you can declare, allocate "
"and initialize it in one shoot:"

#. type: Content of: <pre>
#: src/lessons/welcome/array/basics/Array1.html:159
#, no-wrap
msgid ""
"[!java]int[] T = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };[/!][!scala]var T = "
"Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)[/!]"
msgstr ""
"[!java]int[] T = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };[/!][!scala]var T = Array("
"1, 2, 3, 4, 5, 6, 7, 8, 9, 10)[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:161
msgid ""
"To know the size of the array to allocate, the compiler counts the provided "
"values.  This code is equivalent to:"
msgstr ""
"பெறுநர் know the அளவு of the array பெறுநர் allocate, the தொகுப்பி counts the "
"provided values.  This குறியீடு is equivalent இதற்கு:"

#. type: Content of: <pre>
#: src/lessons/welcome/array/basics/Array1.html:163
#, no-wrap
msgid ""
"[!java]int[] T = new int[10];\n"
"T[0] = 1;\n"
"T[1] = 2;\n"
"...\n"
"T[9] = 10;[/!][!scala]var T = new Array[Int](10);\n"
"T(0) = 1\n"
"T(1) = 2\n"
"...\n"
"T(9) = 10[/!]"
msgstr ""
"[!java]int[] T = புதிய int[10];\n"
"T[0] = 1;\n"
"T[1] = 2;\n"
"...\n"
"T[9] = 10;[/!][!scala]var T = புதிய Array[Int](10);\n"
"T(0) = 1\n"
"T(1) = 2\n"
"...\n"
"T(9) = 10[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:173
msgid "It is also equivalent to:"
msgstr "It is also equivalent இதற்கு:"

#. type: Content of: <pre>
#: src/lessons/welcome/array/basics/Array1.html:174
#, no-wrap
msgid ""
"[!java]int[] T = new int[10];\n"
"for (int i=0; i&lt;T.length; i++) {\n"
"  T[i] = i+1;\n"
"}[/!][!scala]var T = new Array[Int](10);\n"
"for (i &lt;- 0 to T.length-1) {\n"
"  T(i) = i+1\n"
"}[/!]"
msgstr ""
"[!java]int[] T = புதிய int[10];\n"
"for (int i=0; i&lt;T.length; i++) {\n"
"  T[i] = i+1;\n"
"}[/!][!scala]var T = புதிய Array[Int](10);\n"
"for (i &lt;- 0 பெறுநர் T.length-1) {\n"
"  T(i) = i+1\n"
"}[/!]"

#. type: Content of: <h3>
#: src/lessons/welcome/array/basics/Array1.html:185
msgid "[!python]Lists[/!][!scala|java]Arrays[/!] and method parameters"
msgstr "[!python]Lists[/!][!scala|java]Arrays[/!] and method parameters"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:186
msgid ""
"It is perfectly OK to pass [!python]a list[/!][!java|scala]an array[/!] to a "
"method as a parameter.  This method can then use this parameter as if it "
"were defined locally:"
msgstr ""
"It is perfectly சரி பெறுநர் கணவாய் [!python]a list[/!][!java|scala]an array[/!]"
" பெறுநர் a method அச் a parameter.  This method can then use this கூறளவு அச் if "
"it were defined locally:"

#. type: Content of: <pre>
#: src/lessons/welcome/array/basics/Array1.html:188
#, no-wrap
msgid ""
"[!java]boolean has42First(int[] array) {\n"
"    return array[0] == 42;\n"
"}[/!][!python]def has42First(list):\n"
"  return list[0] == 42[/!][!scala]def has42First(array:Array[Int]):Boolean = "
"{\n"
"  return array(0) == 42\n"
"}[/!]"
msgstr ""
"[!java]boolean has42First(int[] array) {\n"
"    return array[0] == 42;\n"
"}[/!][!python]def has42First(list):\n"
"  return list[0] == 42[/!][!scala]def has42First(array:Array[Int]):Boolean = "
"{\n"
"  return array(0) == 42\n"
"}[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:195
msgid "On the caller side, that also very simple:"
msgstr "On the caller side, that also very simple:"

#. type: Content of: <pre>
#: src/lessons/welcome/array/basics/Array1.html:196
#, no-wrap
msgid ""
"[!java]int[] tab = new int[10];[/!][!scala]var tab = new Array[Int] "
"(10)[/!][!python]tab = [1, 3, 5, 7, 9][/!]\n"
"[!java|scala]<span class=\"comment\">// Values initialization "
"omitted</span>\n"
"[/!]if (has42First(tab))[!java|scala] {[/!][!python]:[/!]\n"
"   <span class=\"comment\">[!java|scala]//[/!][!python]#[/!] do "
"something</span>\n"
"[!java|scala]}[/!]"
msgstr ""
"[!java]int[] தாவல் = புதிய int[10];[/!][!scala]var தாவல் = புதிய Array[Int] "
"(10)[/!][!python]tab = [1, 3, 5, 7, 9][/!]\n"
"[!java|scala]<span class=\"comment\">// Values முன்னமைவு omitted</span>\n"
"[/!]if (has42First(tab))[!java|scala] {[/!][!python]:[/!]\n"
"   <span class=\"comment\">[!java|scala]//[/!][!python]#[/!] do "
"something</span>\n"
"[!java|scala]}[/!]"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/array/basics/Array1.html:202
#: src/lessons/turmites/langton/Langton.html:21
msgid "[!java]"
msgstr "[!java]"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:203
msgid ""
"If you want to allocate and initialize the array in one shoot, that's a bit "
"more complicated as the compiler has to know the type of the parameter you "
"are creating.  For that, use the following (ugly) construct:"
msgstr ""
"If you want பெறுநர் allocate and initialize the array in one shoot, that's a "
"துணுக்கு more complicated அச் the தொகுப்பி has பெறுநர் know the வகை of the கூறளவு"
" you அரே creating.  க்கு that, use the following (ugly) construct:"

#. type: Content of: <pre>
#: src/lessons/welcome/array/basics/Array1.html:206
#, no-wrap
msgid ""
"if (has42First(   new int[] {1, 3, 5, 7, 9}   ) {\n"
"   <span class=\"comment\">// do something</span>\n"
"}"
msgstr ""
"if (has42First(   புதிய int[] {1, 3, 5, 7, 9}   ) {\n"
"   <span class=\"comment\">// do something</span>\n"
"}"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:211
msgid ""
"Methods can also return [!java|scala]arrays[/!][!python]lists[/!] as result "
"without any complication.  Here is a method that returns [!java|scala]an "
"array[/!][!python]a list[/!] of the requested size, filled with 42s."
msgstr ""
"முறைகள் can also return [!java|scala]arrays[/!][!python]lists[/!] அச் result "
"without any complication.  Here is a method that returns [!java|scala]an "
"array[/!][!python]a list[/!] of the requested size, filled with 42s."

#. type: Content of: <pre>
#: src/lessons/welcome/array/basics/Array1.html:214
#, no-wrap
msgid ""
"[!java]int[] fill42(int size) {\n"
"    int[] res = new int[size];\n"
"    for (int i=0; i&lt;size; i++) \n"
"        res[i] = 42;\n"
"    return res;\n"
"}[/!][!scala]def fill42(size:Int):Array[Int] = {\n"
"    var res = new Array[int] (size)\n"
"    for (i &lt;- 0 to size -1) {\n"
"        res(i) = 42;\n"
"    }\n"
"    return res;\n"
"}[/!][!python]def fill42(size):\n"
"    res = []\n"
"    for i in range(size):\n"
"        res.append(42)\n"
"    return res[/!]"
msgstr ""
"[!java]int[] fill42(int size) {\n"
"    int[] res = புதிய int[size];\n"
"    க்கு (int i=0; i&lt;size; i++) \n"
"        res[i] = 42;\n"
"    return res;\n"
"}[/!][!scala]def fill42(size:Int):Array[Int] = {\n"
"    var res = புதிய Array[int] (size)\n"
"    க்கு (i &lt;- 0 பெறுநர் அளவு -1) {\n"
"        res(i) = 42;\n"
"    }\n"
"    return res;\n"
"}[/!][!python]def fill42(size):\n"
"    res = []\n"
"    க்கு i in range(size):\n"
"        res.append(42)\n"
"    return res[/!]"

#. type: Content of: <h3>
#: src/lessons/welcome/array/basics/Array1.html:231
#: src/lessons/recursion/lego/square/FourSquare.html:48
#: src/lessons/recursion/hanoi/HanoiBoard.html:21
msgid "Goal of this exercise"
msgstr "Goal of this exercise"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:233
msgid "At least! After this long explanation, we can come back to the exercise."
msgstr ""
"At least! After this long explanation, we can come பின் பெறுநர் the exercise."

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:234
msgid ""
"Your mission is rather simple actually.  Your code should save the color "
"pattern observed on the first row into [!java|scala]an array[/!][!python]a "
"list[/!].  [!python]The easiest is to create an empty list, and then "
"<code>append()</code> the colors one after the others as you read them (with "
"<code>getGroundColor()</code>).[/!] [!java|scala]For that, you should "
"declare and allocate an array of <code>Color</code>. Beware, there is "
"several worlds, of differing size; use <code>getWorldHeight()</code> to "
"retrieve the size of the current world.  Once the array allocated, fill it "
"by reading the ground color in each locations (with "
"<code>getGroundColor()</code>).[/!]"
msgstr ""
"Your mission is rather simple actually.  Your குறியீடு should சேமி the color "
"pattern observed on the first நிரை into [!java|scala]an array[/!][!python]a "
"list[/!].  [!python]The easiest is பெறுநர் create an வெறுமை list, and then "
"<code>append()</code> the colors one after the others அச் you read them (with "
"<code>getGroundColor()</code>).[/!] [!java|scala]For that, you should "
"declare and allocate an array of <code>Color</code>. Beware, there is "
"several worlds, of differing size; use <code>getWorldHeight()</code> பெறுநர் "
"retrieve the அளவு of the மின்னோட்ட்ம், ஓட்டம் world.  Once the array allocated, "
"fill it by படித்தல் the ground color in each locations (with "
"<code>getGroundColor()</code>).[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array1.html:242
msgid ""
"Once you managed to read and save the pattern on the first row, you have to "
"reapply the pattern on every rows, for example by executing "
"<code>getWorldHeight()</code> times a method written specifically for this."
msgstr ""
"Once you managed பெறுநர் read and சேமி the pattern on the first row, you have "
"பெறுநர் reapply the pattern on every rows, க்கு example by executing "
"<code>getWorldHeight()</code> பெருக்கல் a method written specifically க்கு this."

#. type: Content of: <h1>
#: src/lessons/welcome/array/basics/Array2.html:2
msgid "[!java|scala]Arrays[/!][!python]Lists[/!], Knotting and Modulos"
msgstr "[!java|scala]Arrays[/!][!python]Lists[/!], Knotting and Modulos"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array2.html:4
msgid ""
"This exercise is similar to the previous one: you have to reproduce the "
"color pattern of the first cell into the other ones."
msgstr ""
"This exercise is similar பெறுநர் the previous one: you have பெறுநர் reproduce "
"the color pattern of the first கலன் into the மற்றொன்று ones."

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array2.html:7
msgid ""
"The first difference is that the world is bordered of walls: you thus have "
"to slightly modify your trajectory to ensure that the buggle does not crash "
"into a wall. The simpler for that is to handle the first cell out of the "
"<code>for</code> loop and do only <code>getWorldHeight()-1</code> steps in "
"the loop."
msgstr ""
"The first வேறுபாடு is that the world is bordered of walls: you thus have "
"பெறுநர் slightly modify your எறிபாதை பெறுநர் ensure that the buggle does not "
"crash into a wall. The simpler க்கு that is பெறுநர் கைப்பிடி the first கலன் out "
"of the <code>for</code> loop and do only <code>getWorldHeight()-1</code> "
"படிகள் in the loop."

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array2.html:13
msgid ""
"The other difference is that the offset to apply between columns is not "
"fixed, but written on the first cell of each column. To get the info as an "
"integer, we can use:"
msgstr ""
"The மற்றொன்று வேறுபாடு is that the offset பெறுநர் இடு between columns is not "
"fixed, but written on the first கலன் of each column. பெறுநர் get the செய்தி அச் "
"an integer, we can use:"

#. type: Content of: <pre>
#: src/lessons/welcome/array/basics/Array2.html:17
#, no-wrap
msgid ""
"[!java]int offset = Integer.parseInt(readMessage())[/!][!python]offset = "
"int( readMessage() )[/!][!scala]val offset = readMessage().toInt[/!]"
msgstr ""
"[!java]int offset = Integer.parseInt(readMessage())[/!][!python]offset = int("
" readMessage() )[/!][!scala]val offset = readMessage().toInt[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array2.html:19
msgid ""
"<code>readMessage()</code> gets the message on the ground as a "
"[!java|scala]String[/!][!python]string[/!], while "
"<code>[!java]Integer.parseInt(str)[/!][!scala]str.toInt[/!][!python]int(str)[/!]</code> "
"transforms the string <code>str</code> into an integer by <i>reading</i> it."
msgstr ""
"<code>readMessage()</code> gets the செய்தி on the ground அச் a [!java|scala]"
"String[/!][!python]string[/!], while <code>[!java]Integer.parseInt(str)[/!]"
"[!scala]str.toInt[/!][!python]int(str)[/!]</code> transforms the சரம் "
"<code>str</code> into an முழு எண் by <i>reading</i> it."

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array2.html:23
msgid ""
"Then, to pick the right color, the easier is to use the <code>%</code> "
"(modulo) operator. For example, <code>(i + 5) % size</code> allows to "
"retrieve the <code>i</code>th cell of an array of size <code>size</code> "
"with an offset of <code>5</code>."
msgstr ""
"Then, பெறுநர் pick the வலது color, the easier is பெறுநர் use the <code>%</"
"code> (modulo) operator. க்கு example, <code>(i + 5) % size</code> allows "
"பெறுநர் retrieve the <code>i</code>th கலன் of an array of அளவு <code>size</"
"code> with an offset of <code>5</code>."

#. type: Content of: <p>
#: src/lessons/welcome/array/basics/Array2.html:28
msgid "You're up."
msgstr "You're up."

#. type: Content of: <h1>
#: src/lessons/welcome/array/search/IndexOfValue.html:2
msgid "Searching for a given value"
msgstr "Searching க்கு a given மதிப்பு"

#. type: Content of: <p>
#: src/lessons/welcome/array/search/IndexOfValue.html:4
msgid ""
"The goal of this exercise is to search the cell of a given value, and return "
"its position."
msgstr ""
"The goal of this exercise is பெறுநர் தேடல் the கலன் of a given value, and "
"return its position."

#. type: Content of: <p>
#: src/lessons/welcome/array/search/IndexOfValue.html:6
msgid ""
"To that extend, you should fill the method <code>indexOf()</code>, which "
"parameters are the array to explore, and the value to search. If the value "
"<code>lookingFor</code> is not in the array <code>tab</code>, the method "
"should return -1."
msgstr ""
"பெறுநர் that extend, you should fill the method <code>indexOf()</code>, which "
"parameters அரே the array பெறுநர் explore, and the மதிப்பு பெறுநர் search. If "
"the மதிப்பு <code>lookingFor</code> is not in the array <code>tab</code>, the "
"method should return -1."

#. type: Content of: <p>
#: src/lessons/welcome/array/search/IndexOfValue.html:10
msgid ""
"The idea of the algorithm is to sweep over the whole array, checking the "
"value of each cell. If it's the searched value, you should return the index "
"of the cell currently checked."
msgstr ""
"The idea of the படிமுறை is பெறுநர் sweep வீச்சலகு the whole array, checking the "
"மதிப்பு of each cell. If it's the searched value, you should return the "
"குறியெண் of the கலன் currently checked."

#. type: Content of: <p>
#: src/lessons/welcome/array/search/IndexOfValue.html:14
msgid ""
"Remember that indices begin at 0 and not at 1. So, if there is 3 cells, "
"their indices will be 0, 1 and 2. There would not be any cell numbered 3."
msgstr ""
"Remember that indices begin at 0 and not at 1. So, if there is 3 cells, "
"their indices will be 0, 1 and 2. There would not be any கலன் numbered 3."

#. type: Content of: <p>
#: src/lessons/welcome/array/search/IndexOfValue.html:17
msgid ""
"Remember also that the amount of cells in an array can be retrieved using "
"the <code>length</code> attribute. So, if your array is called "
"<code>tab</code>, its size can be retrieved as <code>tab.length</code>.  "
"Note that there is no () after <code>length</code>. An attribute is a sort "
"of variable embedded in another object (here, the array)."
msgstr ""
"Remember also that the amount of cells in an array can be retrieved using "
"the <code>length</code> attribute. So, if your array is called <code>tab</"
"code>, its அளவு can be retrieved அச் <code>tab.length</code>.  குறிப்பு that "
"there is இல்லை () after <code>length</code>. An பண்புக்கூறு is a வரிசைப்படுத்து "
"of variable embedded in another பொருள் (here, the array)."

#. type: Content of: <p>
#: src/lessons/welcome/array/search/IndexOfValue.html:22
msgid "So, the last value of an array is given by <code>tab[tab.length - 1]</code>."
msgstr ""
"So, the last மதிப்பு of an array is given by <code>tab[tab.length - 1]</code>."

#. type: Content of: <p>
#: src/lessons/welcome/array/search/IndexOfValue.html:24
msgid ""
"Remember also that the amount of cells in an array can be retrieved with the "
"<code>len()</code> function. So, if your array is called <code>tab</code>, "
"its size can be retrieved as <code>len(tab)</code>."
msgstr ""
"Remember also that the amount of cells in an array can be retrieved with the "
"<code>len()</code> function. So, if your array is called <code>tab</code>, "
"its அளவு can be retrieved அச் <code>len(tab)</code>."

#. type: Content of: <p>
#: src/lessons/welcome/array/search/IndexOfValue.html:28
msgid "So, the last value of an array is given by <code>tab[ len(tab) - 1]</code>."
msgstr ""
"So, the last மதிப்பு of an array is given by <code>tab[ len(tab) - 1]</code>."

#. type: Content of: <h1>
#: src/lessons/welcome/array/search/IndexOfMaxValue.html:2
msgid "Index of the maximum value"
msgstr "குறியெண் of the பெருமம் மதிப்பு"

#. type: Content of: <p>
#: src/lessons/welcome/array/search/IndexOfMaxValue.html:4
msgid ""
"In this exercise, you must compute the index of the tab cell containing the "
"biggest value."
msgstr ""
"In this exercise, you must compute the குறியெண் of the தாவல் கலன் containing "
"the biggest value."

#. type: Content of: <p>
#: src/lessons/welcome/array/search/IndexOfMaxValue.html:6
msgid ""
"For that, fill the <code>indexOfMaximum()</code> method. Its parameter is "
"the array to explore. Should the array contain the searched value several "
"times, you should return the index of the first occurrence."
msgstr ""
"க்கு that, fill the <code>indexOfMaximum()</code> method. Its கூறளவு is the "
"array பெறுநர் explore. Should the array contain the searched மதிப்பு several "
"times, you should return the குறியெண் of the first occurrence."

#. type: Content of: <p>
#: src/lessons/welcome/array/search/IndexOfMaxValue.html:10
msgid ""
"To solve this exercise, you should sweep over the whole array. For each "
"value, if it's bigger than the biggest value you saw so far, you must save "
"this new champion and its position.  You will thus need 2 extra variables; "
"the initial value of the champion could be the value of the first cell."
msgstr ""
"பெறுநர் solve this exercise, you should sweep வீச்சலகு the whole array. க்கு "
"each value, if it's bigger than the biggest மதிப்பு you saw so far, you must "
"சேமி this புதிய champion and its position.  You will thus need 2 extra "
"variables; the initial மதிப்பு of the champion could be the மதிப்பு of the "
"first cell."

#. type: Content of: <h1>
#: src/lessons/welcome/array/search/AverageValue.html:2
msgid "Average value"
msgstr "Average மதிப்பு"

#. type: Content of: <p>
#: src/lessons/welcome/array/search/AverageValue.html:5
msgid ""
"The objective of this exercise is to compute the average value of the "
"integer values stored in an array."
msgstr ""
"The objective of this exercise is பெறுநர் compute the average மதிப்பு of the "
"முழு எண் values stored in an array."

#. type: Content of: <p>
#: src/lessons/welcome/array/search/AverageValue.html:7
msgid ""
"You have to fill the body of the method <code>average()</code> which takes "
"as parameter the array of integers of which it computes and returns the "
"average value. Please note that this method must return an integer."
msgstr ""
"You have பெறுநர் fill the body of the method <code>average()</code> which "
"takes அச் கூறளவு the array of integers of which it computes and returns the "
"average value. Please குறிப்பு that this method must return an integer."

#. type: Content of: <p>
#: src/lessons/welcome/array/search/AverageValue.html:9
msgid ""
"To compute the average value of an integer, it is necessary to traverse the "
"whole array and to compute the sum of all its values (so you will need a "
"variable to store this temporary result), then you have to divide this sum "
"by the size of the array."
msgstr ""
"பெறுநர் compute the average மதிப்பு of an integer, it is necessary பெறுநர் "
"traverse the whole array and பெறுநர் compute the sum of அனைத்தும் its values ("
"so you will need a variable பெறுநர் store this temporary result), then you "
"have பெறுநர் divide this sum by the அளவு of the array."

#. type: Content of: <p>
#: src/lessons/welcome/array/search/AverageValue.html:11
msgid ""
"In Java, you can get the size of an array <code>myarray</code> by consulting "
"its <code>length</code> attribute (in other words, "
"<code>myarray.length</code>). Notice that there is no parenthesis after "
"<code>length</code>."
msgstr ""
"In Java, you can get the அளவு of an array <code>myarray</code> by consulting "
"its <code>length</code> பண்புக்கூறு (in மற்றொன்று words, "
"<code>myarray.length</code>). Notice that there is இல்லை parenthesis after "
"<code>length</code>."

#. type: Content of: <p>
#: src/lessons/welcome/array/search/AverageValue.html:16
msgid ""
"In python, retrieving the size of an array <code>myarray</code> is as easy "
"as calling <code>len(myarray)</code>."
msgstr ""
"In python, retrieving the அளவு of an array <code>myarray</code> is அச் easy அச்"
" calling <code>len(myarray)</code>."

#. type: Content of: <h1>
#: src/lessons/welcome/array/search/MaxValue.html:2
msgid "Maximal value"
msgstr "Maximal மதிப்பு"

#. type: Content of: <p>
#: src/lessons/welcome/array/search/MaxValue.html:4
msgid ""
"In this exercise, you must compute the maximal value contained in an array.  "
"For that, fill the <code>maximum()</code> method, which parameter is the "
"array to explore."
msgstr ""
"In this exercise, you must compute the maximal மதிப்பு contained in an "
"array.  க்கு that, fill the <code>maximum()</code> method, which கூறளவு is "
"the array பெறுநர் explore."

#. type: Content of: <p>
#: src/lessons/welcome/array/search/MaxValue.html:8
msgid ""
"To compute this value, sweep over the whole parameter. For each value, if "
"it's bigger than the biggest value you saw so far, you must save this value "
"somewhere to remember it afterward. You thus need an extra variable, which "
"can be initialized to the value of the first array cell."
msgstr ""
"பெறுநர் compute this value, sweep வீச்சலகு the whole parameter. க்கு each value, "
"if it's bigger than the biggest மதிப்பு you saw so far, you must சேமி this "
"மதிப்பு somewhere பெறுநர் remember it afterward. You thus need an extra "
"variable, which can be initialized பெறுநர் the மதிப்பு of the first array cell."

#. type: Content of: <h1>
#: src/lessons/welcome/array/search/OccurrenceOfValue.html:2
msgid "Occurrence of a value"
msgstr "Occurrence of a மதிப்பு"

#. type: Content of: <p>
#: src/lessons/welcome/array/search/OccurrenceOfValue.html:4
msgid ""
"In this exercise, you must compute the amount of occurrences of a given "
"value in an array (that is, the amount of time that this value appears in "
"the array). For that, fill the <code>occurrences()</code> method, which "
"returns the number of occurrence of <code>lookingFor</code> in "
"<code>tab</code>."
msgstr ""
"In this exercise, you must compute the amount of occurrences of a given "
"மதிப்பு in an array (that is, the amount of time that this மதிப்பு appears in "
"the array). க்கு that, fill the <code>occurrences()</code> method, which "
"returns the எண் of occurrence of <code>lookingFor</code> in <code>tab</code>."

#. type: Content of: <p>
#: src/lessons/welcome/array/search/OccurrenceOfValue.html:9
msgid ""
"To compute this value, simply sweep over the array counting for the amount "
"of cells containing the searched value. You thus need an extra variable for "
"that."
msgstr ""
"பெறுநர் compute this value, simply sweep வீச்சலகு the array counting க்கு the "
"amount of cells containing the searched value. You thus need an extra "
"variable க்கு that."

#. type: Content of: <h1>
#: src/lessons/welcome/array/search/Extrema.html:2
msgid "Maxima and Minima"
msgstr "பெருமம் and சிறுமம்"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/array/search/Extrema.html:4
msgid ""
"In this exercise, you must return the difference between the maxima (i.e., "
"the largest value of the array) and the minima (i.e., its smallest "
"value). The returned value is then a positive number.  Beware, you can only "
"do one traversal of the array to gather all informations that you need."
msgstr ""
"In this exercise, you must return the வேறுபாடு between the பெருமம் (i.e., the "
"largest மதிப்பு of the array) and the சிறுமம் (i.e., its smallest value). The "
"returned மதிப்பு is then a நேரமம் number.  Beware, you can only do one "
"traversal of the array பெறுநர் gather அனைத்தும் informations that you need."

#. type: Content of: <h1>
#: src/lessons/welcome/array/search/SecondMaxValue.html:2
msgid "Second Biggest Value"
msgstr "Second Biggest மதிப்பு"

#. type: Content of: <p>
#: src/lessons/welcome/array/search/SecondMaxValue.html:4
msgid ""
"In this exercise, you must compute the second maximal value contained in an "
"array, i.e. the value that becomes the maximum if you remove every instance "
"of the current maximum from the array."
msgstr ""
"In this exercise, you must compute the second maximal மதிப்பு contained in an "
"array, i.e. the மதிப்பு that becomes the பெருமம் if you அகற்று every instance "
"of the மின்னோட்ட்ம், ஓட்டம் பெருமம் இருந்து the array."

#. type: Content of: <p>
#: src/lessons/welcome/array/search/SecondMaxValue.html:7
msgid ""
"As usual, you should gather the information in only one traversal of the "
"array.  You can assume that the second biggest value actual exists (there is "
"at least two distinct values in the array), and that all values in the array "
"are greater than [!python] -100000000.[/!] "
"[!java|scala]<code>Integer.MIN_VALUE</code> (which is the smallest "
"representable integer existing in [!thelang]).[/!]"
msgstr ""
"அச் usual, you should gather the செய்தி in only one traversal of the array.  "
"You can assume that the second biggest மதிப்பு actual exists (there is at "
"least two distinct values in the array), and that அனைத்தும் values in the "
"array அரே greater than [!python] -100000000.[/!] [!java|scala]"
"<code>Integer.MIN_VALUE</code> (which is the smallest representable முழு எண் "
"existing in [!thelang]).[/!]"

#. type: Content of: <h1>
#: src/lessons/welcome/array/array123/Array123.html:2
msgid "Array123"
msgstr "Array123"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/array/array123/Array123.html:3
msgid ""
"Given an array of integers, return true if .. 1, 2, 3, .. appears in the "
"array somewhere."
msgstr ""
"Given an array of integers, return true if .. 1, 2, 3, .. appears in the "
"array somewhere."

#. type: Content of: <p>
#: src/lessons/welcome/array/array123/Array123.html:5
#: src/lessons/welcome/array/array667/Array667.html:8
#: src/lessons/welcome/array/arraycount9/ArrayCount9.html:5
#: src/lessons/welcome/array/arrayfront9/ArrayFront9.html:5
#: src/lessons/welcome/array/notriples/NoTriples.html:8
#: src/lessons/welcome/array/has271/Has271.html:10
#: src/lessons/welcome/bat/bool1/Close10.html:8
#: src/lessons/welcome/bat/bool1/Diff21.html:6
#: src/lessons/welcome/bat/bool1/HasTeen.html:7
#: src/lessons/welcome/bat/bool1/IcyHot.html:6
#: src/lessons/welcome/bat/bool1/In1020.html:6
#: src/lessons/welcome/bat/bool1/In3050.html:6
#: src/lessons/welcome/bat/bool1/LoneTeen.html:7
#: src/lessons/welcome/bat/bool1/Main.html:12
#: src/lessons/welcome/bat/bool1/Makes10.html:6
#: src/lessons/welcome/bat/bool1/Max1020.html:8
#: src/lessons/welcome/bat/bool1/MonkeyTrouble.html:8
#: src/lessons/welcome/bat/bool1/NearHundred.html:8
#: src/lessons/welcome/bat/bool1/ParotTrouble.html:9
#: src/lessons/welcome/bat/bool1/PosNeg.html:6
#: src/lessons/welcome/bat/bool1/SleepIn.html:8
#: src/lessons/welcome/bat/bool1/SumDouble.html:6
#: src/lessons/welcome/bat/bool2/AlarmClock.html:12
#: src/lessons/welcome/bat/bool2/AnswerCell.html:9
#: src/lessons/welcome/bat/bool2/BlueTicket.html:11
#: src/lessons/welcome/bat/bool2/CaughtSpeeding.html:12
#: src/lessons/welcome/bat/bool2/CigarParty.html:10
#: src/lessons/welcome/bat/bool2/DateFashion.html:13
#: src/lessons/welcome/bat/bool2/GreenTicket.html:10
#: src/lessons/welcome/bat/bool2/In1To10.html:9
#: src/lessons/welcome/bat/bool2/InOrderEqual.html:10
#: src/lessons/welcome/bat/bool2/InOrder.html:9
#: src/lessons/welcome/bat/bool2/LastDigit2.html:9
#: src/lessons/welcome/bat/bool2/LessBy10.html:6
#: src/lessons/welcome/bat/bool2/Main.html:7
#: src/lessons/welcome/bat/bool2/MaxMod5.html:10
#: src/lessons/welcome/bat/bool2/NearTen.html:9
#: src/lessons/welcome/bat/bool2/RedTicket.html:10
#: src/lessons/welcome/bat/bool2/SortaSum.html:8
#: src/lessons/welcome/bat/bool2/SquirrelPlay.html:11
#: src/lessons/welcome/bat/bool2/TeaParty.html:12
#: src/lessons/welcome/bat/bool2/TeenSum.html:9
#: src/lessons/welcome/bat/bool2/TwoAsOne.html:6
#: src/lessons/welcome/bat/bool2/WithoutDoubles.html:9
#: src/lessons/bat/string1/Main.html:10 src/lessons/bat/string1/AltPairs.html:5
#: src/lessons/bat/string1/FrontTimes.html:8
#: src/lessons/bat/string1/Last2.html:9
#: src/lessons/bat/string1/StringBits.html:5
#: src/lessons/bat/string1/StringMatch.html:9
#: src/lessons/bat/string1/StringSplosion.html:5
#: src/lessons/bat/string1/StringTimes.html:5
#: src/lessons/bat/string1/StringX.html:7
#: src/lessons/bat/string1/StringYak.html:8
msgid ""
"This exercise was converted to PLM from the excellent exercising site "
"http://codingbat.com/"
msgstr ""
"This exercise was converted பெறுநர் PLM இருந்து the excellent exercising site "
"http://codingbat.com/"

#. type: Content of: <h1>
#: src/lessons/welcome/array/array667/Array667.html:2
msgid "Array667"
msgstr "Array667"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/array/array667/Array667.html:3
msgid ""
"Given an array of integers, return the number of times that two 6's are next "
"to each other in the array. Also count instances where the second \"6\" is "
"actually a 7."
msgstr ""
"Given an array of integers, return the எண் of பெருக்கல் that two 6's அரே அடுத்தது"
" பெறுநர் each மற்றொன்று in the array. Also எண்ணுங்கள் instances where the second "
"\"6\" is actually a 7."

#. type: Content of: <h1>
#: src/lessons/welcome/array/arraycount9/ArrayCount9.html:2
msgid "ArrayCount9"
msgstr "ArrayCount9"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/array/arraycount9/ArrayCount9.html:3
msgid "Given an array of integers, return the number of 9's in the array."
msgstr "Given an array of integers, return the எண் of 9's in the array."

#. type: Content of: <h1>
#: src/lessons/welcome/array/arrayfront9/ArrayFront9.html:2
msgid "ArrayFront9"
msgstr "ArrayFront9"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/array/arrayfront9/ArrayFront9.html:3
msgid ""
"Given an array of integers, return true if one of the first 4 elements in "
"the array is a 9. The array length may be less than 4."
msgstr ""
"Given an array of integers, return true if one of the first 4 elements in "
"the array is a 9. The array length சி-வைகாசி be less than 4."

#. type: Content of: <h1>
#: src/lessons/welcome/array/notriples/NoTriples.html:2
msgid "NoTriples"
msgstr "NoTriples"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/array/notriples/NoTriples.html:3
msgid ""
"Given an array of integers, we'll say that a triple is a value appearing 3 "
"times in a row in the array. Return true if the array does not contain any "
"triples."
msgstr ""
"Given an array of integers, we'll say that a மும்மை is a மதிப்பு appearing 3 "
"பெருக்கல் in a நிரை in the array. Return true if the array does not contain "
"any triples."

#. type: Content of: <h1>
#: src/lessons/welcome/array/has271/Has271.html:2
msgid "Has271"
msgstr "Has271"

#. type: Content of: <p>
#: src/lessons/welcome/array/has271/Has271.html:3
msgid ""
"Given an array of integers, return true if it contains a 2, 7, 1 pattern -- "
"a value, followed by the value plus 5, followed by the initial value minus "
"1.  So, 2,7,1 is such a pattern because 7 is 5+2 and 1 is 2-1. 3,8,2 is also "
"such a pattern."
msgstr ""
"Given an array of integers, return true if it contains a 2, 7, 1 pattern -- "
"a value, followed by the மதிப்பு plus 5, followed by the initial மதிப்பு minus "
"1.  So, 2,7,1 is such a pattern because 7 is 5+2 and 1 is 2-1. 3,8,2 is also "
"such a pattern."

#. type: Content of: <p>
#: src/lessons/welcome/array/has271/Has271.html:7
msgid ""
"Additionally the 271 counts even if the \"1\" differs by 2 or less from the "
"correct value."
msgstr ""
"Additionally the 271 counts இரட்டை if the \"1\" differs by 2 or less இருந்து "
"the சரியான value."

#. type: Content of: <h1>
#: src/lessons/welcome/array/golomb/Golomb.html:2
msgid "Golomb sequence"
msgstr "Golomb வரிசை"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/array/golomb/Golomb.html:4
msgid ""
"The Golomb sequence is a non-decreasing integer sequence where a(n) is the "
"number of times that n occurs in the sequence, with a(1) = 1."
msgstr ""
"The Golomb வரிசை is a non-decreasing முழு எண் வரிசை where a(n) is the எண் of "
"பெருக்கல் that n occurs in the sequence, with a(1) = 1."

#. type: Content of: <p>
#: src/lessons/welcome/array/golomb/Golomb.html:7
msgid ""
"Since a(1)=1, it means that 1 occurs only once in the sequence, so a(2) must "
"be different. Since the sequence is non-decreasing, a(2)  must be greater "
"than 1. Since a(2)>1, the digit 2 must appear more than one time in the "
"sequence. So a(2)=2."
msgstr ""
"Since a(1)=1, it means that 1 occurs only once in the sequence, so a(2) must "
"be different. Since the வரிசை is non-decreasing, a(2)  must be greater than "
"1. Since a(2)>1, the digit 2 must appear more than one time in the sequence. "
"So a(2)=2."

#. type: Content of: <p>
#: src/lessons/welcome/array/golomb/Golomb.html:12
msgid ""
"Since a(2)=2, there is two 2 in the sequence, so we know the value of "
"a(3). And so on for the other values of the sequence."
msgstr ""
"Since a(2)=2, there is two 2 in the sequence, so we know the மதிப்பு of a(3). "
"And so on க்கு the மற்றொன்று values of the sequence."

#. type: Content of: <p>
#: src/lessons/welcome/array/golomb/Golomb.html:15
msgid "Write a function that computes the Nth element of the sequence."
msgstr "Write a சார்பு that computes the Nth தனிமம் of the sequence."

#. type: Content of: <h1>
#: src/lessons/welcome/array/island/Island.html:2
msgid "Buggles' Island"
msgstr "Buggles' Island"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/array/island/Island.html:4
msgid ""
"You just received the traveling notes of your old aunt who traveled accross "
"the country of the Buggles' Islands. She wrote down the altitude every "
"kilometer during her trip, resulting in a sequence of numbers as follows."
msgstr ""
"You just received the traveling notes of your old aunt who traveled accross "
"the நாடு of the Buggles' Islands. சீ wrote down the குத்துயரம் every kilometer "
"during her trip, resulting in a வரிசை of numbers அச் follows."

#. type: Content of: <pre>
#: src/lessons/welcome/array/island/Island.html:9
#, no-wrap
msgid "0 0 1 1 2 2 1 1 0 1 2 2 1 1 0"
msgstr "0 0 1 1 2 2 1 1 0 1 2 2 1 1 0"

#. type: Content of: <p>
#: src/lessons/welcome/array/island/Island.html:11
msgid "Here is a cut of the islands on that path:"
msgstr "Here is a வெட்டு of the islands on that path:"

#. type: Content of: <pre>
#: src/lessons/welcome/array/island/Island.html:14
#, no-wrap
msgid ""
"       /***\\       /*\\         &lt;-- 2 meters above the see level\n"
"   /***********\\ /*******\\     &lt;-- 1 meter above the see level\n"
"***************************    &lt;-- see level\n"
"| | | | | | | | | | | | | |\n"
"0 0 1 1 2 2 1 1 0 1 2 1 1 0    &lt;-- altitude on each point\n"
msgstr ""
"       /***\\       /*\\         &lt;-- 2 meters above the see level\n"
"   /***********\\ /*******\\     &lt;-- 1 அளவி above the see level\n"
"***************************    &lt;-- see level\n"
"| | | | | | | | | | | | | |\n"
"0 0 1 1 2 2 1 1 0 1 2 1 1 0    &lt;-- குத்துயரம் on each point\n"

#. type: Content of: <p>
#: src/lessons/welcome/array/island/Island.html:21
msgid "This example is constituted of four levels of island:"
msgstr "This example is constituted of நான்கு, நாலடி, நான்கடி levels of island:"

#. type: Content of: <ul><li>
#: src/lessons/welcome/array/island/Island.html:24
msgid "1 1 2 2 1 1 (the island on the left)"
msgstr "1 1 2 2 1 1 (the island on the left)"

#. type: Content of: <ul><li>
#: src/lessons/welcome/array/island/Island.html:25
msgid "2 2 (the mountain topping the left island)"
msgstr "2 2 (the mountain topping the இடது island)"

#. type: Content of: <ul><li>
#: src/lessons/welcome/array/island/Island.html:26
msgid "1 2 1 1 (the right island)"
msgstr "1 2 1 1 (the வலது island)"

#. type: Content of: <ul><li>
#: src/lessons/welcome/array/island/Island.html:27
msgid "2 (the mountain on the right)"
msgstr "2 (the mountain on the right)"

#. type: Content of: <p>
#: src/lessons/welcome/array/island/Island.html:30
msgid "This can also be visualized this way:"
msgstr "This can also be visualized this way:"

#. type: Content of: <pre>
#: src/lessons/welcome/array/island/Island.html:32
#, no-wrap
msgid "0 0(1 1(2 2)1 1)0(1(2)1 1)0"
msgstr "0 0(1 1(2 2)1 1)0(1(2)1 1)0"

#. type: Content of: <p>
#: src/lessons/welcome/array/island/Island.html:34
msgid ""
"Could you write a little program to compute the amount of levels in a given "
"sequence of altitudes? Actually, there is an iterative and a recursive "
"solution to that problem."
msgstr ""
"Could you write a little திட்டம் பெறுநர் compute the amount of levels in a "
"given வரிசை of altitudes? Actually, there is an iterative and a recursive "
"நீர்மக்கூழ் பெறுநர் that problem."

#. type: Content of: <p>
#: src/lessons/welcome/methods/basics/Methods.html:5
msgid ""
"We will now write our own methods. It somehow comes down to extending the "
"buggle vocabulary by teaching it new tricks."
msgstr ""
"We will now write our own methods. It somehow comes down பெறுநர் extending "
"the buggle vocabulary by teaching it புதிய tricks."

#. type: Content of: <p>
#: src/lessons/welcome/methods/basics/Methods.html:8
msgid ""
"For example, we saw in a previous exercise how to ask the buggle to go get "
"the baggle in front of it, and bring it back. If there is several baggles on "
"the board, and if we want to bring all of them on the bottom line, you have "
"to repeat this code several times, or include it in a loop. In any case, you "
"should avoid to duplicate your code to keep it pleasant to read and easily "
"understandable.  It would be better if the buggle could obey an "
"<code>goAndGet()</code> order just like it understands a "
"<code>[!c]stepForward()[/!][!scala|java|python]forward()[/!]</code> one."
msgstr ""
"க்கு example, we saw in a previous exercise how பெறுநர் ask the buggle பெறுநர் "
"go get the baggle in front of it, and bring it back. If there is several "
"baggles on the board, and if we want பெறுநர் bring அனைத்தும் of them on the கீழே "
"line, you have பெறுநர் repeat this குறியீடு several times, or include it in a "
"loop. In any case, you should avoid பெறுநர் duplicate your குறியீடு பெறுநர் "
"keep it pleasant பெறுநர் read and easily understandable.  It would be better "
"if the buggle could obey an <code>goAndGet()</code> order just like it "
"understands a <code>[!c]stepForward()[/!][!scala|java|python]forward()[/!]</"
"code> one."

#. type: Content of: <h3>
#: src/lessons/welcome/methods/basics/Methods.html:16
msgid "Defining methods"
msgstr "Defining முறைகள்"

#. type: Content of: <p>
#: src/lessons/welcome/methods/basics/Methods.html:18
msgid ""
"The [!thelang] syntax to write a simple method called <code>goAndGet</code> "
"is the following:"
msgstr ""
"The [!thelang] syntax பெறுநர் write a simple method called <code>goAndGet</"
"code> is the following:"

#. type: Content of: <pre>
#: src/lessons/welcome/methods/basics/Methods.html:20
#, no-wrap
msgid ""
"[!java|c]void goAndGet() {[/!][!python]def goAndGet():[/!][!scala]def "
"goAndGet() {[/!]\n"
"  actions()[!java|c];[/!]\n"
"  to()[!java|c];[/!]\n"
"  do()[!java|c];[/!]\n"
"[!java|scala|c]}[/!]"
msgstr ""
"[!java|c]void goAndGet() {[/!][!python]def goAndGet():[/!][!scala]def "
"goAndGet() {[/!]\n"
"  actions()[!java|c];[/!]\n"
"  to()[!java|c];[/!]\n"
"  do()[!java|c];[/!]\n"
"[!java|scala|c]}[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/methods/basics/Methods.html:26
msgid ""
"The method body [!java|scala|c](between curly braces)[/!][!python](the "
"indented block)[/!] will be executed when we call the method later on (that "
"is, when we write <code>goAndGet()</code> somewhere in our code). This "
"method body can contain as many instructions as you want, and any "
"construction we saw so far (for, while, if, etc).  [!java|c]The "
"<code>void</code> keyword means that this method does not return any "
"result. For example, the <code>isOverBaggle()</code> method does return a "
"result, which is a [!c]int[/!][!java]boolean[/!] indicating whether or not "
"the buggle is located over a baggle. We will soon learn to define such "
"methods too. For now, just write <code>void</code> at this location.[/!]"
msgstr ""
"The method body [!java|scala|c](between curly braces)[/!][!python](the "
"indented block)[/!] will be executed when we call the method later on (that "
"is, when we write <code>goAndGet()</code> somewhere in our code). This "
"method body can contain அச் many instructions அச் you want, and any "
"construction we saw so far (for, while, if, etc).  [!java|c]The <code>void</"
"code> keyword means that this method does not return any result. க்கு "
"example, the <code>isOverBaggle()</code> method does return a result, which "
"is a [!c]int[/!][!java]boolean[/!] indicating whether or not the buggle is "
"located வீச்சலகு a baggle. We will soon learn பெறுநர் define such முறைகள் too. "
"க்கு now, just write <code>void</code> at this location.[/!]"

#. type: Content of: <h3>
#: src/lessons/welcome/methods/basics/Methods.html:39
msgid "Documenting methods"
msgstr "Documenting முறைகள்"

#. type: Content of: <p>
#: src/lessons/welcome/methods/basics/Methods.html:41
msgid ""
"You should strive to document your code to keep it readable. When you write "
"it, its purpose and limitations are clear to you, but most of the time, this "
"does not last for long. You will soon forget about the details of every "
"specific method, and this day you will be happy to read its "
"documentation. In the following example, we use the specific formalism of "
"[!java]javadoc[/!][!scala]scaladoc[/!][!python]pydoc[/!], a program that "
"extracts the documentation of [!thelang] source code to produce html "
"pages. The main advantage is that it allows to keep the documentation near "
"to the code.  So, when you change your code, you have less chances to forget "
"to update the documentation."
msgstr ""
"You should strive பெறுநர் ஆவணம் your குறியீடு பெறுநர் keep it readable. When you "
"write it, its purpose and limitations அரே clear பெறுநர் you, but பெரும்பாலானவை "
"of the time, this does not last க்கு long. You will soon forget பற்றி the "
"details of every specific method, and this நாள் you will be happy பெறுநர் read "
"its documentation. In the following example, we use the specific formalism "
"of [!java]javadoc[/!][!scala]scaladoc[/!][!python]pydoc[/!], a திட்டம் that "
"extracts the ஆவணப்படுத்துதல் of [!thelang] மூலம் குறியீடு பெறுநர் produce உஉகுமொ "
"pages. The main advantage is that it allows பெறுநர் keep the ஆவணப்படுத்துதல் "
"near பெறுநர் the code.  So, when you change your code, you have less chances "
"பெறுநர் forget பெறுநர் புதுப்பிப்பு the documentation."

#. type: Content of: <p>
#: src/lessons/welcome/methods/basics/Methods.html:50
msgid ""
"[!java|scala][!java]javadoc[/!][!scala]scaladoc[/!] comments begin with the "
"<code>/**</code> marker (with two asterisks). They must be placed right "
"before the method they document for the tool to find them.[/!] "
"[!python]pydoc comments should be placed at the beginning of the method body "
"so that the tool finds them. They should be placed between "
"<code>\"\"\"</code>, which mark multi-line strings in python.[/!] The first "
"line should be a brief description of what this method does while any "
"subsequent lines should provide any important details about the method."
msgstr ""
"[!java|scala][!java]javadoc[/!][!scala]scaladoc[/!] comments begin with the "
"<code>/**</code> marker (with two asterisks). They must be placed வலது "
"before the method they ஆவணம் க்கு the கருவி பெறுநர் கண்டுபிடி them.[/!] [!python]"
"pydoc comments should be placed at the beginning of the method body so that "
"the கருவி finds them. They should be placed between <code>\"\"\"</code>, "
"which mark multi-line சரங்கள் in python.[/!] The first வரி should be a brief "
"விவரம் of what this method does while any subsequent வரிகள் should provide any "
"important details பற்றி the method."

#. type: Content of: <pre>
#: src/lessons/welcome/methods/basics/Methods.html:59
#, no-wrap
msgid ""
"[!java|scala]/**\n"
" *  Go, retrieves the baggle in front of the buggle, and brings it back \n"
" *\n"
" *   Does not check for walls, so be careful to not call it when walls are "
"present.\n"
" */[/!]\n"
"[!java]void goAndGet() {[/!]\n"
"[!scala]def goAndGet() {[/!]\n"
"[!python]def goAndGet():\n"
"  \"\"\"Go, retrieves the baggle in front of the buggle, and brings it "
"back.\n"
"\n"
"  Does not check for walls, so be careful to not call it when walls are "
"present.\"\"\"[/!]\n"
"  actions()[!java];[/!]\n"
"  to()[!java];[/!]\n"
"  do()[!java];[/!]\n"
"[!java|scala]}[/!]"
msgstr ""
"[!java|scala]/**\n"
" *  Go, retrieves the baggle in front of the buggle, and brings it பின் \n"
" *\n"
" *   Does not சரிபார் க்கு walls, so be careful பெறுநர் not call it when walls "
"அரே present.\n"
" */[/!]\n"
"[!java]void goAndGet() {[/!]\n"
"[!scala]def goAndGet() {[/!]\n"
"[!python]def goAndGet():\n"
"  \"\"\"Go, retrieves the baggle in front of the buggle, and brings it back."
"\n"
"\n"
"  Does not சரிபார் க்கு walls, so be careful பெறுநர் not call it when walls அரே "
"present.\"\"\"[/!]\n"
"  actions()[!java];[/!]\n"
"  to()[!java];[/!]\n"
"  do()[!java];[/!]\n"
"[!java|scala]}[/!]"

#. type: Content of: <h3>
#: src/lessons/welcome/methods/basics/Methods.html:75
msgid "Naming conventions"
msgstr "Naming conventions"

#. type: Content of: <p>
#: src/lessons/welcome/methods/basics/Methods.html:76
msgid ""
"Most programming language forbid the use of spaces in method and variable "
"identifiers (=their names).  Accented letters are sometimes allowed (as in "
"[!thelang]), but they can lead to portability issues between operating "
"systems and should thus be avoided when possible."
msgstr ""
"பெரும்பாலானவை programming மொழி forbid the use of இடங்கள் in method and variable "
"identifiers (=their names).  Accented letters அரே sometimes allowed (as in "
"[!thelang]), but they can ஈயம் பெறுநர் portability issues between operating "
"systems and should thus be avoided when possible."

#. type: Content of: <p>
#: src/lessons/welcome/methods/basics/Methods.html:80
msgid ""
"Across all programming languages, there is two main conventions to name "
"variables and methods. The first one, consists in concatenating all words "
"with only the first letter of each word in upper case. \"go and get\" "
"becomes goAndGet().  It is called CamelCase because identifiers written this "
"way graphically remind of a camel back. The other convention, called "
"snake_case, is to write every words in lower case, separated with "
"underscores symbols (_). \"go and get\" becomes go_and_get()."
msgstr ""
"Across அனைத்தும் programming languages, there is two main conventions பெறுநர் "
"பெயர் மாறிகள் and methods. The first one, consists in concatenating அனைத்தும் "
"சொற்கள் with only the first letter of each சொல் in upper case. \"go and get\" "
"becomes goAndGet().  It is called CamelCase because identifiers written this "
"way graphically remind of a camel back. The மற்றொன்று convention, called "
"snake_case, is பெறுநர் write every சொற்கள் in lower case, separated with "
"underscores குறியிடுகள் (_). \"go and get\" becomes go_and_get()."

#. type: Content of: <p>
#: src/lessons/welcome/methods/basics/Methods.html:87
msgid ""
"Which convention to use is the topic of heated discussion across developers, "
"but each programming language has its own habits. In Python, Perl and the C "
"language, the snake_case is often used for methods and variables. Java and "
"Scala prefer the lowerCamelCase (the very first letter is lower case) for "
"that."
msgstr ""
"Which convention பெறுநர் use is the topic of heated discussion across "
"developers, but each programming மொழி has its own habits. In Python, பெர்ல் "
"and the C language, the snake_case is often used க்கு முறைகள் and variables. "
"சாவா and Scala prefer the lowerCamelCase (the very first letter is lower "
"case) க்கு that."

#. type: Content of: <p>
#: src/lessons/welcome/methods/basics/Methods.html:91
msgid ""
"The CamelCase convention is used everywhere in PLM because this program is "
"written in Java itself, so we kept our habits when adding new languages. But "
"the fact that the Python bindings of PLM use the CamelCase instead of the "
"snake_case is considered as a bug that we will fix in further releases."
msgstr ""
"The CamelCase convention is used everywhere in PLM because this திட்டம் is "
"written in சாவா itself, so we kept our habits when adding புதிய languages. "
"But the fact that the பைதான் bindings of PLM use the CamelCase instead of the "
"snake_case is considered அச் a பிழை that we will fix in further releases."

#. type: Content of: <p>
#: src/lessons/welcome/methods/basics/Methods.html:97
msgid ""
"The goal of this exercise is to write a method called "
"<code>goAndGet()</code> which does the same than in a previous exercises "
"(move forward until over a baggle, pick it up, move back to initial "
"position, drop baggle)."
msgstr ""
"The goal of this exercise is பெறுநர் write a method called <code>goAndGet()</"
"code> which does the same than in a previous exercises (move forward until "
"வீச்சலகு a baggle, pick it up, move பின் பெறுநர் initial position, drop baggle)."

#. type: Content of: <p>
#: src/lessons/welcome/methods/basics/Methods.html:101
msgid ""
"This exercise is a bit different because you will not write all of the code "
"executed by the buggle. Instead, you should only write one method that get "
"called automagically added when you click on <b>Start</b>. Your buggle calls "
"your <code>goAndGet()</code> method on each row, until the baggle is "
"found. [!python|scala]The code for that is already provided under the "
"<code>goAndGet()</code> method, but you probably don't want to change "
"it.[/!] [!java]You don't need to write the code calling "
"<code>goAndGet()</code> yourself. It's automagically there already, even if "
"you cannot see it.[/!]"
msgstr ""
"This exercise is a துணுக்கு different because you will not write அனைத்தும் of "
"the குறியீடு executed by the buggle. Instead, you should only write one "
"method that get called automagically added when you click on <b>Start</b>. "
"Your buggle calls your <code>goAndGet()</code> method on each row, until the "
"baggle is found. [!python|scala]The குறியீடு க்கு that is already provided "
"under the <code>goAndGet()</code> method, but you probably don't want பெறுநர் "
"change it.[/!] [!java]You don't need பெறுநர் write the குறியீடு calling "
"<code>goAndGet()</code> yourself. It's automagically there already, இரட்டை if "
"you cannot see it.[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/methods/basics/Methods.html:110
msgid ""
"But for that to work, you have to actually write this "
"<code>goAndGet()</code> method now."
msgstr ""
"But க்கு that பெறுநர் work, you have பெறுநர் actually write this "
"<code>goAndGet()</code> method now."

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/methods/basics/MethodsDogHouse.html:4
msgid ""
"We now would like to teach the buggle to build a doghouse. The naive "
"approach consists in directly writing the needed code as follows.  This "
"works because the buggle of this exercise leaves a red path as it moves."
msgstr ""
"We now would like பெறுநர் teach the buggle பெறுநர் உருவாக்கு a doghouse. The "
"naive approach consists in directly writing the needed குறியீடு அச் follows.  "
"This works because the buggle of this exercise leaves a சிவப்பு பாதை அச் it "
"moves."

#. type: Content of: <pre>
#: src/lessons/welcome/methods/basics/MethodsDogHouse.html:8
#, no-wrap
msgid ""
"[!c]stepForward()[/!][!python|java|scala]forward()[/!][!java|c];[/!]\n"
"[!c]stepForward()[/!][!python|java|scala]forward()[/!][!java|c];[/!]\n"
"left()[!java|c];[/!]\n"
"[!c]stepForward()[/!][!python|java|scala]forward()[/!][!java|c];[/!]\n"
"[!c]stepForward()[/!][!python|java|scala]forward()[/!][!java|c];[/!]\n"
"left()[!java|c];[/!]\n"
"[!c]stepForward()[/!][!python|java|scala]forward()[/!][!java|c];[/!]\n"
"[!c]stepForward()[/!][!python|java|scala]forward()[/!][!java|c];[/!]\n"
"left()[!java|c];[/!]\n"
"[!c]stepForward()[/!][!python|java|scala]forward()[/!][!java|c];[/!]\n"
"[!c]stepForward()[/!][!python|java|scala]forward()[/!][!java|c];[/!]\n"
"left()[!java|c];[/!]"
msgstr ""
"[!c]stepForward()[/!][!python|java|scala]forward()[/!][!java|c];[/!]\n"
"[!c]stepForward()[/!][!python|java|scala]forward()[/!][!java|c];[/!]\n"
"left()[!java|c];[/!]\n"
"[!c]stepForward()[/!][!python|java|scala]forward()[/!][!java|c];[/!]\n"
"[!c]stepForward()[/!][!python|java|scala]forward()[/!][!java|c];[/!]\n"
"left()[!java|c];[/!]\n"
"[!c]stepForward()[/!][!python|java|scala]forward()[/!][!java|c];[/!]\n"
"[!c]stepForward()[/!][!python|java|scala]forward()[/!][!java|c];[/!]\n"
"left()[!java|c];[/!]\n"
"[!c]stepForward()[/!][!python|java|scala]forward()[/!][!java|c];[/!]\n"
"[!c]stepForward()[/!][!python|java|scala]forward()[/!][!java|c];[/!]\n"
"left()[!java|c];[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/methods/basics/MethodsDogHouse.html:21
msgid ""
"It becomes harder when we want to draw two doghouses: we have to rewrite the "
"same code twice, which is not really handy. When the code becomes a bit long "
"as this one, it becomes easier to see why we insist since a while on the "
"pure evilness that code duplication represents. Indeed, if you realize that "
"an error sneaked into a code that you copied at several locations, you will "
"have to fix it several times. And mind your back if you forget one of these "
"locations."
msgstr ""
"It becomes harder when we want பெறுநர் draw two doghouses: we have பெறுநர் "
"rewrite the same குறியீடு twice, which is not really handy. When the குறியீடு "
"becomes a துணுக்கு long அச் this one, it becomes easier பெறுநர் see why we "
"insist since a while on the pure evilness that குறியீடு படியீடு represents. "
"Indeed, if you realize that an பிழை sneaked into a குறியீடு that you copied "
"at several locations, you will have பெறுநர் fix it several times. And mind "
"your பின் if you forget one of these locations."

#. type: Content of: <p>
#: src/lessons/welcome/methods/basics/MethodsDogHouse.html:27
msgid ""
"There is even a name to this good principle in programming: DRY/SPOT, which "
"means \"Don't Repeat Yourself / Single Point Of Truth\". The latter part "
"means that each information must be written in only one location of your "
"program to avoid the differing locations to get out of synch when you modify "
"your code."
msgstr ""
"There is இரட்டை a பெயர் பெறுநர் this good principle in programming: DRY/SPOT, "
"which means \"Don't Repeat Yourself / ஒற்றை புள்ளியம் Of Truth\". The latter "
"பகுதி means that each செய்தி must be written in only one location of your "
"திட்டம் பெறுநர் avoid the differing locations பெறுநர் get out of synch when you "
"modify your code."

#. type: Content of: <p>
#: src/lessons/welcome/methods/basics/MethodsDogHouse.html:32
msgid ""
"So, let's apply this good principle and <b>factorize our code</b>, ie to "
"write it only once, for example in a method. You should even to go further "
"by factorizing the method body with a <code>for</code> loop, as seen "
"previously.  If you do it correctly (what you should), you can use the "
"method <code>left()</code> only once."
msgstr ""
"So, let's இடு this good principle and <b>factorize our code</b>, ie பெறுநர் "
"write it only once, க்கு example in a method. You should இரட்டை பெறுநர் go "
"further by factorizing the method body with a <code>for</code> loop, அச் seen "
"previously.  If you do it correctly (what you should), you can use the "
"method <code>left()</code> only once."

#. type: Content of: <p>
#: src/lessons/welcome/methods/basics/MethodsDogHouse.html:39
msgid ""
"The goal of this exercise is to write a method called <code>dogHouse</code> "
"achieving the same result than the code above, but with a for loop to keep "
"it short.  The buggle will call your creation to create several dog houses "
"around its world."
msgstr ""
"The goal of this exercise is பெறுநர் write a method called <code>dogHouse</"
"code> achieving the same result than the குறியீடு above, but with a க்கு loop "
"பெறுநர் keep it short.  The buggle will call your creation பெறுநர் create "
"several dog houses around its world."

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/methods/picture/PictureMono1.html:4
#: src/lessons/welcome/methods/picture/MethodsPicture.html:4
msgid ""
"In this exercise, we will reproduce the geometric drawing that you can see "
"in the \"Objective\" tab."
msgstr ""
"In this exercise, we will reproduce the geometric drawing that you can see "
"in the \"Objective\" tab."

#. type: Content of: <p>
#: src/lessons/welcome/methods/picture/PictureMono1.html:7
#: src/lessons/welcome/methods/picture/MethodsPicture.html:7
msgid ""
"Your goal (here and in any well written program) is to write the simplest "
"possible code. For that, you have to decompose your work in sub-steps, and "
"write a specific method for each sub-step."
msgstr ""
"Your goal (here and in any well written program) is பெறுநர் write the "
"simplest possible code. க்கு that, you have பெறுநர் decompose your வேலை in sub-"
"steps, and write a specific method க்கு each sub-step."

#. type: Content of: <p>
#: src/lessons/welcome/methods/picture/PictureMono1.html:11
msgid ""
"If you observe carefully the picture to draw, it is constituted of four "
"parts depicting a sort of V. A possible decomposition is to write a method "
"in charge of drawing a V from the current position. Its prototype can be: "
"<code>[!java|c]void [/!]makeV()</code>"
msgstr ""
"If you observe carefully the picture பெறுநர் draw, it is constituted of நான்கு"
", நாலடி, நான்கடி பாகங்கள் depicting a வரிசைப்படுத்து of V. A possible "
"decomposition is பெறுநர் write a method in மின்னூட்டு of drawing a V இருந்து the "
"மின்னோட்ட்ம், ஓட்டம் position. Its prototype can be: <code>[!java|c]void [/!]"
"makeV()</code>"

#. type: Content of: <p>
#: src/lessons/welcome/methods/picture/PictureMono1.html:16
msgid ""
"In this method, you should use the methods <code>brushUp()</code> and "
"<code>brushDown()</code> to mark the ground (you may want to factorize this "
"in another method). It may be wise to write the <code>makeV()</code> so that "
"it places directly the buggle in position for the next V."
msgstr ""
"In this method, you should use the முறைகள் <code>brushUp()</code> and "
"<code>brushDown()</code> பெறுநர் mark the ground (you சி-வைகாசி want பெறுநர் "
"factorize this in another method). It சி-வைகாசி be wise பெறுநர் write the "
"<code>makeV()</code> so that it places directly the buggle in position க்கு "
"the அடுத்தது V."

#. type: Content of: <p>
#: src/lessons/welcome/methods/picture/PictureMono1.html:21
msgid ""
"Your turn. Your code should not be longer than 4 lines (not counting "
"<code>makeV</code>)..."
msgstr ""
"Your turn. Your குறியீடு should not be longer than 4 வரிகள் (not counting "
"<code>makeV</code>)..."

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/methods/picture/PictureMono2.html:4
msgid ""
"We will now reproduce an even bigger geometrical drawing. Once again, you "
"can see the model by clicking on the \"Objective\" tab."
msgstr ""
"We will now reproduce an இரட்டை bigger geometrical drawing. Once again, you "
"can see the மாதிரியுரு by clicking on the \"Objective\" tab."

#. type: Content of: <p>
#: src/lessons/welcome/methods/picture/PictureMono2.html:7
msgid ""
"You can naturally reuse all the code you typed in previous exercise (select "
"the other exercise, do Ctrl-C, come back to the code of this exercise, do "
"Ctrl-V)."
msgstr ""
"You can naturally reuse அனைத்தும் the குறியீடு you typed in previous exercise ("
"select the மற்றொன்று exercise, do Ctrl-C, come பின் பெறுநர் the குறியீடு of this "
"exercise, do Ctrl-V)."

#. type: Content of: <p>
#: src/lessons/welcome/methods/picture/PictureMono2.html:11
msgid ""
"But you want to keep your code as simple as possible. For that, define new "
"methods to deal simply with the repetitions in the pattern. For example, a "
"method <code>makePattern()</code> achieving the pattern of previous example "
"seems to be a good idea (but this may not be enough)."
msgstr ""
"But you want பெறுநர் keep your குறியீடு அச் simple அச் possible. க்கு that, "
"define புதிய முறைகள் பெறுநர் deal simply with the repetitions in the pattern. "
"க்கு example, a method <code>makePattern()</code> achieving the pattern of "
"previous example seems பெறுநர் be a good idea (but this சி-வைகாசி not be "
"enough)."

#. type: Content of: <p>
#: src/lessons/welcome/methods/picture/PictureMono2.html:16
msgid ""
"Why don't you give it a shot? The main code method shouldn't take more than "
"2 lines (included in a for loop)"
msgstr ""
"Why don't you give it a shot? The main குறியீடு method shouldn't take more "
"than 2 வரிகள் (included in a க்கு loop)"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/methods/picture/PictureMono3.html:4
#: src/lessons/welcome/methods/picture/MethodsPictureLarge.html:4
msgid ""
"As you can imagine, you have to reproduce the geometric drawing depicted in "
"the \"Objectives\" tab. As you can see, it is even bigger than the previous "
"one."
msgstr ""
"அச் you can imagine, you have பெறுநர் reproduce the geometric drawing depicted "
"in the \"Objectives\" tab. அச் you can see, it is இரட்டை bigger than the "
"previous one."

#. type: Content of: <p>
#: src/lessons/welcome/methods/picture/PictureMono3.html:8
msgid ""
"You thus have to declare even more methods to use the repetitions of the "
"pattern and factorize your code.  Your turn..."
msgstr ""
"You thus have பெறுநர் declare இரட்டை more முறைகள் பெறுநர் use the repetitions of "
"the pattern and factorize your code.  Your turn..."

#. type: Content of: <h1>
#: src/lessons/welcome/methods/returning/MethodsReturning.html:2
#: src/lessons/lightbot/Board06Func.html:2
msgid "Functions"
msgstr "செயல்பாடுகள்"

#. type: Content of: <p>
#: src/lessons/welcome/methods/returning/MethodsReturning.html:4
msgid ""
"Quite often, you want to write a method that compute some value and returns "
"it. Methods returning results are called <b>functions</b>.  Writing a "
"function is not really harder than writing a simple method.  [!java|c]You "
"simply have to specify the data type of expected results before the function "
"name (where we previously had <code>void</code>).[/!] [!scala]You simply "
"have to add a colon (:) after the parenthesis and write the type of data "
"that your function will return, and add an equal sign (=). This syntax is "
"actually rather close to defining a variable, with its type, that is "
"actually a function.[/!] You can use the <code>return</code> instruction "
"anywhere in your function body to specify that the computation is done (the "
"function is not further executed), and that the result is the value "
"following the <code>return</code> keyword."
msgstr ""
"Quite often, you want பெறுநர் write a method that compute some மதிப்பு and "
"returns it. முறைகள் returning முடிவுகள் அரே called <b>functions</b>.  Writing "
"a சார்பு is not really harder than writing a simple method.  [!java|c]You "
"simply have பெறுநர் specify the தகவல்கள் வகை of expected முடிவுகள் before the "
"சார்பு பெயர் (where we previously had <code>void</code>).[/!] [!scala]You "
"simply have பெறுநர் கூட்டு a பெருங்குடல் (:) after the parenthesis and write the "
"வகை of தகவல்கள் that your சார்பு will return, and கூட்டு an equal sign (=). This "
"syntax is actually rather மூடு பெறுநர் defining a variable, with its type, "
"that is actually a function.[/!] You can use the <code>return</code> "
"instruction anywhere in your சார்பு body பெறுநர் specify that the computation "
"is முடிந்தது (the சார்பு is not further executed), and that the result is the "
"மதிப்பு following the <code>return</code> keyword."

#. type: Content of: <pre>
#: src/lessons/welcome/methods/returning/MethodsReturning.html:14
#, no-wrap
msgid ""
"[!java|c]double pi() {[/!][!scala]def pi(): Double = {[/!][!python]def "
"pi():[/!]\n"
"    return 3.14159[!java|c];[/!]\n"
"[!java|scala|c]}[/!]"
msgstr ""
"[!java|c]double pi() {[/!][!scala]def pi(): இரட்டை = {[/!][!python]def pi():"
"[/!]\n"
"    return 3.14159[!java|c];[/!]\n"
"[!java|scala|c]}[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/methods/returning/MethodsReturning.html:18
msgid ""
"Actually, you can also use that <code>return</code> keyword in methods that "
"do not return any result, to interupt the computation. Of course, you should "
"not provide any value to return in that case."
msgstr ""
"Actually, you can also use that <code>return</code> keyword in முறைகள் that "
"do not return any result, பெறுநர் interupt the computation. Of course, you "
"should not provide any மதிப்பு பெறுநர் return in that case."

#. type: Content of: <p>
#: src/lessons/welcome/methods/returning/MethodsReturning.html:21
msgid ""
"It is possible to have several <code>return</code> instructions in several "
"branches of a conditional. In fact, it is forbidden to have any execution "
"path of your body without any <code>return</code>, or to write some code "
"after the <code>return</code> instruction. Indeed, if the machine reaches "
"the end of the function without finding any <code>return</code>, it cannot "
"know what actual value to give back to the function caller.  Moreover, "
"<code>return</code> interrupts immediately the function execution (why "
"bother looking further when you know the function result?). So, if there is "
"some code after a <code>return</code>, it must be an error and the compiler "
"warns you."
msgstr ""
"It is possible பெறுநர் have several <code>return</code> instructions in "
"several branches of a conditional. In fact, it is forbidden பெறுநர் have any "
"execution பாதை of your body without any <code>return</code>, or பெறுநர் write "
"some குறியீடு after the <code>return</code> instruction. Indeed, if the "
"machine reaches the end of the சார்பு without finding any <code>return</"
"code>, it cannot know what actual மதிப்பு பெறுநர் give பின் பெறுநர் the சார்பு "
"caller.  Moreover, <code>return</code> interrupts உடனடியாக the சார்பு "
"execution (why bother looking further when you know the சார்பு result?). So, "
"if there is some குறியீடு after a <code>return</code>, it must be an பிழை and "
"the தொகுப்பி warns you."

#. type: Content of: <pre>
#: src/lessons/welcome/methods/returning/MethodsReturning.html:32
#, no-wrap
msgid ""
"[!java|scala|c][!java]boolean [/!][!c]int [/!][!scala]def "
"[/!]isFrontFree()[!scala]:Boolean =[/!] {\n"
"    if (isFacingWall() == [!java|scala]true[/!][!c]1[/!]) {\n"
"        return [!java|scala]false[/!][!c]0[/!];\n"
"        <span class=\"comment\">/* no code allowed here */</span>\n"
"    } else {\n"
"        return [!java|scala]true[/!][!c]1[/!];\n"
"        <span class=\"comment\">/* here neither */</span>\n"
"    }\n"
"    <span class=\"comment\">/* even here, forget it */</span>\n"
"}[/!][!python]def isFrontFree():\n"
"    if isFacingWall() == True:\n"
"        return False\n"
"        <span class=\"comment\"># no code allowed here</span>\n"
"    else\n"
"        return True\n"
"        <span class=\"comment\"># here neither</span>\n"
"<span class=\"comment\"># even here, forget it</span>[/!]"
msgstr ""
"[!java|scala|c][!java]boolean [/!][!c]int [/!][!scala]def [/!]isFrontFree()"
"[!scala]:Boolean =[/!] {\n"
"    if (isFacingWall() == [!java|scala]true[/!][!c]1[/!]) {\n"
"        return [!java|scala]false[/!][!c]0[/!];\n"
"        <span class=\"comment\">/* இல்லை குறியீடு allowed here */</span>\n"
"    } else {\n"
"        return [!java|scala]true[/!][!c]1[/!];\n"
"        <span class=\"comment\">/* here neither */</span>\n"
"    }\n"
"    <span class=\"comment\">/* இரட்டை here, forget it */</span>\n"
"}[/!][!python]def isFrontFree():\n"
"    if isFacingWall() == True:\n"
"        return False\n"
"        <span class=\"comment\"># இல்லை குறியீடு allowed here</span>\n"
"    else\n"
"        return True\n"
"        <span class=\"comment\"># here neither</span>\n"
"<span class=\"comment\"># இரட்டை here, forget it</span>[/!]"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/methods/returning/MethodsReturning.html:50
msgid ""
"You will once again write a function that the buggle will use. Its name must "
"be <code>haveBaggle</code>, and it returns a boolean value indicating "
"whether the row in front of the buggle contains a baggle or not. The buggle "
"will use it to search the first row containing a baggle, and stop here."
msgstr ""
"You will once again write a சார்பு that the buggle will use. Its பெயர் must be "
"<code>haveBaggle</code>, and it returns a boolean மதிப்பு indicating whether "
"the நிரை in front of the buggle contains a baggle or not. The buggle will "
"use it பெறுநர் தேடல் the first நிரை containing a baggle, and நிறுத்து here."

#. type: Content of: <p>
#: src/lessons/welcome/methods/returning/MethodsReturning.html:55
msgid ""
"The easier for this function is to use a boolean variable called "
"<code>seenBaggle</code> indicating whether or not we saw a baggle so "
"far. Its initial value is "
"'[!python]False[/!][!scala|java]false[/!][!c]0[/!]'."
msgstr ""
"The easier க்கு this சார்பு is பெறுநர் use a boolean variable called "
"<code>seenBaggle</code> indicating whether or not we saw a baggle so far. "
"Its initial மதிப்பு is '[!python]False[/!][!scala|java]false[/!][!c]0[/!]'."

#. type: Content of: <p>
#: src/lessons/welcome/methods/returning/MethodsReturning.html:59
msgid ""
"Then, move 6 steps forward (the world contains 7 cells and we already are on "
"one of them). For each cell, if it contains a baggle, we store true in "
"<code>sawBaggle</code> (and we don't do anything but moving forward if not)."
msgstr ""
"Then, move 6 படிகள் forward (the world contains 7 cells and we already அரே on "
"one of them). க்கு each cell, if it contains a baggle, we store true in "
"<code>sawBaggle</code> (and we don't do anything but moving forward if not)."

#. type: Content of: <p>
#: src/lessons/welcome/methods/returning/MethodsReturning.html:63
msgid ""
"At the end, we move back by 6 steps, and we return the value of "
"<code>seenBaggle</code> to the caller."
msgstr ""
"At the end, we move பின் by 6 steps, and we return the மதிப்பு of "
"<code>seenBaggle</code> பெறுநர் the caller."

#. type: Content of: <p>
#: src/lessons/welcome/methods/returning/MethodsReturning.html:66
msgid ""
"Note that the used buggle provides some hidden code that will call your "
"<code>haveBaggle</code> function on each column, moving automatically "
"between columns. It is thus very important that your <code>haveBaggle</code> "
"function have no side effect: the position (and orientation) at the end of "
"your code must be the one observed at the beginning of this code. It will "
"move in between to seek for the baggle, but come back to the column start."
msgstr ""
"குறிப்பு that the used buggle provides some hidden குறியீடு that will call "
"your <code>haveBaggle</code> சார்பு on each column, moving automatically "
"between columns. It is thus very important that your <code>haveBaggle</code> "
"சார்பு have இல்லை பக்கம் effect: the position (and orientation) at the end of "
"your குறியீடு must be the one observed at the beginning of this code. It will "
"move in between பெறுநர் seek க்கு the baggle, but come பின் பெறுநர் the நெடுவரிசை"
" start."

#. type: Content of: <p>
#: src/lessons/welcome/methods/returning/MethodsReturning.html:73
msgid ""
"Also, this exercise is a bit different since there is two initial worlds, "
"each with a specific objective. Your code must work for each of "
"them. Observe that the world selection scrolling menu (right below the speed "
"slider)  allows to switch the observed world."
msgstr ""
"Also, this exercise is a துணுக்கு different since there is two initial "
"worlds, each with a specific objective. Your குறியீடு must வேலை க்கு each of "
"them. Observe that the world தேர்வு scrolling பட்டியல் (right below the விரைவு "
"slider)  allows பெறுநர் ஆளி, நிலைமாறி the observed world."

#. type: Content of: <p>
#: src/lessons/welcome/methods/returning/MethodsReturning.html:78
msgid "When your function <code>haveBaggle</code> works, proceed to next exercise."
msgstr ""
"When your சார்பு <code>haveBaggle</code> works, proceed பெறுநர் அடுத்தது "
"exercise."

#. type: Content of: <p>
#: src/lessons/welcome/methods/args/MethodsArgs.html:4
msgid ""
"Don't you get tired of writing again and again the code to move by a fixed "
"amount of steps? On the other hand, writing <tt>forward2()</tt>, "
"<tt>forward3()</tt>, <tt>forward4()</tt>, as well as <tt>backward2()</tt>, "
"<tt>backward3()</tt>, <tt>backward4()</tt>, and so on does not really help, "
"to say the less."
msgstr ""
"Don't you get tired of writing again and again the குறியீடு பெறுநர் move by a "
"fixed amount of steps? On the மற்றொன்று hand, writing <tt>forward2()</tt>, "
"<tt>forward3()</tt>, <tt>forward4()</tt>, அச் well அச் <tt>backward2()</tt>, "
"<tt>backward3()</tt>, <tt>backward4()</tt>, and so on does not really help, "
"பெறுநர் say the less."

#. type: Content of: <p>
#: src/lessons/welcome/methods/args/MethodsArgs.html:10
msgid ""
"Luckily, it is possible to pass <b>parameters</b> to your methods. You have "
"to specify their type and name between the parenthesis after the method "
"name. Then, you can use them in the method body as if it were variables "
"defined in there, and which initial value is what the caller specified."
msgstr ""
"Luckily, it is possible பெறுநர் கணவாய் <b>parameters</b> பெறுநர் your methods. "
"You have பெறுநர் specify their வகை and பெயர் between the parenthesis after the "
"method name. Then, you can use them in the method body அச் if it were மாறிகள் "
"defined in there, and which initial மதிப்பு is what the caller specified."

#. type: Content of: <pre>
#: src/lessons/welcome/methods/args/MethodsArgs.html:15
#, no-wrap
msgid ""
"[!java|c]double [/!]divideByTwo([!java|c]double [/!]x[!scala]: "
"Double[/!])[!scala]: Double =[/!] [!java|scala|c]{[/!][!python]:[/!]\n"
"     return x / 2[!java|c];[/!]\n"
"[!scala|java|c]}[/!]"
msgstr ""
"[!java|c]double [/!]divideByTwo([!java|c]double [/!]x[!scala]: Double[/!])"
"[!scala]: இரட்டை =[/!] [!java|scala|c]{[/!][!python]:[/!]\n"
"     return ஃச் / 2[!java|c];[/!]\n"
"[!scala|java|c]}[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/methods/args/MethodsArgs.html:19
msgid ""
"As caller, you have to specify the initial value of this \"variables\" "
"between the call's parenthesis."
msgstr ""
"அச் caller, you have பெறுநர் specify the initial மதிப்பு of this \"variables\" "
"between the call's parenthesis."

#. type: Content of: <pre>
#: src/lessons/welcome/methods/args/MethodsArgs.html:21
#, no-wrap
msgid "[!java|c]double [/!][!scala]val [/!]result = divideByTwo(3.14)[!java|c];[/!]"
msgstr ""
"[!java|c]double [/!][!scala]val [/!]result = divideByTwo(3.14)[!java|c];[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/methods/args/MethodsArgs.html:23
msgid ""
"If you want several parameters, you need to separate them with comas (,)  "
"both in the declaration and calls."
msgstr ""
"If you want several parameters, you need பெறுநர் separate them with comas (,)"
"  both in the சாற்றுதல் and calls."

#. type: Content of: <pre>
#: src/lessons/welcome/methods/args/MethodsArgs.html:26
#, no-wrap
msgid ""
"[!java|c]double divide(double x, double y) {[/!]\n"
"[!scala]def divide(x:Double, y:Double): Double = {[/!]\n"
"[!python]def divide(x, y):[/!]\n"
"     return x / y[!java|c];[/!]\n"
"[!java|scala|c]}[/!]"
msgstr ""
"[!java|c]double divide(double ஃச், இரட்டை y) {[/!]\n"
"[!scala]def divide(x:Double, y:Double): இரட்டை = {[/!]\n"
"[!python]def divide(x, y):[/!]\n"
"     return ஃச் / y[!java|c];[/!]\n"
"[!java|scala|c]}[/!]"

#. type: Content of: <pre>
#: src/lessons/welcome/methods/args/MethodsArgs.html:31
#, no-wrap
msgid ""
"[!java|c]double res = divide(3.14 , 1.5);[/!]\n"
"[!scala]val res = divide(3.14 , 1.5)[/!]\n"
"[!python]res = divide(3.14 , 1.5)[/!]"
msgstr ""
"[!java|c]double res = divide(3.14 , 1.5);[/!]\n"
"[!scala]val res = divide(3.14 , 1.5)[/!]\n"
"[!python]res = divide(3.14 , 1.5)[/!]"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/methods/args/MethodsArgs.html:35
#: src/lessons/welcome/methods/picture/MethodsPicture.html:35
msgid "[!java|scala]"
msgstr "[!java|scala]"

#. type: Content of: <p>
#: src/lessons/welcome/methods/args/MethodsArgs.html:36
msgid ""
"In [!thelang], you can declare several methods of the same name as long as "
"they don't have the same <b>signature</b>, that is, the same amount of "
"parameters and the same parameters' types."
msgstr ""
"In [!thelang], you can declare several முறைகள் of the same பெயர் அச் long அச் "
"they don't have the same <b>signature</b>, that is, the same amount of "
"parameters and the same parameters' types."

#. type: Content of: <pre>
#: src/lessons/welcome/methods/args/MethodsArgs.html:40
#, no-wrap
msgid ""
"[!java]double max(double x, double y)[/!][!scala]def max(x:Double, "
"y:Double): Double =[/!] {\n"
"  if (x > y) {\n"
"    return x;\n"
"  }\n"
"  return y;\n"
"}[!java]int max(int x, int y)[/!][!scala]def max(x:Int, y:Int): Int =[/!] "
"{\n"
"  if (x > y) {\n"
"    return x;\n"
"  }\n"
"  return y;\n"
"}\n"
"[!java]int max(int x, int y; int z)[/!][!scala]def max(x:Int, y:Int, z:Int): "
"Int =[/!] {\n"
"  if (x > y && x > z) {\n"
"    return x;\n"
"  }\n"
"  if (y > z) {\n"
"    return y;\n"
"  }\n"
"  return z;\n"
"}"
msgstr ""
"[!java]double max(double ஃச், இரட்டை y)[/!][!scala]def max(x:Double, y:Double):"
" இரட்டை =[/!] {\n"
"  if (x > y) {\n"
"    return x;\n"
"  }\n"
"  return y;\n"
"}[!java]int max(int ஃச், int y)[/!][!scala]def max(x:Int, y:Int): Int =[/!] {"
"\n"
"  if (x > y) {\n"
"    return x;\n"
"  }\n"
"  return y;\n"
"}\n"
"[!java]int max(int ஃச், int y; int z)[/!][!scala]def max(x:Int, y:Int, z:Int):"
" Int =[/!] {\n"
"  if (x > ஒய் && ஃச் > z) {\n"
"    return x;\n"
"  }\n"
"  if (y > z) {\n"
"    return y;\n"
"  }\n"
"  return z;\n"
"}"

#. type: Content of: <p>
#: src/lessons/welcome/methods/args/MethodsArgs.html:61
msgid ""
"Observe that we omitted the <tt>else</tt> branches of each <tt>if</tt>. It "
"works anyway because a <tt>return</tt> interrupts the method execution. If "
"we arrive to the last line of "
"<code>[!java]max(int,int)[/!][!scala]max(Int,Int):Int[/!]</code>, we know "
"that <code>x&lt;=y</code> because otherwise, the <tt>return</tt> of line 2 "
"would have stopped the execution."
msgstr ""
"Observe that we omitted the <tt>else</tt> branches of each <tt>if</tt>. It "
"works anyway because a <tt>return</tt> interrupts the method execution. If "
"we arrive பெறுநர் the last வரி of <code>[!java]max(int,int)[/!][!scala]"
"max(Int,Int):Int[/!]</code>, we know that <code>x&lt;=y</code> because "
"otherwise, the <tt>return</tt> of வரி 2 would have நிறுத்தப்பட்டது the "
"execution."

#. type: Content of: <p>
#: src/lessons/welcome/methods/args/MethodsArgs.html:71
msgid ""
"This time, you have to write a <code> [!java|c]move(int "
"stepCount,[!java]boolean[/!][!c]int[/!] forward)[/!] [!scala]move(stepCount: "
"Int,forward: Boolean)[/!] [!python]move(stepCount,forward)[/!] </code> "
"method which moves forward by <code>stepCount</code> steps if "
"<code>forward</code> is true, and moves back of that amount of steps if the "
"boolean is false."
msgstr ""
"This time, you have பெறுநர் write a <code> [!java|c]move(int stepCount,[!java]"
"boolean[/!][!c]int[/!] forward)[/!] [!scala]move(stepCount: Int,forward: "
"Boolean)[/!] [!python]move(stepCount,forward)[/!] </code> method which moves "
"forward by <code>stepCount</code> படிகள் if <code>forward</code> is true, and "
"moves பின் of that amount of படிகள் if the boolean is false."

#. type: Content of: <p>
#: src/lessons/welcome/methods/args/MethodsArgs.html:79
msgid ""
"This time, there is only one world but seven buggles, all sharing the same "
"code.  This code should not be really problematic for you to write, "
"actually."
msgstr ""
"This time, there is only one world but seven buggles, அனைத்தும் sharing the "
"same code.  This குறியீடு should not be really problematic க்கு you பெறுநர் "
"write, actually."

#. type: Content of: <h2>
#: src/lessons/welcome/methods/flowerpot/FlowerPot.html:2
msgid "Flower Pot"
msgstr "Flower Pot"

#. type: Content of: <p>
#: src/lessons/welcome/methods/flowerpot/FlowerPot.html:4
msgid ""
"Your buggle decided to flower a bit the pot it lives in. You have to help it "
"reproducing the drawing of its dreams (check the \"Objective\" tab to see "
"it)."
msgstr ""
"Your buggle decided பெறுநர் flower a துணுக்கு the pot it lives in. You have "
"பெறுநர் உதவி it reproducing the drawing of its dreams (check the \"Objective\""
" தாவல் பெறுநர் see it)."

#. type: Content of: <p>
#: src/lessons/welcome/methods/flowerpot/FlowerPot.html:7
msgid ""
"For that, you have to write a <code>growFlowers()</code> method that does "
"not take any parameter and does not return any result. You could probably "
"make it without defining this method, but this is part of the assignment."
msgstr ""
"க்கு that, you have பெறுநர் write a <code>growFlowers()</code> method that "
"does not take any கூறளவு and does not return any result. You could probably "
"make it without defining this method, but this is பகுதி of the assignment."

#. type: Content of: <p>
#: src/lessons/welcome/methods/flowerpot/FlowerPot.html:11
msgid ""
"Also, you should try to decompose this complex drawing in sub-steps so that "
"your code remains short and easy to read. A method to draw one flower of the "
"color passed in parameter sounds like a good start, but it is probably not "
"enough."
msgstr ""
"Also, you should try பெறுநர் decompose this அணைவு drawing in sub-steps so "
"that your குறியீடு remains குறுக்கு and easy பெறுநர் read. A method பெறுநர் draw "
"one flower of the color passed in கூறளவு sounds like a good start, but it is "
"probably not enough."

#. type: Content of: <p>
#: src/lessons/welcome/methods/flowerpot/FlowerPot.html:15
msgid ""
"For your information, this drawing uses five colors that are listed below.  "
"[!java|scala|c]The data type of these constants is <code>Color</code>, that "
"naturally describes a particular color.[/!]"
msgstr ""
"க்கு your information, this drawing uses five colors that அரே listed below.  "
"[!java|scala|c]The தகவல்கள் வகை of these மாறிலிகள் is <code>Color</code>, that "
"naturally describes a particular color.[/!]"

#. type: Content of: <ul><li>
#: src/lessons/welcome/methods/flowerpot/FlowerPot.html:20
msgid "<code>[!scala|java|python]Color.[/!]RED</code>"
msgstr "<code>[!scala|java|python]Color.[/!]RED</code>"

#. type: Content of: <ul><li>
#: src/lessons/welcome/methods/flowerpot/FlowerPot.html:21
msgid "<code>[!scala|java|python]Color.[/!]PINK</code>"
msgstr "<code>[!scala|java|python]Color.[/!]PINK</code>"

#. type: Content of: <ul><li>
#: src/lessons/welcome/methods/flowerpot/FlowerPot.html:22
msgid "<code>[!scala|java|python]Color.[/!]CYAN</code>"
msgstr "<code>[!scala|java|python]Color.[/!]CYAN</code>"

#. type: Content of: <ul><li>
#: src/lessons/welcome/methods/flowerpot/FlowerPot.html:23
msgid "<code>[!scala|java|python]Color.[/!]ORANGE</code>"
msgstr "<code>[!scala|java|python]Color.[/!]ORANGE</code>"

#. type: Content of: <ul><li>
#: src/lessons/welcome/methods/flowerpot/FlowerPot.html:24
msgid "<code>[!scala|java|python]Color.[/!]GREEN</code>"
msgstr "<code>[!scala|java|python]Color.[/!]GREEN</code>"

#. type: Content of: <ul><li>
#: src/lessons/welcome/methods/flowerpot/FlowerPot.html:25
msgid "<code>[!scala|java|python]Color.[/!]YELLOW</code>"
msgstr "<code>[!scala|java|python]Color.[/!]YELLOW</code>"

#. type: Content of: <h2>
#: src/lessons/welcome/methods/flowerpot/FlowerCase.html:2
msgid "Flower Display Case"
msgstr "Flower காட்சி Case"

#. type: Content of: <p>
#: src/lessons/welcome/methods/flowerpot/FlowerCase.html:4
msgid ""
"Whao! That's not a little pot anymore! That's a huge large flower display "
"case! Your buggle can't help but starts flowering this gorgeous place. You "
"should help it to prevent that it bumps into a wall..."
msgstr ""
"Whao! That's not a little pot anymore! That's a huge large flower காட்சி "
"case! Your buggle can't உதவி but starts flowering this gorgeous place. You "
"should உதவி it பெறுநர் prevent that it bumps into a wall..."

#. type: Content of: <p>
#: src/lessons/welcome/methods/flowerpot/FlowerCase.html:8
msgid "PS: the newly used color is <code>Color.BLUE</code>."
msgstr "PS: the newly used color is <code>Color.BLUE</code>."

#. type: Content of: <h2>
#: src/lessons/welcome/methods/picture/MethodsPicture.html:2
msgid "Colorful drawing"
msgstr "Colorful drawing"

#. type: Content of: <p>
#: src/lessons/welcome/methods/picture/MethodsPicture.html:11
msgid ""
"If you observe carefully the picture to draw, it is constituted of four "
"parts depicting a sort of V using a different color. A possible "
"decomposition is to write a method in charge of drawing a V of the specified "
"color from the current position. Its prototype can be:"
msgstr ""
"If you observe carefully the picture பெறுநர் draw, it is constituted of நான்கு"
", நாலடி, நான்கடி பாகங்கள் depicting a வரிசைப்படுத்து of V using a different "
"color. A possible decomposition is பெறுநர் write a method in மின்னூட்டு of "
"drawing a V of the specified color இருந்து the மின்னோட்ட்ம், ஓட்டம் position. Its "
"prototype can be:"

#. type: Content of: <pre>
#: src/lessons/welcome/methods/picture/MethodsPicture.html:15
#, no-wrap
msgid ""
"[!java|c]void [/!]makeV([!java|c]Color [/!]c[!scala]: Color[/!])[!python]  "
"<span class=\"comment\"># parameter c is of type Color</span>[/!]"
msgstr ""
"[!java|c]void [/!]makeV([!java|c]Color [/!]c[!scala]: Color[/!])[!python]  "
"<span class=\"comment\"># கூறளவு c is of வகை Color</span>[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/methods/picture/MethodsPicture.html:17
msgid ""
"The <code>Color</code> data type naturally describes a particular "
"color. Your code should probably call <code>makeV</code> with the following "
"arguments (a different color for each call):"
msgstr ""
"The <code>Color</code> தகவல்கள் வகை naturally describes a particular color. "
"Your குறியீடு should probably call <code>makeV</code> with the following "
"arguments (a different color க்கு each call):"

#. type: Content of: <ul><li>
#: src/lessons/welcome/methods/picture/MethodsPicture.html:21
msgid "[!java|scala|python]Color.[/!]YELLOW"
msgstr "[!java|scala|python]Color.[/!]YELLOW"

#. type: Content of: <ul><li>
#: src/lessons/welcome/methods/picture/MethodsPicture.html:22
msgid "[!java|scala|python]Color.[/!]RED"
msgstr "[!java|scala|python]Color.[/!]RED"

#. type: Content of: <ul><li>
#: src/lessons/welcome/methods/picture/MethodsPicture.html:23
msgid "[!java|scala|python]Color.[/!]BLUE"
msgstr "[!java|scala|python]Color.[/!]BLUE"

#. type: Content of: <ul><li>
#: src/lessons/welcome/methods/picture/MethodsPicture.html:24
msgid "[!java|scala|python]Color.[/!]GREEN"
msgstr "[!java|scala|python]Color.[/!]GREEN"

#. type: Content of: <p>
#: src/lessons/welcome/methods/picture/MethodsPicture.html:27
msgid ""
"In <code>makeV()</code>, you should use the <code>setBrushColor()</code> "
"method (predefined in the buggle) to change the color of the buggle's brush, "
"as well as <code>brushUp()</code> and <code>brushDown()</code> to change the "
"brush position."
msgstr ""
"In <code>makeV()</code>, you should use the <code>setBrushColor()</code> "
"method (predefined in the buggle) பெறுநர் change the color of the buggle's "
"brush, அச் well அச் <code>brushUp()</code> and <code>brushDown()</code> பெறுநர் "
"change the மின்தொடி position."

#. type: Content of: <p>
#: src/lessons/welcome/methods/picture/MethodsPicture.html:32
msgid ""
"It may be wise to write the <code>makeV()</code> so that it places directly "
"the buggle in position for the next V."
msgstr ""
"It சி-வைகாசி be wise பெறுநர் write the <code>makeV()</code> so that it places "
"directly the buggle in position க்கு the அடுத்தது V."

#. type: Content of: <p>
#: src/lessons/welcome/methods/picture/MethodsPicture.html:36
msgid ""
"Your turn now. I'm sure you can imagine the other methods you need to keep "
"your code simple and pleasant to read.  Complete the method "
"<code>run()</code> that should be called automatically (once).  [!java]the "
"<code>public</code> keyword means more or less that anybody can call this "
"method, which is good because the PLM infrastructure calls it directly.[/!]"
msgstr ""
"Your turn now. I'm sure you can imagine the மற்றொன்று முறைகள் you need பெறுநர் "
"keep your குறியீடு simple and pleasant பெறுநர் read.  Complete the method "
"<code>run()</code> that should be called automatically (once).  [!java]the "
"<code>public</code> keyword means more or less that anybody can call this "
"method, which is good because the PLM infrastructure calls it directly.[/!]"

#. type: Content of: <h2>
#: src/lessons/welcome/methods/picture/MethodsPictureLarge.html:2
msgid "Larger colorful drawing"
msgstr "Larger colorful drawing"

#. type: Content of: <p>
#: src/lessons/welcome/methods/picture/MethodsPictureLarge.html:8
msgid ""
"You thus have to declare even more methods to use the repetitions of the "
"pattern and factorize your code. Another solution is to <i>parametrize</i> "
"your functions to reuse the code you wrote previously by changing the size."
msgstr ""
"You thus have பெறுநர் declare இரட்டை more முறைகள் பெறுநர் use the repetitions of "
"the pattern and factorize your code. Another நீர்மக்கூழ் is பெறுநர் "
"<i>parametrize</i> your செயல்பாடுகள் பெறுநர் reuse the குறியீடு you wrote "
"previously by changing the size."

#. type: Content of: <p>
#: src/lessons/welcome/methods/picture/MethodsPictureLarge.html:13
#: src/lessons/welcome/traversal/Snake.html:40
#: src/lessons/welcome/traversal/column/TraversalByColumn.html:50
#: src/lessons/welcome/traversal/line/TraversalByLine.html:11
#: src/lessons/welcome/traversal/diagonal/TraversalDiagonal.html:11
#: src/lessons/welcome/traversal/zigzag/TraversalZigZag.html:7
msgid "Your turn..."
msgstr "Your turn..."

#. type: Content of: <h2>
#: src/lessons/welcome/methods/picture/PatternPicture.html:2
msgid "Another Colorful Pattern"
msgstr "Another Colorful Pattern"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/methods/picture/PatternPicture.html:4
msgid ""
"Here is yet another exercise where you have to reproduce the pattern "
"provided in the \"Objective\" tab."
msgstr ""
"Here is yet another exercise where you have பெறுநர் reproduce the pattern "
"provided in the \"Objective\" tab."

#. type: Content of: <p>
#: src/lessons/welcome/methods/picture/PatternPicture.html:7
msgid ""
"This one is a bit more difficult than the one seen previously. Look for "
"repeating patterns, even if the color changes, and write a method drawing "
"each of them."
msgstr ""
"This one is a துணுக்கு more difficult than the one seen previously. Look க்கு "
"repeating patterns, இரட்டை if the color changes, and write a method drawing "
"each of them."

#. type: Content of: <p>
#: src/lessons/welcome/methods/picture/PatternPicture.html:11
#: src/lessons/lander/lvl1_lander_101/Lander101.html:42
msgid "Good luck!"
msgstr "Good luck!"

#. type: Content of: <p>
#: src/lessons/welcome/methods/slug/SlugHunting.html:4
msgid ""
"Now that your <code>isFacingTrail()</code> method is working, it's time to "
"write the code to organize the hunting party. Copy/paste your code from the "
"previous exercise, and complete the <code>hunt()</code> method."
msgstr ""
"Now that your <code>isFacingTrail()</code> method is working, it's time "
"பெறுநர் write the குறியீடு பெறுநர் organize the hunting party. Copy/paste your "
"குறியீடு இருந்து the previous exercise, and complete the <code>hunt()</code> "
"method."

#. type: Content of: <p>
#: src/lessons/welcome/methods/slug/SlugHunting.html:8
msgid ""
"Following a track is not very difficult: move forward as long as you have "
"the track in front of you.  If there is not track in front of you anymore, "
"check whether the rest of the track is on your left or on your right, and "
"follow it further."
msgstr ""
"Following a மின்தடம் is not very difficult: move forward அச் long அச் you have "
"the மின்தடம் in front of you.  If there is not மின்தடம் in front of you anymore, "
"சரிபார் whether the rest of the மின்தடம் is on your இடது or on your right, and "
"follow it further."

#. type: Content of: <p>
#: src/lessons/welcome/methods/slug/SlugHunting.html:12
msgid ""
"To ensure that you don't mix the track you come from with the one in front "
"of you, the easier is to erase the track when you follow it. Use the method "
"<code>brushDown()</code> to put your brush down and mark the ground, and "
"<code>brushUp()</code> to move it up again."
msgstr ""
"பெறுநர் ensure that you don't mix the மின்தடம் you come இருந்து with the one in "
"front of you, the easier is பெறுநர் erase the மின்தடம் when you follow it. Use "
"the method <code>brushDown()</code> பெறுநர் put your மின்தொடி down and mark "
"the ground, and <code>brushUp()</code> பெறுநர் move it மேலே again."

#. type: Content of: <p>
#: src/lessons/welcome/methods/slug/SlugHunting.html:16
msgid ""
"Finally, do not forget to capture your prey once you found it (using "
"<code>pickupBaggle()</code>)."
msgstr ""
"Finally, do not forget பெறுநர் capture your prey once you found it (using "
"<code>pickupBaggle()</code>)."

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/methods/slug/SlugHunting.html:20
msgid ""
"<a name=\"Objectives\"> Complete the <code>hunt()</code> method. You "
"probably want to copy over the <code>isFacingTrail()</code> method that you "
"wrote in previous exercise.  </a>"
msgstr ""
"<a name=\"Objectives\"> Complete the <code>hunt()</code> method. You "
"probably want பெறுநர் நகலெடு வீச்சலகு the <code>isFacingTrail()</code> method "
"that you wrote in previous exercise.  </a>"

#. type: Content of: <p>
#: src/lessons/welcome/methods/slug/SlugTracking.html:4
msgid ""
"Your buggle is super happy! It just found the green dribbling trail, "
"certainly left by a big yummy slug.  At its end, the buggle is certain to "
"entertain itself with this appetizing slug (represented as a baggle)."
msgstr ""
"Your buggle is super happy! It just found the பச்சை dribbling trail, "
"certainly இடது by a big yummy slug.  At its end, the buggle is certain பெறுநர்"
" entertain itself with this appetizing குருட்டடி (represented அச் a baggle)."

#. type: Content of: <p>
#: src/lessons/welcome/methods/slug/SlugTracking.html:8
msgid ""
"To reach that goal, you had to write a method <tt>isFacingTrail</tt> that "
"will be called automatically by the buggle on each step. Your method should "
"return [!python]True[/!][!java|scala]true[/!] if facing a green cell, or "
"[!python]False[/!][!java|scala]false[/!] if not. Of course, if we are facing "
"a wall, it should return false without bumping into it. You should make sure "
"that this method has no <b>side effect</b>, i.e. that it does not change the "
"state of the calling buggle nor of its world."
msgstr ""
"பெறுநர் reach that goal, you had பெறுநர் write a method <tt>isFacingTrail</tt> "
"that will be called automatically by the buggle on each step. Your method "
"should return [!python]True[/!][!java|scala]true[/!] if facing a பச்சை cell, "
"or [!python]False[/!][!java|scala]false[/!] if not. Of course, if we அரே "
"facing a wall, it should return false without bumping into it. You should "
"make sure that this method has இல்லை <b>side effect</b>, i.e. that it does "
"not change the state of the calling buggle nor of its world."

#. type: Content of: <p>
#: src/lessons/welcome/methods/slug/SlugTracking.html:14
msgid ""
"Your tool to that end is the <code>getGroundColor()</code> that returns the "
"color of the current cell. Just go to the cell you want to test and run that "
"function.  [!java]You cannot test whether this color is equal to "
"<code>Color.green</code> with an <code>==</code> sign but instead you have "
"to write something like "
"<code>getGroundColor().equals(Color.green)</code>. This is because green is "
"an <i>object</i> in Java, and <code>.equals()</code> is the way to go to "
"test equality between Java objects.[/!] [!python|scala|c]So you just have to "
"test whether the returned color is equal to the value "
"<code>[!scala|python]Color.green[/!][!c]GREEN[/!]</code>, that represents "
"the green color.[/!]"
msgstr ""
"Your கருவி பெறுநர் that end is the <code>getGroundColor()</code> that returns "
"the color of the மின்னோட்ட்ம், ஓட்டம் cell. Just go பெறுநர் the கலன் you want பெறுநர் "
"தேர்வு and ஓடு that function.  [!java]You cannot தேர்வு whether this color is "
"equal பெறுநர் <code>Color.green</code> with an <code>==</code> sign but "
"instead you have பெறுநர் write something like "
"<code>getGroundColor().equals(Color.green)</code>. This is because பச்சை is "
"an <i>object</i> in Java, and <code>.equals()</code> is the way பெறுநர் go "
"பெறுநர் தேர்வு equality between சாவா objects.[/!] [!python|scala|c]So you just "
"have பெறுநர் தேர்வு whether the returned color is equal பெறுநர் the மதிப்பு "
"<code>[!scala|python]Color.green[/!][!c]GREEN[/!]</code>, that represents "
"the பச்சை color.[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/methods/slug/SlugTracking.html:25
msgid ""
"Complete the <code>isFacingTrail()</code> method (which gets called "
"automatically)."
msgstr ""
"Complete the <code>isFacingTrail()</code> method (which gets called "
"automatically)."

#. type: Content of: <h2>
#: src/lessons/welcome/methods/slug/SlugSnail.html:2
msgid "Slugs and Snails"
msgstr "Slugs and Snails"

#. type: Content of: <p>
#: src/lessons/welcome/methods/slug/SlugSnail.html:4
msgid ""
"Yuhu! This time, your buggle found the tracks of much more preys! In the "
"first world, that's a yummy Kitty Slug (leaving a pink trail) while on the "
"second world, that's a big fat snail that awaits your buggle at the end of "
"the orange trail."
msgstr ""
"Yuhu! This time, your buggle found the tracks of much more preys! In the "
"first world, that's a yummy Kitty குருட்டடி (leaving a இளஞ்சிவப்பு trail) while "
"on the second world, that's a big fat snail that awaits your buggle at the "
"end of the ஆரஞ்சு trail."

#. type: Content of: <p>
#: src/lessons/welcome/methods/slug/SlugSnail.html:8
msgid ""
"You have to copy/paste your code again, and change it so that your methods "
"take the color of the trail to follow as a parameter. Beside of this, your "
"code should work as earlier."
msgstr ""
"You have பெறுநர் copy/paste your குறியீடு again, and change it so that your "
"முறைகள் take the color of the trail பெறுநர் follow அச் a parameter. Beside of "
"this, your குறியீடு should வேலை அச் earlier."

#. type: Content of: <p>
#: src/lessons/welcome/methods/slug/SlugSnail.html:11
msgid ""
"Don't get lost on false leads! <code>The hunt()</code> method was given a "
"parameter to tell you which color to follow (and it is not the same in all "
"worlds). Add a parameter to your <code>isFacingTrail()</code> method to only "
"follow the requested color, as the other colors lead to dead ends..."
msgstr ""
"Don't get lost on false leads! <code>The hunt()</code> method was given a "
"கூறளவு பெறுநர் tell you which color பெறுநர் follow (and it is not the same in "
"அனைத்தும் worlds). கூட்டு a கூறளவு பெறுநர் your <code>isFacingTrail()</code> "
"method பெறுநர் only follow the requested color, அச் the மற்றொன்று colors ஈயம் "
"பெறுநர் dead ends..."

#. type: Content of: <h2>
#: src/lessons/welcome/bdr/BDR.html:2
msgid "Buggle Dance Revolution (BDR)"
msgstr "Buggle Dance சுற்று (BDR)"

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR.html:4
msgid ""
"After these races, it's time to party! For that, we will teach the buggles "
"to play Dance Revolution, this game beloved of some students: The player has "
"to move the feet on the carpet according to the instructions presented on "
"the screen, and following the music. But before that, we have some details "
"to study first."
msgstr ""
"After these races, it's time பெறுநர் party! க்கு that, we will teach the "
"buggles பெறுநர் play Dance Revolution, this game beloved of some students: "
"The player has பெறுநர் move the feet on the carpet according பெறுநர் the "
"instructions presented on the screen, and following the music. But before "
"that, we have some details பெறுநர் study first."

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bdr/BDR.html:9 src/lessons/welcome/bdr/BDR2.html:4
#: src/lessons/recursion/lego/square/FourSquare.html:28
msgid "[!java|scala|c]"
msgstr "[!java|scala|c]"

#. type: Content of: <h3>
#: src/lessons/welcome/bdr/BDR.html:10
msgid "Conditionals without curly braces"
msgstr "Conditionals without curly braces"

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR.html:12
msgid ""
"There is one detail we omitted about the conditional syntax: if a branch "
"contains only one instruction, then the curly braces become optional. So, "
"the two chunk of code are equivalent:"
msgstr ""
"There is one detail we omitted பற்றி the conditional syntax: if a branch "
"contains only one instruction, then the curly braces become optional. So, "
"the two chunk of குறியீடு அரே equivalent:"

#. type: Content of: <pre>
#: src/lessons/welcome/bdr/BDR.html:16
#, no-wrap
msgid ""
"if (<b>condition</b>) {\n"
"    <b>whatToDoIfTheConditionIsTrue();</b>\n"
"} else {\n"
"    <b>whatToDoElse();</b>\n"
"}"
msgstr ""
"if (<b>condition</b>) {\n"
"    <b>whatToDoIfTheConditionIsTrue();</b>\n"
"} else {\n"
"    <b>whatToDoElse();</b>\n"
"}"

#. type: Content of: <pre>
#: src/lessons/welcome/bdr/BDR.html:21
#, no-wrap
msgid ""
"if (<b>condition</b>) \n"
"    <b>whatToDoIfTheConditionIsTrue();</b>\n"
"else\n"
"    <b>whatToDoElse();</b>"
msgstr ""
"if (<b>condition</b>) \n"
"    <b>whatToDoIfTheConditionIsTrue();</b>\n"
"else\n"
"    <b>whatToDoElse();</b>"

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR.html:26
msgid ""
"Actually, you can do the same for loops body that are reduced to one "
"instruction only.  But beware, this becomes dangerous if you chain the "
"<tt>if</tt> instructions like this:"
msgstr ""
"Actually, you can do the same க்கு வளையங்கள் body that அரே reduced பெறுநர் one "
"instruction only.  But beware, this becomes dangerous if you சங்கிலி the "
"<tt>if</tt> instructions like this:"

#. type: Content of: <pre>
#: src/lessons/welcome/bdr/BDR.html:28
#, no-wrap
msgid ""
"if (isOverBaggle())    \n"
"     if (x == 5)\n"
"          left();\n"
"else // Do not write it this way, it's misleading!\n"
"     right(); \n"
"[!c]stepForward();[/!][!java|scala]forward();[/!]"
msgstr ""
"if (isOverBaggle())    \n"
"     if (x == 5)\n"
"          left();\n"
"else // Do not write it this way, it's misleading!\n"
"     right(); \n"
"[!c]stepForward();[/!][!java|scala]forward();[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR.html:35
msgid ""
"You think that <code>right()</code> refers to the first <code>if</code> and "
"get executed when <code>isOverBaggle()</code> returns false, but in fact, it "
"refers to the second one <code>if</code> and will be executed when "
"<code>isOverBaggle()</code> returns true and <code>x != 5</code>. Yes, "
"despite the indentation, the buggle understands the previous code as "
"follows:"
msgstr ""
"You think that <code>right()</code> refers பெறுநர் the first <code>if</code> "
"and get executed when <code>isOverBaggle()</code> returns false, but in "
"fact, it refers பெறுநர் the second one <code>if</code> and will be executed "
"when <code>isOverBaggle()</code> returns true and <code>x != 5</code>. Yes, "
"despite the indentation, the buggle understands the previous குறியீடு அச் "
"follows:"

#. type: Content of: <pre>
#: src/lessons/welcome/bdr/BDR.html:42
#, no-wrap
msgid ""
"if (isOverBaggle())    \n"
"        if (x == 5)\n"
"            left();\n"
"        else\n"
"            right();\n"
"[!c]stepForward();[/!][!java|scala]forward();[/!]"
msgstr ""
"if (isOverBaggle())    \n"
"        if (x == 5)\n"
"            left();\n"
"        else\n"
"            right();\n"
"[!c]stepForward();[/!][!java|scala]forward();[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR.html:49
msgid ""
"In [!thelang] the computer connects a <tt>else</tt> branch to the closest "
"<tt>if</tt>. If you find it ambiguous, you should add more braces than "
"strictly necessary. Computers don't even look at the indentation in "
"[!thelang]. The previous code could even be written as follows and lead to "
"the same result."
msgstr ""
"In [!thelang] the கணிப்பொறி, கணிணி connects a <tt>else</tt> branch பெறுநர் the "
"closest <tt>if</tt>. If you கண்டுபிடி it ambiguous, you should கூட்டு more "
"braces than strictly necessary. Computers don't இரட்டை look at the உள்தள்ளல் in "
"[!thelang]. The previous குறியீடு could இரட்டை be written அச் follows and ஈயம் "
"பெறுநர் the same result."

#. type: Content of: <pre>
#: src/lessons/welcome/bdr/BDR.html:55
#, no-wrap
msgid ""
"if (isOverBaggle()) if (x == 5) left(); else right(); "
"[!c]stepForward();[/!][!java|scala]forward();[/!]"
msgstr ""
"if (isOverBaggle()) if (x == 5) left(); else right(); [!c]stepForward();[/!]"
"[!java|scala]forward();[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR.html:57
msgid ""
"But for humans, <b>you really want to indent your code correctly "
"correctly</b>. For example if you want a professor to review or even grade "
"your code, if you want to reuse your own code later, or even if you need to "
"debug it. That is right: you need to write readable code for your own "
"comfort."
msgstr ""
"But க்கு humans, <b>you really want பெறுநர் indent your குறியீடு correctly "
"correctly</b>. க்கு example if you want a professor பெறுநர் சீராய்வு or இரட்டை "
"grade your code, if you want பெறுநர் reuse your own குறியீடு later, or இரட்டை "
"if you need பெறுநர் debug it. That is வலது: you need பெறுநர் write readable "
"குறியீடு க்கு your own comfort."

#. type: Content of: <h3>
#: src/lessons/welcome/bdr/BDR.html:63
msgid "Chaining conditionals"
msgstr "Chaining conditionals"

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR.html:65
msgid "You sometimes want to ask the buggle something similar to:"
msgstr "You sometimes want பெறுநர் ask the buggle something similar இதற்கு:"

#. type: Content of: <pre>
#: src/lessons/welcome/bdr/BDR.html:66
#, no-wrap
msgid ""
"if it's raining, take an umbrella;\n"
"if not, and if it's a hot day, take a bottle of water;\n"
"if not and if it's July 4th, take an American flag"
msgstr ""
"if it's raining, take an umbrella;\n"
"if not, and if it's a hot day, take a bottle of water;\n"
"if not and if it's ஆ-ஆடி 4th, take an அமேரிகன் flag"

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR.html:70
msgid ""
"The trap is that we want at most one of these actions to be taken. That is "
"to say, if it's raining a very hot July 4th, we don't want the buggle to get "
"outside with an umbrella, some water and a flag, but simply with an "
"umbrella. The following code is thus WRONG."
msgstr ""
"The trap is that we want at பெரும்பாலானவை one of these செயல்கள் பெறுநர் be "
"taken. That is பெறுநர் say, if it's raining a very hot ஆ-ஆடி 4th, we don't "
"want the buggle பெறுநர் get outside with an umbrella, some water and a flag, "
"but simply with an umbrella. The following குறியீடு is thus WRONG."

#. type: Content of: <pre>
#: src/lessons/welcome/bdr/BDR.html:75
#, no-wrap
msgid ""
"[!scala|c|java]if (rainy())\n"
"    takeUmbrella();\n"
"if (hot())\n"
"    takeWater();\n"
"if (todayIsJuly4th())\n"
"    takeFlag();[/!][!python]if rainy():\n"
"    takeUmbrella()\n"
"if hot():\n"
"    takeWater()\n"
"if todayIsJuly4th():\n"
"    takeFlag()[/!]"
msgstr ""
"[!scala|c|java]if (rainy())\n"
"    takeUmbrella();\n"
"if (hot())\n"
"    takeWater();\n"
"if (todayIsJuly4th())\n"
"    takeFlag();[/!][!python]if rainy():\n"
"    takeUmbrella()\n"
"if hot():\n"
"    takeWater()\n"
"if todayIsJuly4th():\n"
"    takeFlag()[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR.html:88
msgid ""
"Indeed, since the conditions are evaluated one after the other, there is a "
"risk that you go to the July 4th march on a rainy day. Instead, we should "
"use something like this to ensure that once we found a true condition, we "
"won't evaluate the next ones."
msgstr ""
"Indeed, since the conditions அரே evaluated one after the other, there is a "
"இடர் that you go பெறுநர் the ஆ-ஆடி 4th மா-பங்குனி on a rainy day. Instead, we "
"should use something like this பெறுநர் ensure that once we found a true "
"condition, we won't evaluate the அடுத்தது ones."

#. type: Content of: <pre>
#: src/lessons/welcome/bdr/BDR.html:93
#, no-wrap
msgid ""
"[!java|scala|c]if (rainy()) {\n"
"    takeUmbrella();\n"
"} else {\n"
"    if (hotDay()) {\n"
"        takeWater();\n"
"    } else {\n"
"        if (todayIsJuly4th()) {\n"
"            takeFlag();\n"
"        }\n"
"    }\n"
"}[/!][!python]if rainy():\n"
"    takeUmbrella()\n"
"else:\n"
"    if hotDay():\n"
"        takeWater()\n"
"    else:\n"
"        if todayIsJuly4th():\n"
"            takeFlag()[/!]"
msgstr ""
"[!java|scala|c]if (rainy()) {\n"
"    takeUmbrella();\n"
"} else {\n"
"    if (hotDay()) {\n"
"        takeWater();\n"
"    } else {\n"
"        if (todayIsJuly4th()) {\n"
"            takeFlag();\n"
"        }\n"
"    }\n"
"}[/!][!python]if rainy():\n"
"    takeUmbrella()\n"
"else:\n"
"    if hotDay():\n"
"        takeWater()\n"
"    else:\n"
"        if todayIsJuly4th():\n"
"            takeFlag()[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR.html:113
msgid ""
"Unfortunately, such a cascade of conditionals is quite difficult to read. It "
"is better to [!java|scala|c]omit the curly braces for the <tt>else</tt> "
"statements. Some languages even introduce a specific construct for these "
"<tt>else if</tt>, but not [!thelang].[/!] [!python]change the sub-blocks "
"using the <code>elif</code> keyword to mark explicitly these \"else if\" "
"branches.[/!]"
msgstr ""
"Unfortunately, such a ஓடையிணைப்பு of conditionals is quite difficult பெறுநர் "
"read. It is better பெறுநர் [!java|scala|c]omit the curly braces க்கு the "
"<tt>else</tt> statements. Some மொழிகள் இரட்டை introduce a specific construct "
"க்கு these <tt>else if</tt>, but not [!thelang].[/!] [!python]change the sub-"
"blocks using the <code>elif</code> keyword பெறுநர் mark explicitly these "
"\"else if\" branches.[/!]"

#. type: Content of: <pre>
#: src/lessons/welcome/bdr/BDR.html:120
#, no-wrap
msgid ""
"[!c|java|scala]if (rainy()) { \n"
"    takeUmbrella();\n"
"} else if (hotDay()) {\n"
"    takeWater();\n"
"} else if (todayIsJuly4th()) {\n"
"    takeFlag();\n"
"}[/!][!python]if rainy():\n"
"    takeUmbrella()\n"
"elif hotDay():\n"
"    takeWater()\n"
"elif todayIsJuly4th():\n"
"    takeFlag()[/!]"
msgstr ""
"[!c|java|scala]if (rainy()) { \n"
"    takeUmbrella();\n"
"} else if (hotDay()) {\n"
"    takeWater();\n"
"} else if (todayIsJuly4th()) {\n"
"    takeFlag();\n"
"}[/!][!python]if rainy():\n"
"    takeUmbrella()\n"
"elif hotDay():\n"
"    takeWater()\n"
"elif todayIsJuly4th():\n"
"    takeFlag()[/!]"

#. type: Content of: <h3>
#: src/lessons/welcome/bdr/BDR.html:133
msgid "Graffiti in the Buggle World"
msgstr "Graffiti in the Buggle World"

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR.html:135
msgid ""
"Buggles can tag graffitis on the ground of their world. For that, they use "
"the four following methods:"
msgstr ""
"Buggles can tag graffitis on the ground of their world. க்கு that, they use "
"the நான்கு, நாலடி, நான்கடி following methods:"

#. type: Content of: <ul><li>
#: src/lessons/welcome/bdr/BDR.html:139
msgid ""
"<code>[!c]int[/!][!java]boolean[/!] "
"isOverMessage()[!scala]:Boolean[/!]</code>: returns "
"<code>[!c]1[/!][!java|scala]true[/!][!python]True[/!]</code> if and only if "
"there is a message on the ground."
msgstr ""
"<code>[!c]int[/!][!java]boolean[/!] isOverMessage()[!scala]:Boolean[/"
"!]</code>: returns <code>[!c]1[/!][!java|scala]true[/!][!python]True[/!]</"
"code> if and only if there is a செய்தி on the ground."

#. type: Content of: <ul><li>
#: src/lessons/welcome/bdr/BDR.html:142
msgid ""
"<code>[!c]char*[/!][!java]String[/!] readMessage()[!scala]: "
"String[/!]</code>: returns the message written on the ground (or an empty "
"string if nothing is written)."
msgstr ""
"<code>[!c]char*[/!][!java]String[/!] readMessage()[!scala]: String[/"
"!]</code>: returns the செய்தி written on the ground (or an வெறுமை சரம் if "
"nothing is written)."

#. type: Content of: <ul><li>
#: src/lessons/welcome/bdr/BDR.html:144
msgid ""
"<code>[!java|c]void[/!] writeMessage([!c]char*[/!][!java]String "
"[/!]msg[!scala]: String[/!])</code>: writes the specified message down on "
"the ground. If there is already a message on the ground, the new content is "
"added at the end of the existing message."
msgstr ""
"<code>[!java|c]void[/!] writeMessage([!c]char*[/!][!java]String [/!]msg"
"[!scala]: String[/!])</code>: writes the specified செய்தி down on the ground. "
"If there is already a செய்தி on the ground, the புதிய content is added at the "
"end of the existing message."

#. type: Content of: <ul><li>
#: src/lessons/welcome/bdr/BDR.html:147
msgid ""
"<code>[!java|c]void [/!]clearMessage()</code>: clears what is written on the "
"ground."
msgstr ""
"<code>[!java|c]void [/!]clearMessage()</code>: clears what is written on the "
"ground."

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bdr/BDR.html:151
msgid ""
"The goal is then to organize a BDR game between the buggles by teaching them "
"to move according to the instructions written on the ground. These "
"instructions are messages written on the ground, with the following "
"signification:"
msgstr ""
"The goal is then பெறுநர் organize a BDR game between the buggles by teaching "
"them பெறுநர் move according பெறுநர் the instructions written on the ground. "
"These instructions அரே செய்திகள் written on the ground, with the following "
"signification:"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:157 src/lessons/welcome/bdr/BDR2.html:139
msgid "Message"
msgstr "செய்தி"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:158 src/lessons/welcome/bdr/BDR2.html:140
msgid "What to do"
msgstr "What பெறுநர் do"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:159
msgid "Mnemonic"
msgstr "Mnemonic"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:161 src/lessons/welcome/bdr/BDR2.html:142
msgid "[!java|c]'R'[/!][!scala|python]\"R\"[/!]"
msgstr "[!java|c]'R'[/!][!scala|python]\"R\"[/!]"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:161 src/lessons/welcome/bdr/BDR2.html:142
msgid "Turn right and move one step forward"
msgstr "Turn வலது and move one படி forward"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:161
msgid "Right"
msgstr "வலது"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:162 src/lessons/welcome/bdr/BDR2.html:143
msgid "[!java|c]'L'[/!][!scala|python]\"L\"[/!]"
msgstr "[!java|c]'L'[/!][!scala|python]\"L\"[/!]"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:162 src/lessons/welcome/bdr/BDR2.html:143
msgid "Turn left and move one step forward"
msgstr "Turn இடது and move one படி forward"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:162
msgid "Left"
msgstr "இடது"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:163 src/lessons/welcome/bdr/BDR2.html:144
msgid "[!java|c]'I'[/!][!scala|python]\"I\"[/!]"
msgstr "[!java|c]'I'[/!][!scala|python]\"I\"[/!]"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:163
msgid "Turn back (U-turn) and move one step forward"
msgstr "Turn பின் (U-turn) and move one படி forward"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:163
msgid "Inverse"
msgstr "Inverse"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:165 src/lessons/welcome/bdr/BDR2.html:146
msgid "[!java|c]'A'[/!][!scala|python]\"A\"[/!]"
msgstr "[!java|c]'A'[/!][!scala|python]\"A\"[/!]"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:165 src/lessons/welcome/bdr/BDR2.html:146
msgid "Move one step forward"
msgstr "Move one படி forward"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:165
msgid "First letter of the alphabet"
msgstr "First letter of the alphabet"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:166 src/lessons/welcome/bdr/BDR2.html:147
msgid "[!java|c]'B'[/!][!scala|python]\"B\"[/!]"
msgstr "[!java|c]'B'[/!][!scala|python]\"B\"[/!]"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:166 src/lessons/welcome/bdr/BDR2.html:147
msgid "Move two steps forward"
msgstr "Move two படிகள் forward"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:166
msgid "Second letter of the alphabet"
msgstr "Second letter of the alphabet"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:167 src/lessons/welcome/bdr/BDR2.html:148
msgid "[!java|c]'C'[/!][!scala|python]\"C\"[/!]"
msgstr "[!java|c]'C'[/!][!scala|python]\"C\"[/!]"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:167 src/lessons/welcome/bdr/BDR2.html:148
msgid "Move three steps forward"
msgstr "Move three படிகள் forward"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:167
msgid "Third letter of the alphabet"
msgstr "Third letter of the alphabet"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:169 src/lessons/welcome/bdr/BDR2.html:153
msgid "[!java|c]'Z'[/!][!scala|python]\"Z\"[/!]"
msgstr "[!java|c]'Z'[/!][!scala|python]\"Z\"[/!]"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:169 src/lessons/welcome/bdr/BDR2.html:153
msgid "Move one step backward"
msgstr "Move one படி பின்னோக்கு"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:169
msgid "One letter before the end of the alphabet"
msgstr "One letter before the end of the alphabet"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:170 src/lessons/welcome/bdr/BDR2.html:154
msgid "[!java|c]'Y'[/!][!scala|python]\"Y\"[/!]"
msgstr "[!java|c]'Y'[/!][!scala|python]\"Y\"[/!]"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:170 src/lessons/welcome/bdr/BDR2.html:154
msgid "Move two steps backward"
msgstr "Move two படிகள் பின்னோக்கு"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:170
msgid "Two letters before the end of the alphabet"
msgstr "Two letters before the end of the alphabet"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:171 src/lessons/welcome/bdr/BDR2.html:155
msgid "[!java|c]'X'[/!][!scala|python]\"X\"[/!]"
msgstr "[!java|c]'X'[/!][!scala|python]\"X\"[/!]"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:171 src/lessons/welcome/bdr/BDR2.html:155
msgid "Move three steps backward"
msgstr "Move three படிகள் பின்னோக்கு"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:171
msgid "Three letters before the end of the alphabet"
msgstr "Three letters before the end of the alphabet"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:172 src/lessons/welcome/bdr/BDR2.html:159
msgid "<i>(anything else)</i>"
msgstr "<i>(anything else)</i>"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR.html:172 src/lessons/welcome/bdr/BDR2.html:159
msgid "Stop dancing."
msgstr "நிறுத்து dancing."

#. type: Content of: <h3>
#: src/lessons/welcome/bdr/BDR.html:175
msgid "Indications"
msgstr "Indications"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bdr/BDR.html:177
msgid ""
"This exercise may seem a bit complex at the first glance, but it comes down "
"to summarizing the information of the table in a sequence of conditionals."
msgstr ""
"This exercise சி-வைகாசி seem a துணுக்கு அணைவு at the first glance, but it "
"comes down பெறுநர் summarizing the செய்தி of the table in a வரிசை of "
"conditionals."

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR.html:180
msgid ""
"You have to keep dancing as long as there is some dancing steps to do, i.e., "
"as long as we are in a cell which content is described in the table.  The "
"easier for that is to use a boolean variable (<code>finished</code>)  as "
"termination condition to a <code>while</code> loop.  It should be "
"initialized to "
"<code>[!c]0[/!][!java|scala]false[/!][!python]False[/!]</code>, and switched "
"to <code>[!c]1[/!][!java|scala]true[/!][!python]True[/!]</code> as soon as "
"the buggle find a cell with a value not described in the table.  Thus, the "
"loop will stop and the program will terminate."
msgstr ""
"You have பெறுநர் keep dancing அச் long அச் there is some dancing படிகள் பெறுநர் "
"do, i.e., அச் long அச் we அரே in a கலன் which content is described in the "
"table.  The easier க்கு that is பெறுநர் use a boolean variable "
"(<code>finished</code>)  அச் termination condition பெறுநர் a <code>while</"
"code> loop.  It should be initialized பெறுநர் <code>[!c]0[/!][!java|scala]"
"false[/!][!python]False[/!]</code>, and switched பெறுநர் <code>[!c]1[/!]"
"[!java|scala]true[/!][!python]True[/!]</code> அச் soon அச் the buggle கண்டுபிடி "
"a கலன் with a மதிப்பு not described in the table.  Thus, the loop will நிறுத்து "
"and the திட்டம் will terminate."

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR.html:190
msgid ""
"Another subtlety is that detecting if strings are equals is a bit annoying "
"in [!thelang].  So, we use the <code>char getIndication[!c]Bdr[/!]()</code> "
"instead of <code>[!java]String[/!][!c]char*[/!] readMessage()</code>.  This "
"method, only known by the buggles of this exercise, returns the first char "
"of the message written on the ground (or ' ' -- the space char -- if nothing "
"is written down). It enables to work with chars instead of strings, that is "
"much simpler in [!thelang]."
msgstr ""
"Another subtlety is that detecting if சரங்கள் அரே equals is a துணுக்கு annoying "
"in [!thelang].  So, we use the <code>char getIndication[!c]Bdr[/!]()</code> "
"instead of <code>[!java]String[/!][!c]char*[/!] readMessage()</code>.  This "
"method, only known by the buggles of this exercise, returns the first char "
"of the செய்தி written on the ground (or ' ' -- the இடைவெளி char -- if nothing "
"is written down). It enables பெறுநர் வேலை with chars instead of strings, that "
"is much simpler in [!thelang]."

#. type: Content of: <h3>
#: src/lessons/welcome/bdr/BDR.html:198
msgid "Tips and Hints"
msgstr "Tips and Hints"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bdr/BDR.html:200
msgid ""
"If you fail to understand why the buggle does not execute the expected "
"steps, try adding <code>brushDown()</code> in your method. This asks the "
"buggle to put down a brush leaving a trail when it moves. It should help you "
"understanding its trajectory, but do not forget to remove this call when you "
"want to test whether your code is a valid solution to the exercise: you are "
"asked to let the buggle dance, not to vandalize the dance floor."
msgstr ""
"If you fail பெறுநர் understand why the buggle does not execute the expected "
"steps, try adding <code>brushDown()</code> in your method. This asks the "
"buggle பெறுநர் put down a மின்தொடி leaving a trail when it moves. It should "
"உதவி you understanding its trajectory, but do not forget பெறுநர் அகற்று this "
"call when you want பெறுநர் தேர்வு whether your குறியீடு is a valid நீர்மக்கூழ் "
"பெறுநர் the exercise: you அரே asked பெறுநர் let the buggle dance, not பெறுநர் "
"vandalize the dance floor."

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR.html:207
msgid "When your program finally works, move on to the next exercise."
msgstr "When your திட்டம் finally works, move on பெறுநர் the அடுத்தது exercise."

#. type: Content of: <h2>
#: src/lessons/welcome/bdr/BDR2.html:2
msgid "Buggle Dance Revolution 2 (BDR2)"
msgstr "Buggle Dance சுற்று 2 (BDR2)"

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR2.html:5
msgid ""
"BDR is cool, but it's a bit chaotic. First, the buggles giggle in any "
"directions, and then the code you had to write to let them move is rather "
"difficult to read. Here is a new BDR world where the buggle will dance a "
"gentle circle. We will benefit this tranquillity to clean up a bit our code "
"thanks to the new constructs we will introduce."
msgstr ""
"BDR is cool, but it's a துணுக்கு chaotic. First, the buggles giggle in any "
"directions, and then the குறியீடு you had பெறுநர் write பெறுநர் let them move "
"is rather difficult பெறுநர் read. Here is a புதிய BDR world where the buggle "
"will dance a gentle circle. We will benefit this tranquillity பெறுநர் clean "
"மேலே a துணுக்கு our குறியீடு thanks பெறுநர் the புதிய constructs we will "
"introduce."

#. type: Content of: <h3>
#: src/lessons/welcome/bdr/BDR2.html:11
msgid "[!java|c]<code>switch</code> conditionals[/!][!scala]Pattern matching[/!]"
msgstr ""
"[!java|c]<code>switch</code> conditionals[/!][!scala]Pattern matching[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR2.html:13
msgid ""
"The hardest part of previous code is certainly the conditional "
"cascading. Somewhere in your code, you certainly had something similar to:"
msgstr ""
"The hardest பகுதி of previous குறியீடு is certainly the conditional "
"cascading. Somewhere in your code, you certainly had something similar இதற்கு:"

#. type: Content of: <pre>
#: src/lessons/welcome/bdr/BDR2.html:16
#, no-wrap
msgid ""
"if ([!java|c]getIndication() == 'R'[/!][!scala]readMessage() == \"R\"[/!]) "
"{\n"
"  right();\n"
"  [!c]stepForward()[/!][!java|scala]forward()[/!];\n"
"} else if ([!java|c]getIndication() == 'L'[/!][!scala]readMessage() == "
"\"L\"[/!]) {\n"
"  left();\n"
"  [!c]stepForward()[/!][!java|scala]forward()[/!];\n"
"} else if ([!java|c]getIndication() == 'I'[/!][!scala]readMessage() == "
"\"I\"[/!]) {\n"
"  back();\n"
"  [!c]stepForward()[/!][!java|scala]forward()[/!];\n"
"<span class=\"comment\">/* other else if */</span>\n"
"} else {\n"
"  finished = [!c]1[/!][!java|scala]true[/!];\n"
"}\n"
msgstr ""
"if ([!java|c]getIndication() == 'R'[/!][!scala]readMessage() == \"R\"[/!]) {"
"\n"
"  right();\n"
"  [!c]stepForward()[/!][!java|scala]forward()[/!];\n"
"} else if ([!java|c]getIndication() == 'L'[/!][!scala]readMessage() == \"L\""
"[/!]) {\n"
"  left();\n"
"  [!c]stepForward()[/!][!java|scala]forward()[/!];\n"
"} else if ([!java|c]getIndication() == 'I'[/!][!scala]readMessage() == \"I\""
"[/!]) {\n"
"  back();\n"
"  [!c]stepForward()[/!][!java|scala]forward()[/!];\n"
"<span class=\"comment\">/* மற்றொன்று else if */</span>\n"
"} else {\n"
"  finished = [!c]1[/!][!java|scala]true[/!];\n"
"}\n"

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR2.html:31
msgid ""
"When you review this code, it may not be clear at the first glance that it "
"is simply a choice with 4 branches depending on the value of "
"[!java|c]getIndication()[/!][!scala]readMessage()[/!].  To improve this, we "
"will use a [!java|c]<code>switch</code> construct, which Java syntax is the "
"following:[/!] [!scala] pattern matching, which is a very powerful construct "
"that greatly generalizes the <code>if</code>. It is arguably one of the "
"major advantages of Scala when compared to languages such as Java or "
"python.  It is not new either, as other languages such as OCaml or Haskell "
"offer this feature since long, but still.  It's really cool![/!]"
msgstr ""
"When you சீராய்வு this code, it சி-வைகாசி not be clear at the first glance "
"that it is simply a choice with 4 branches depending on the மதிப்பு of "
"[!java|c]getIndication()[/!][!scala]readMessage()[/!].  பெறுநர் improve this, "
"we will use a [!java|c]<code>switch</code> construct, which சாவா syntax is "
"the following:[/!] [!scala] pattern matching, which is a very powerful "
"construct that greatly generalizes the <code>if</code>. It is arguably one "
"of the major advantages of Scala when compared பெறுநர் மொழிகள் such அச் சாவா or "
"python.  It is not புதிய either, அச் மற்றொன்று மொழிகள் such அச் OCaml or Haskell "
"offer this feature since long, but still.  It's really cool![/!]"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bdr/BDR2.html:40
msgid "[/!] [!java|c]"
msgstr "[/!] [!java|c]"

#. type: Content of: <pre>
#: src/lessons/welcome/bdr/BDR2.html:44
#, no-wrap
msgid ""
"switch (<b>expression</b>) {\n"
"  case <b>firstValue</b>: \n"
"    <b>whatToDoIfExpressionEqualsFirstValue();</b>\n"
"    break;\n"
"  case <b>secondValue</b>: \n"
"    <b>whatToDoIfExpressionEqualsSecondValue();</b>\n"
"    break;\n"
"  case <b>thirdValue</b>: \n"
"    <b>whatToDoIfExpressionEqualsThirdValue();</b>\n"
"    break;\n"
"    /* as much similar cases as you want */\n"
"  default: \n"
"    <b>whatToDoIfExpressionDoesNotEqualsAnySeenValues();</b>\n"
"}"
msgstr ""
"ஆளி, நிலைமாறி (<b>expression</b>) {\n"
"  case <b>firstValue</b>: \n"
"    <b>whatToDoIfExpressionEqualsFirstValue();</b>\n"
"    break;\n"
"  case <b>secondValue</b>: \n"
"    <b>whatToDoIfExpressionEqualsSecondValue();</b>\n"
"    break;\n"
"  case <b>thirdValue</b>: \n"
"    <b>whatToDoIfExpressionEqualsThirdValue();</b>\n"
"    break;\n"
"    /* அச் much similar cases அச் you want */\n"
"  default: \n"
"    <b>whatToDoIfExpressionDoesNotEqualsAnySeenValues();</b>\n"
"}"

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR2.html:59
msgid ""
"Observe that each branch of a <tt>switch</tt> must be ended by a "
"<code>break</code>. If you forget this, the machine keeps going and execute "
"the next branch in the list after the branch it jumped to. There is even "
"some <b>rare</b> cases where this behavior reveals helpful."
msgstr ""
"Observe that each branch of a <tt>switch</tt> must be ended by a "
"<code>break</code>. If you forget this, the machine keeps going and execute "
"the அடுத்தது branch in the பட்டியல் after the branch it jumped to. There is "
"இரட்டை some <b>rare</b> cases where this behavior reveals helpful."

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR2.html:64
msgid ""
"It is then possible to rewrite previous BDR code in a cleaner way using the "
"<tt>switch</tt> construct:"
msgstr ""
"It is then possible பெறுநர் rewrite previous BDR குறியீடு in a cleaner way "
"using the <tt>switch</tt> construct:"

#. type: Content of: <pre>
#: src/lessons/welcome/bdr/BDR2.html:67
#, no-wrap
msgid ""
"switch (getIndication()) {\n"
"  case 'R':\n"
"    right(); \n"
"    [!c]stepForward()[/!][!java]forward()[/!]; \n"
"    break;\n"
"  case 'L':\n"
"    left();\n"
"    [!c]stepForward()[/!][!java]forward()[/!]; \n"
"    break;\n"
"  case 'I':\n"
"    back();\n"
"    [!c]stepForward()[/!][!java]forward()[/!];\n"
"    break;\n"
"  default: \n"
"    return;\n"
"}"
msgstr ""
"ஆளி, நிலைமாறி (getIndication()) {\n"
"  case 'R':\n"
"    right(); \n"
"    [!c]stepForward()[/!][!java]forward()[/!]; \n"
"    break;\n"
"  case 'L':\n"
"    left();\n"
"    [!c]stepForward()[/!][!java]forward()[/!]; \n"
"    break;\n"
"  case 'I':\n"
"    back();\n"
"    [!c]stepForward()[/!][!java]forward()[/!];\n"
"    break;\n"
"  default: \n"
"    return;\n"
"}"

#. type: Content of: <pre>
#: src/lessons/welcome/bdr/BDR2.html:85
#, no-wrap
msgid ""
"<i>expression</i> <b>match</b> {\n"
"  <b>case</b> <i>possible value</i> <b>=></b> instructions\n"
"  <b>case</b> <i>other value</i>     <b>=></b> other instructions\n"
"  <b>case</b> <i>another value</i> <b>=></b> yet another instructions\n"
"  <b>case _                 =></b> default instructions\n"
"}\n"
msgstr ""
"<i>expression</i> <b>match</b> {\n"
"  <b>case</b> <i>possible value</i> <b>=></b> instructions\n"
"  <b>case</b> <i>other value</i>     <b>=></b> மற்றொன்று instructions\n"
"  <b>case</b> <i>another value</i> <b>=></b> yet another instructions\n"
"  <b>case _                 =></b> இயல்புநிலை instructions\n"
"}\n"

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR2.html:92
msgid ""
"The expression provided before the keyword <code>match</code>, and then the "
"branches are evaluated one after the other until we find one which value "
"provided between <code>case</code> and <code>=&gt</code> is equal to the "
"expression's value.  The <code>_</code> symbol acts as a wildcard, so the "
"<code>_</code> branch <i>always</i> matches.  Here is an example where a "
"variable <code>name</code> is matched."
msgstr ""
"The கோவை provided before the keyword <code>match</code>, and then the "
"branches அரே evaluated one after the மற்றொன்று until we கண்டுபிடி one which "
"மதிப்பு provided between <code>case</code> and <code>=&gt</code> is equal "
"பெறுநர் the expression's value.  The <code>_</code> symbol acts அச் a "
"wildcard, so the <code>_</code> branch <i>always</i> matches.  Here is an "
"example where a variable <code>name</code> is matched."

#. type: Content of: <pre>
#: src/lessons/welcome/bdr/BDR2.html:97
#, no-wrap
msgid ""
"name match {\n"
"  case \"Martin\" => println(\"Hello Martin, how are you?\")\n"
"  case \"Gerald\" => println(\"Hey Gerald! How are you doing?\")\n"
"  case _            => println(\"Welcome stranger.\")\n"
"}"
msgstr ""
"பெயர் match {\n"
"  case \"Martin\" => println(\"Hello Martin, how அரே you?\")\n"
"  case \"Gerald\" => println(\"Hey Gerald! How அரே you doing?\")\n"
"  case _            => println(\"Welcome stranger.\")\n"
"}"

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR2.html:103
msgid ""
"It is possible to have more than one instruction per branch, and merge "
"branches when the values are separated by a | symbol."
msgstr ""
"It is possible பெறுநர் have more than one instruction per branch, and merge "
"branches when the values அரே separated by a | symbol."

#. type: Content of: <pre>
#: src/lessons/welcome/bdr/BDR2.html:105
#, no-wrap
msgid ""
"name match {\n"
"  case \"Martin\" | \"Gerald\" => println(\"Hello \"+name+\", how are "
"you?\"); openTheDoor()\n"
"  case _                            => println(\"Hello stranger. Please do "
"not pass.\"); lockTheDoor()\n"
"}"
msgstr ""
"பெயர் match {\n"
"  case \"Martin\" | \"Gerald\" => println(\"Hello \"+name+\", how அரே you?\""
"); openTheDoor()\n"
"  case _                            => println("
"\"Hello stranger. Please do not pass.\"); lockTheDoor()\n"
"}"

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR2.html:110
msgid ""
"You can even add guards to your branches. These are extra conditions that "
"must be respected for the branch to get applied. This is handy if you want "
"match on value ranges, as follows."
msgstr ""
"You can இரட்டை கூட்டு guards பெறுநர் your branches. These அரே extra conditions "
"that must be respected க்கு the branch பெறுநர் get applied. This is handy if "
"you want match on மதிப்பு ranges, அச் follows."

#. type: Content of: <pre>
#: src/lessons/welcome/bdr/BDR2.html:112
#, no-wrap
msgid ""
"age match {\n"
"  case i if i&lt;10 => println(\"Hey kid!\")\n"
"  case i if i&lt;20 => println(\"Hey dude!\")\n"
"  case i if i&lt;30 => println(\"Hello young man\")\n"
"  case _           => println(\"Hello Sir\")\n"
"}"
msgstr ""
"age match {\n"
"  case i if i&lt;10 => println(\"Hey kid!\")\n"
"  case i if i&lt;20 => println(\"Hey dude!\")\n"
"  case i if i&lt;30 => println(\"Hello young man\")\n"
"  case _           => println(\"Hello Sir\")\n"
"}"

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR2.html:118
msgid ""
"Note that there is no need to check whether the value is higher than 10 on "
"the second line because the first matching branch is used. So, if the second "
"branch gets evaluated, then the first one did not match."
msgstr ""
"குறிப்பு that there is இல்லை need பெறுநர் சரிபார் whether the மதிப்பு is higher "
"than 10 on the second வரி because the first matching branch is used. So, if "
"the second branch gets evaluated, then the first one did not match."

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR2.html:121
msgid "Finally, it is possible also to match several variables in one shoot!"
msgstr ""
"Finally, it is possible also பெறுநர் match several மாறிகள் in one shoot!"

#. type: Content of: <pre>
#: src/lessons/welcome/bdr/BDR2.html:122
#, no-wrap
msgid ""
"(x,y) match {\n"
" case (0,0) => println(\"that's the origin\")\n"
" case (_,0) => println(\"On the ordinate\")\n"
" case (0,_) => println(\"On the abscissa\")\n"
" case (_,_) => println(\"Some random point\")\n"
"}"
msgstr ""
"(x,y) match {\n"
" case (0,0) => println(\"that's the origin\")\n"
" case (_,0) => println(\"On the ordinate\")\n"
" case (0,_) => println(\"On the abscissa\")\n"
" case (_,_) => println(\"Some சீரற்ற point\")\n"
"}"

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR2.html:129
msgid ""
"I told you that scala's pattern matching is very powerful! I actually love "
"this feature!"
msgstr ""
"I told you that scala's pattern matching is very powerful! I actually love "
"this feature!"

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR2.html:133
msgid ""
"[!java|scala|c]Apply the improvement we just saw to rewrite your buggle code "
"with the following dance steps. [/!] [!python]Let's teach a new dance step "
"to the buggles. It is slightly more complex but actually better "
"looking. Beside of that, that's the same old story.[/!] Note that we can now "
"move up to 6 cells in one dance step."
msgstr ""
"[!java|scala|c]Apply the improvement we just saw பெறுநர் rewrite your buggle "
"குறியீடு with the following dance steps. [/!] [!python]Let's teach a புதிய "
"dance படி பெறுநர் the buggles. It is slightly more அணைவு but actually better "
"looking. Beside of that, that's the same old story.[/!] குறிப்பு that we can "
"now move மேலே பெறுநர் 6 cells in one dance step."

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR2.html:144
msgid "Turn back and move one step forward"
msgstr "Turn பின் and move one படி forward"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR2.html:149
msgid "[!java|c]'D'[/!][!scala|python]\"D\"[/!]"
msgstr "[!java|c]'D'[/!][!scala|python]\"D\"[/!]"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR2.html:149
msgid "Move four cells forward"
msgstr "Move நான்கு, நாலடி, நான்கடி cells forward"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR2.html:150
msgid "[!java|c]'E'[/!][!scala|python]\"E\"[/!]"
msgstr "[!java|c]'E'[/!][!scala|python]\"E\"[/!]"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR2.html:150
msgid "Move five cells forward"
msgstr "Move five cells forward"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR2.html:151
msgid "[!java|c]'F'[/!][!scala|python]\"F\"[/!]"
msgstr "[!java|c]'F'[/!][!scala|python]\"F\"[/!]"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR2.html:151
msgid "Move six cells forward"
msgstr "Move six cells forward"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR2.html:156
msgid "[!java|c]'W'[/!][!scala|python]\"W\"[/!]"
msgstr "[!java|c]'W'[/!][!scala|python]\"W\"[/!]"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR2.html:156
msgid "Move four cells backward"
msgstr "Move நான்கு, நாலடி, நான்கடி cells பின்னோக்கு"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR2.html:157
msgid "[!java|c]'V'[/!][!scala|python]\"V\"[/!]"
msgstr "[!java|c]'V'[/!][!scala|python]\"V\"[/!]"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR2.html:157
msgid "Move five cells backward"
msgstr "Move five cells பின்னோக்கு"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR2.html:158
msgid "[!java|c]'U'[/!][!scala|python]\"U\"[/!]"
msgstr "[!java|c]'U'[/!][!scala|python]\"U\"[/!]"

#. type: Content of: <table><tr><td>
#: src/lessons/welcome/bdr/BDR2.html:158
msgid "Move six cells backward"
msgstr "Move six cells பின்னோக்கு"

#. type: Content of: <p>
#: src/lessons/welcome/bdr/BDR2.html:163
msgid "When you program works again, proceed to next exercise."
msgstr "When you திட்டம் works again, proceed பெறுநர் அடுத்தது exercise."

#. type: Content of: <p>
#: src/lessons/welcome/traversal/Snake.html:4
msgid ""
"We will now teach the buggle to explore its world. Its initial position is "
"the bottom left corner, and it should visit any cells up to the top "
"(coloring the ground on its path. The main loop of your code is something "
"like:"
msgstr ""
"We will now teach the buggle பெறுநர் explore its world. Its initial position "
"is the கீழே இடது corner, and it should visit any cells மேலே பெறுநர் the மேலே ("
"coloring the ground on its path. The main loop of your குறியீடு is something "
"like:"

#. type: Content of: <pre>
#: src/lessons/welcome/traversal/Snake.html:8
#, no-wrap
msgid ""
" move brush down\n"
" while we did not reach the final position\n"
"   move like a snake\n"
msgstr ""
" move மின்தொடி down\n"
" while we did not reach the final position\n"
"   move like a snake\n"

#. type: Content of: <p>
#: src/lessons/welcome/traversal/Snake.html:13
msgid ""
"We thus have to write two specific methods: The first one returns a boolean "
"indicating whether we are on a final position while the second moves one "
"snake step forward."
msgstr ""
"We thus have பெறுநர் write two specific methods: The first one returns a "
"boolean indicating whether we அரே on a final position while the second moves "
"one snake படி forward."

#. type: Content of: <p>
#: src/lessons/welcome/traversal/Snake.html:17
msgid "We reached the final position if and only if both conditions are true:"
msgstr "We reached the final position if and only if both conditions அரே true:"

#. type: Content of: <ul><li>
#: src/lessons/welcome/traversal/Snake.html:19
msgid "We are facing a wall"
msgstr "We அரே facing a wall"

#. type: Content of: <ul><li>
#: src/lessons/welcome/traversal/Snake.html:20
msgid ""
"There is a wall on the north of the buggle. So, if the buggle is facing "
"east, you should check whether there is a wall on the left, and if the "
"buggle is facing west, you should check on the right side."
msgstr ""
"There is a wall on the வடக்கு of the buggle. So, if the buggle is facing "
"east, you should சரிபார் whether there is a wall on the left, and if the "
"buggle is facing west, you should சரிபார் on the வலது side."

#. type: Content of: <ul><li>
#: src/lessons/welcome/traversal/Snake.html:23
msgid ""
"We can get the current heading of the buggle using the "
"<code>getDirection()</code>, and we know whether it looks east using "
"<code>getDirection() == [!scala|python|java]Direction.[/!]EAST</code> (WEST "
"for west)."
msgstr ""
"We can get the மின்னோட்ட்ம், ஓட்டம் heading of the buggle using the "
"<code>getDirection()</code>, and we know whether it looks கிழக்கு using "
"<code>getDirection() == [!scala|python|java]Direction.[/!]EAST</code> (WEST "
"க்கு west)."

#. type: Content of: <ul><li>
#: src/lessons/welcome/traversal/Snake.html:26
msgid ""
"To check, nothing magical: you have to turn the buggle and check whether it "
"is facing a wall afterward."
msgstr ""
"பெறுநர் check, nothing magical: you have பெறுநர் turn the buggle and சரிபார் "
"whether it is facing a wall afterward."

#. type: Content of: <p>
#: src/lessons/welcome/traversal/Snake.html:29
msgid ""
"Then, a snake step can be achieved by moving one step forward if we are not "
"facing a wall, and moving to the upper line else (i.e., if you look to the "
"west facing a wall, you have to turn right, forward and turn right)."
msgstr ""
"Then, a snake படி can be achieved by moving one படி forward if we அரே not "
"facing a wall, and moving பெறுநர் the upper வரி else (i.e., if you look பெறுநர்"
" the மேற்கு facing a wall, you have பெறுநர் turn right, forward and turn "
"right)."

#. type: Content of: <p>
#: src/lessons/welcome/traversal/Snake.html:33
msgid ""
"Hint: the main loop of your code must continue while the testing function "
"returns false. There is two ways of writing it:"
msgstr ""
"குறிப்பு: the main loop of your குறியீடு must தொடரவும் while the testing சார்பு "
"returns false. There is two ways of writing it:"

#. type: Content of: <pre>
#: src/lessons/welcome/traversal/Snake.html:35
#, no-wrap
msgid ""
"while (testingFunction() == [!c]0) {[/!][!java|scala]false) "
"{[/!][!python]False):[/!]"
msgstr ""
"while (testingFunction() == [!c]0) {[/!][!java|scala]false) {[/!][!python]"
"False):[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/traversal/Snake.html:36
msgid ""
"[!python]You may prefer to write it as:[/!] [!java|scala|c]Since the "
"exclamation mark (!) denotes the boolean negation in [!thelang], you may "
"write it as:[/!]"
msgstr ""
"[!python]You சி-வைகாசி prefer பெறுநர் write it as:[/!] [!java|scala|c]Since "
"the exclamation mark (!) denotes the boolean negation in [!thelang], you "
"சி-வைகாசி write it as:[/!]"

#. type: Content of: <pre>
#: src/lessons/welcome/traversal/Snake.html:38
#, no-wrap
msgid ""
"while ([!java|scala|c]![/!][!python]not "
"[/!]testingFunction())[!java|scala|c] {[/!][!python]:[/!]"
msgstr ""
"while ([!java|scala|c]![/!][!python]not [/!]testingFunction())[!java|scala|c]"
" {[/!][!python]:[/!]"

#. type: Content of: <p>
#: src/lessons/welcome/traversal/column/TraversalByColumn.html:4
msgid ""
"The goal of this serie of exercises is to let the buggle traverse its "
"world. It must number the cells it walks on to show its traversal order."
msgstr ""
"The goal of this serie of exercises is பெறுநர் let the buggle traverse its "
"world. It must எண் the cells it walks on பெறுநர் காட்டு its traversal order."

#. type: Content of: <p>
#: src/lessons/welcome/traversal/column/TraversalByColumn.html:7
msgid "The main loop of your code should be something like:"
msgstr "The main loop of your குறியீடு should be something like:"

#. type: Content of: <pre>
#: src/lessons/welcome/traversal/column/TraversalByColumn.html:9
#, no-wrap
msgid ""
" while we are not on the final position\n"
"   go to the next position\n"
"   label the cell with its number\n"
msgstr ""
" while we அரே not on the final position\n"
"   go பெறுநர் the அடுத்தது position\n"
"   சிட்டை the கலன் with its number\n"

#. type: Content of: <p>
#: src/lessons/welcome/traversal/column/TraversalByColumn.html:14
msgid ""
"In contrary to the exercises we saw so far, we won't use the "
"<code>forward()</code>, <code>backward()</code> and similar "
"methods. Instead, we will compute the coordinate of the next buggle position "
"and use the <code>setPos(x, y)</code> method to <i>teleport</i> the buggle "
"directly to this position. For example, <code>setPos(3, 5)</code> teleports "
"the buggle to the cell where x=3 and y=5."
msgstr ""
"In contrary பெறுநர் the exercises we saw so far, we won't use the "
"<code>forward()</code>, <code>backward()</code> and similar methods. "
"Instead, we will compute the ஆயம் of the அடுத்தது buggle position and use the "
"<code>setPos(x, y)</code> method பெறுநர் <i>teleport</i> the buggle directly "
"பெறுநர் this position. க்கு example, <code>setPos(3, 5)</code> teleports the "
"buggle பெறுநர் the கலன் where x=3 and y=5."

#. type: Content of: <p>
#: src/lessons/welcome/traversal/column/TraversalByColumn.html:21
msgid ""
"Your first task is thus to write a boolean function indicating whether the "
"buggle reached the final position or not, ie if it reached the bottom right "
"corner of the world. For this, you can use <code>getWorldWidth()</code> and "
"<code>getWorldHeight()</code> which return respectively the world's width "
"and height. Your test is about comparing the buggle's current position (that "
"you can access with <code>getX()</code> and <code>getY()</code>) to the "
"world dimensions."
msgstr ""
"Your first task is thus பெறுநர் write a boolean சார்பு indicating whether the "
"buggle reached the final position or not, ie if it reached the கீழே வலது "
"corner of the world. க்கு this, you can use <code>getWorldWidth()</code> and "
"<code>getWorldHeight()</code> which return respectively the world's width "
"and height. Your தேர்வு is பற்றி comparing the buggle's மின்னோட்ட்ம், ஓட்டம் "
"position (that you can access with <code>getX()</code> and "
"<code>getY()</code>) பெறுநர் the world dimensions."

#. type: Content of: <p>
#: src/lessons/welcome/traversal/column/TraversalByColumn.html:28
msgid ""
"Beware, the first line and column are numbered 0 and not 1, and the point "
"(0,0)  is on the top left corner. This may seem surprising, but it is very "
"often so in Computer Science."
msgstr ""
"Beware, the first வரி and நெடுவரிசை அரே numbered 0 and not 1, and the புள்ளியம்"
" (0,0)  is on the மேலே இடது corner. This சி-வைகாசி seem surprising, but it "
"is very often so in கணிப்பொறி, கணிணி Science."

#. type: Content of: <p>
#: src/lessons/welcome/traversal/column/TraversalByColumn.html:32
msgid ""
"Then, you have to write the code to reach the next position. In this "
"exercise, you have to traverse the world row after row. So, if you are at "
"the bottom of a row, you have to move to the top of next row. Else, you have "
"to move to the cell below."
msgstr ""
"Then, you have பெறுநர் write the குறியீடு பெறுநர் reach the அடுத்தது position. "
"In this exercise, you have பெறுநர் traverse the world நிரை after row. So, if "
"you அரே at the கீழே of a row, you have பெறுநர் move பெறுநர் the மேலே of அடுத்தது "
"row. Else, you have பெறுநர் move பெறுநர் the கலன் below."

#. type: Content of: <p>
#: src/lessons/welcome/traversal/column/TraversalByColumn.html:37
msgid ""
"At this point, you can launch your program to check that the buggle "
"correctly traverse the world in the expected order, and that it stops when "
"it has to. Use the <b>stop</b> button if the buggle does not stop correctly."
msgstr ""
"At this point, you can launch your திட்டம் பெறுநர் சரிபார் that the buggle "
"correctly traverse the world in the expected order, and that it stops when "
"it has to. Use the <b>stop</b> button if the buggle does not நிறுத்து "
"correctly."

#. type: Content of: <p>
#: src/lessons/welcome/traversal/column/TraversalByColumn.html:41
msgid ""
"It is now time to write down the cell numbers. For that, you will need a "
"counter initialiser to zero at the beginning of your code, and incremented "
"by one at each step (for example with <code>counter += 1;</code>).  Then, "
"you have to use <code>writeMessage()</code> to write the value on the "
"ground."
msgstr ""
"It is now time பெறுநர் write down the கலன் numbers. க்கு that, you will need a "
"counter initialiser பெறுநர் சுழிமம் at the beginning of your code, and "
"incremented by one at each படி (for example with <code>counter += 1;</code>)"
".  Then, you have பெறுநர் use <code>writeMessage()</code> பெறுநர் write the "
"மதிப்பு on the ground."

#. type: Content of: <p>
#: src/lessons/welcome/traversal/column/TraversalByColumn.html:47
msgid ""
"You probably need to write the first [!java|scala|c]or last [/!]value out of "
"the main loop [!java|scala|c], depending on whether you prefer to use a "
"<code>while</code> or a <code>do/while</code> one[/!]."
msgstr ""
"You probably need பெறுநர் write the first [!java|scala|c]or last [/!]value "
"out of the main loop [!java|scala|c], depending on whether you prefer பெறுநர் "
"use a <code>while</code> or a <code>do/while</code> one[/!]."

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/traversal/line/TraversalByLine.html:4
msgid ""
"You once again have to let the buggle traverse the world numbering the cells "
"on its way, but the goal of this exercise is to write a line traversal. Most "
"of the code you wrote for previous exercise remains usable here. Simply, the "
"method computing the coordinates of the next buggle position has to be "
"correctly updated: if you are at the right of a line, you have to go to the "
"beginning of the next one. If not, you have to go to the right cell."
msgstr ""
"You once again have பெறுநர் let the buggle traverse the world numbering the "
"cells on its way, but the goal of this exercise is பெறுநர் write a வரி "
"traversal. பெரும்பாலானவை of the குறியீடு you wrote க்கு previous exercise "
"remains usable here. Simply, the method computing the coordinates of the "
"அடுத்தது buggle position has பெறுநர் be correctly updated: if you அரே at the "
"வலது of a line, you have பெறுநர் go பெறுநர் the beginning of the அடுத்தது one. "
"If not, you have பெறுநர் go பெறுநர் the வலது cell."

#. type: Content of: <p>
#: src/lessons/welcome/traversal/diagonal/TraversalDiagonal.html:4
msgid ""
"This time, you are asked to traverse the world one diagonal after the "
"other. Have a look at the objective world for more details on the requested "
"traversal order."
msgstr ""
"This time, you அரே asked பெறுநர் traverse the world one மூலைவிட்டம் after the "
"other. Have a look at the objective world க்கு more details on the requested "
"traversal order."

#. type: Content of: <p>
#: src/lessons/welcome/traversal/diagonal/TraversalDiagonal.html:8
msgid ""
"You may find useful to use an integer variable <code>diag</code> storing the "
"number of the diagonal you are traversing."
msgstr ""
"You சி-வைகாசி கண்டுபிடி useful பெறுநர் use an முழு எண் variable <code>diag</"
"code> storing the எண் of the மூலைவிட்டம் you அரே traversing."

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/traversal/zigzag/TraversalZigZag.html:4
msgid ""
"This time, you have to zigzag on the way up. Have a look at the objective "
"world for more details on the requested traversal order."
msgstr ""
"This time, you have பெறுநர் zigzag on the way up. Have a look at the "
"objective world க்கு more details on the requested traversal order."

#. type: Content of: <h2>
#: src/lessons/welcome/summative/Moria.html:2
msgid "Lost in the Moria"
msgstr "Lost in the Moria"

#. type: Content of: <p>
#: src/lessons/welcome/summative/Moria.html:4
msgid ""
"You buggles got stuck in the mines of Moria! Some rocks are blocking the "
"exit, and you will have to clear your way to the exit. Well of course these "
"are only baggles and you could simply walk away, but it will be easier to "
"program the buggles so that they move those \"rocks\" than convincing them "
"to walk away without solving the problem. Dwarfs are sometimes really "
"stubborns..."
msgstr ""
"You buggles got stuck in the mines of Moria! Some rocks அரே blocking the "
"exit, and you will have பெறுநர் clear your way பெறுநர் the exit. Well of "
"course these அரே only baggles and you could simply walk away, but it will be "
"easier பெறுநர் திட்டம் the buggles so that they move those \"rocks\" than "
"convincing them பெறுநர் walk away without solving the problem. Dwarfs அரே "
"sometimes really stubborns..."

#. type: Content of: <p>
#: src/lessons/welcome/summative/Moria.html:11
msgid ""
"So, you have to find the first baggle blocking the exit (simply walk to the "
"east until you are over a baggle), take it and move it back to the other "
"side of the tunnel (walk to the west while you are not over a baggle, and "
"then move back one step to the east and drop your baggle), and iterate until "
"you find the exit (that is, the wall to the east side). Afterward, move out "
"as in the objective world. That's only a few more steps away."
msgstr ""
"So, you have பெறுநர் கண்டுபிடி the first baggle blocking the exit (simply walk "
"பெறுநர் the கிழக்கு until you அரே வீச்சலகு a baggle), take it and move it பின் "
"பெறுநர் the மற்றொன்று பக்கம் of the tunnel (walk பெறுநர் the மேற்கு while you அரே "
"not வீச்சலகு a baggle, and then move பின் one படி பெறுநர் the கிழக்கு and drop "
"your baggle), and iterate until you கண்டுபிடி the exit (that is, the wall "
"பெறுநர் the கிழக்கு side). Afterward, move out அச் in the objective world. "
"That's only a few more படிகள் away."

#. type: Content of: <p>
#: src/lessons/welcome/summative/Moria.html:18
msgid ""
"To make things worse, you have to write a program that works for every "
"buggle, even if writing a specific program for each of them would be "
"easier. It seems that using <code>while</code> loops is the only solution to "
"move the buggles correctly."
msgstr ""
"பெறுநர் make things worse, you have பெறுநர் write a திட்டம் that works க்கு every "
"buggle, இரட்டை if writing a specific திட்டம் க்கு each of them would be easier. "
"It seems that using <code>while</code> வளையங்கள் is the only நீர்மக்கூழ் பெறுநர் "
"move the buggles correctly."

#. type: Content of: <p>
#: src/lessons/welcome/summative/Moria.html:23
msgid ""
"Once you manage to escape this trap, you can move forward to the next "
"exercise.  This exercise is a bit more complex, so you can also leave it for "
"now and come back later if you don't get it right now."
msgstr ""
"Once you manage பெறுநர் escape this trap, you can move forward பெறுநர் the "
"அடுத்தது exercise.  This exercise is a துணுக்கு more complex, so you can also "
"leave it க்கு now and come பின் later if you don't get it வலது now."

#. type: Content of: <h3>
#: src/lessons/turmites/Main.html:2 src/lessons/turmites/short_desc.html:2
msgid "The turmites"
msgstr "The turmites"

#. type: Content of: <p>
#: src/lessons/turmites/Main.html:4
msgid ""
"This set of activities lets you play with Langton's ants, that are 2D turing "
"machines. They constitute very simple application problems, achievable by "
"beginners, and open the door to an amazing world."
msgstr ""
"This கணம் of activities lets you play with Langton's ants, that அரே 2D turing "
"machines. They constitute very simple application problems, achievable by "
"beginners, and திற the door பெறுநர் an amazing world."

#. type: Content of: <p>
#: src/lessons/turmites/Main.html:8
msgid ""
"This mechanism were invented in 1986 by Chris Langton, and later generalized "
"in several ways (as we shall see in the next exercises). It was proven that "
"Turmites and Turing machines are of equal power: An ant's trajectory can be "
"used to compute any boolean circuit, and thus that an ant is capable of "
"universal computation. Put simply, any possible computation can be achieved "
"using a turmite as a computing device. Yet another subject of fascination..."
msgstr ""
"This mechanism were invented in 1986 by Chris Langton, and later generalized "
"in several ways (as we shall see in the அடுத்தது exercises). It was proven "
"that Turmites and Turing machines அரே of equal power: An ant's எறிபாதை can "
"be used பெறுநர் compute any boolean circuit, and thus that an ant is capable "
"of universal computation. Put simply, any possible computation can be "
"achieved using a turmite அச் a computing device. Yet another பொருள் of "
"fascination..."

#. type: Content of: <p>
#: src/lessons/turmites/Main.html:14
msgid ""
"Multicolor Langton's ants were discovered in 1995 by Propp et Al. Another "
"funny fact is that the ants which name is a list of consecutive pair of "
"identical letters (LL and RR) produce symmetric patterns. This fact was even "
"formally proved."
msgstr ""
"Multicolor Langton's ants were discovered in 1995 by Propp et Al. Another "
"funny fact is that the ants which பெயர் is a பட்டியல் of consecutive பேரிக்காய் "
"of identical letters (LL and RR) produce சமச்சீர் patterns. This fact was இரட்டை "
"formally proved."

#. type: Content of: <p>
#: src/lessons/turmites/Main.html:19
msgid ""
"Check the corresponding wikipedia web page, of which this exercise is "
"inspired, for further details."
msgstr ""
"சரிபார் the corresponding wikipedia விரலிடைத் தோல் page, of which this exercise "
"is inspired, க்கு further details."

#. type: Content of: <h3>
#: src/lessons/turmites/Main.html:22 src/lessons/sort/basic/Main.html:15
#: src/lessons/sort/dutchflag/Main.html:9 src/lessons/sort/pancake/Main.html:30
#: src/lessons/sort/baseball/Main.html:28 src/lessons/turtleart/Main.html:12
msgid "What can I do to improve this PLM universe?"
msgstr "What can I do பெறுநர் improve this PLM universe?"

#. type: Content of: <p>
#: src/lessons/turmites/Main.html:24 src/lessons/sort/basic/Main.html:17
#: src/lessons/sort/dutchflag/Main.html:11
#: src/lessons/sort/pancake/Main.html:32 src/lessons/sort/baseball/Main.html:30
#: src/lessons/turtleart/Main.html:14 src/lessons/recursion/cons/Main.html:7
msgid ""
"As usual, there are several things that could be done in the code of this "
"universe to improve it:"
msgstr ""
"அச் usual, there அரே several things that could be முடிந்தது in the குறியீடு of "
"this அண்டம் பெறுநர் improve it:"

#. type: Content of: <ul><li>
#: src/lessons/turmites/Main.html:26
msgid ""
"We are probably missing some good exercises. The turmite creator exercise is "
"a bit harsh: we could introduce the patterns in a more friendly manner."
msgstr ""
"We அரே probably missing some good exercises. The turmite creator exercise is "
"a துணுக்கு harsh: we could introduce the patterns in a more friendly manner."

#. type: Content of: <ul><li>
#: src/lessons/turmites/Main.html:28
msgid "We may want to write an exercise on the busy beaver, maybe?"
msgstr "We சி-வைகாசி want பெறுநர் write an exercise on the busy beaver, maybe?"

#. type: Content of: <p>
#: src/lessons/turmites/short_desc.html:3
msgid "Discover the Langton's ants, that are 2D turing machines."
msgstr "கண்டுபிடி the Langton's ants, that அரே 2D turing machines."

#. type: Content of: <p>
#: src/lessons/turmites/short_desc.html:5
msgid ""
"These activities are very simple application problems, achievable by "
"beginners, and open the door to an amazing world."
msgstr ""
"These activities அரே very simple application problems, achievable by "
"beginners, and திற the door பெறுநர் an amazing world."

#. type: Content of: <h2>
#: src/lessons/turmites/langton/Langton.html:2
msgid "Langton's ant"
msgstr "Langton's ant"

#. type: Content of: <p>
#: src/lessons/turmites/langton/Langton.html:4
msgid ""
"In this exercise, you will turn your buggle into a <i>Langton's "
"ant</i>. These artificial little animals are very interesting because they "
"are given simple rules that depend only on their local environment, and "
"after a period of apparent chaotic behavior, a general pattern "
"<i>emerges</i>."
msgstr ""
"In this exercise, you will turn your buggle into a <i>Langton's ant</i>. "
"These artificial little animals அரே very interesting because they அரே given "
"simple rules that depend only on their local environment, and after a "
"காலசுழற்சி of apparent chaotic behavior, a பொது pattern <i>emerges</i>."

#. type: Content of: <p>
#: src/lessons/turmites/langton/Langton.html:9
msgid ""
"The rules are absolutely trivial: to compute what the next step should be, "
"you should check the current color of the ground (using "
"<code>getGroundColor()</code>). If it's white, change it to black, turn "
"right and move forward by one cell. If the ground is currently black, change "
"it to white, turn left and move forward by one cell."
msgstr ""
"The rules அரே absolutely trivial: பெறுநர் compute what the அடுத்தது படி should "
"be, you should சரிபார் the மின்னோட்ட்ம், ஓட்டம் color of the ground (using "
"<code>getGroundColor()</code>). If it's white, change it பெறுநர் black, turn "
"வலது and move forward by one cell. If the ground is currently black, change "
"it பெறுநர் white, turn இடது and move forward by one cell."

#. type: Content of: <p>
#: src/lessons/turmites/langton/Langton.html:15
msgid ""
"It's hard to come up with simpler rules isn't it? Well, let's go and code it "
"now. You have to complete the <code>step()</code> method, which encodes the "
"behavior of the ant at each step. You will probably use the "
"<code>getGroundColor()</code> method to retrieve the color of the cell on "
"which the ant is currently.  Colors of interest are simply named "
"<code>Color.black</code> and <code>Color.white</code>."
msgstr ""
"It's hard பெறுநர் come மேலே with simpler rules isn't it? Well, let's go and "
"குறியீடு it now. You have பெறுநர் complete the <code>step()</code> method, "
"which encodes the behavior of the ant at each step. You will probably use "
"the <code>getGroundColor()</code> method பெறுநர் retrieve the color of the கலன்"
" on which the ant is currently.  Colors of interest அரே simply named "
"<code>Color.black</code> and <code>Color.white</code>."

#. type: Content of: <p>
#: src/lessons/turmites/langton/Langton.html:22
msgid ""
"To compare colors, you cannot use the equal signs (==), because these things "
"are not scalar values but objects. Instead, you need to write something like "
"the following:"
msgstr ""
"பெறுநர் compare colors, you cannot use the equal signs (==), because these "
"things அரே not அளவெண் values but objects. Instead, you need பெறுநர் write "
"something like the following:"

#. type: Content of: <pre>
#: src/lessons/turmites/langton/Langton.html:25
#, no-wrap
msgid ""
"Color c /* = some initialization */;\n"
"if (c.equals(Color.black)) {\n"
"  /* that's equal */\n"
"} else {\n"
"  /* that was not equal */\n"
"}\n"
msgstr ""
"Color c /* = some முன்னமைவு */;\n"
"if (c.equals(Color.black)) {\n"
"  /* that's equal */\n"
"} else {\n"
"  /* that was not equal */\n"
"}\n"

#. type: Content of: <p>
#: src/lessons/turmites/langton/Langton.html:34
msgid ""
"Changing the ground color is not difficult, but a bit long: you have to "
"change the brush color of your buggle, set the brush down (to mark the "
"current cell -- with <code>brushDown()</code>), and set the brush back up "
"(with <code>brushUp()</code>) to avoid further issues when the buggle will "
"move. You are naturally free of organizing your code the way you want, but "
"you may want to write a <code>setGroundColor(color)</code> method to "
"factorize things a bit."
msgstr ""
"Changing the ground color is not difficult, but a துணுக்கு long: you have "
"பெறுநர் change the மின்தொடி color of your buggle, கணம் the மின்தொடி down (to "
"mark the மின்னோட்ட்ம், ஓட்டம் கலன் -- with <code>brushDown()</code>), and கணம் the "
"மின்தொடி பின் மேலே (with <code>brushUp()</code>) பெறுநர் avoid further issues "
"when the buggle will move. You அரே naturally free of organizing your குறியீடு "
"the way you want, but you சி-வைகாசி want பெறுநர் write a "
"<code>setGroundColor(color)</code> method பெறுநர் factorize things a bit."

#. type: Content of: <p>
#: src/lessons/turmites/langton/Langton.html:41
msgid ""
"As you can see from the execution of this exercise, the interest in this "
"algorithm is that after about 10000 steps of relative chaotic behavior, the "
"ant start building a regular pattern. This emergence of a regular pattern "
"from the chaos is rather fascinating, isn't it? Move on to the next exercise "
"to see more of them."
msgstr ""
"அச் you can see இருந்து the execution of this exercise, the interest in this "
"படிமுறை is that after பற்றி 10000 படிகள் of relative chaotic behavior, the ant "
"தொடங்கு building a regular pattern. This emergence of a regular pattern இருந்து"
" the chaos is rather fascinating, isn't it? Move on பெறுநர் the அடுத்தது "
"exercise பெறுநர் see more of them."

#. type: Content of: <h2>
#: src/lessons/turmites/langtoncolors/LangtonColors.html:2
msgid "Multicolor Langton's ant"
msgstr "Multicolor Langton's ant"

#. type: Content of: <p>
#: src/lessons/turmites/langtoncolors/LangtonColors.html:4
msgid ""
"There is several ways to extend the concept of Langton's ant. In this "
"exercise, we explore first one, using more than two colors. It remains very "
"similar to the base case: the behavior at each step still depends on the "
"ground color, but you have more than 2 possibilities. It allows to have more "
"than one kind of ant, depending on what you decide to do for each color. For "
"example, the ant LRL takes 3 colors. It turns left on the first color, right "
"on the second one and left on the third color. According to this definition, "
"the basic ant is a RL (since it turns right on white cells and left on black "
"ones)."
msgstr ""
"There is several ways பெறுநர் extend the concept of Langton's ant. In this "
"exercise, we explore first one, using more than two colors. It remains very "
"similar பெறுநர் the காரம் case: the behavior at each படி still depends on the "
"ground color, but you have more than 2 possibilities. It allows பெறுநர் have "
"more than one kind of ant, depending on what you decide பெறுநர் do க்கு each "
"color. க்கு example, the ant LRL takes 3 colors. It turns இடது on the first "
"color, வலது on the second one and இடது on the third color. According பெறுநர் "
"this definition, the அடிப்படை ant is a RL (since it turns வலது on வெள்ளை cells "
"and இடது on கருப்பு ones)."

#. type: Content of: <p>
#: src/lessons/turmites/langtoncolors/LangtonColors.html:13
msgid ""
"Some of these ants draw fascinating patterns (switch the world to see them): "
"LLRR build a symmetric figure resembling loosely to a ball, LRRRRRLLR draws "
"a square, LLRRRLRLRLLR draws a convoluted regular pattern after a period of "
"seemingly chaotic behavior, and RRLLLRLLLRRR seems to fill a hour glass..."
msgstr ""
"Some of these ants draw fascinating patterns (switch the world பெறுநர் see "
"them): LLRR உருவாக்கு a சமச்சீர் figure resembling loosely பெறுநர் a ball, "
"LRRRRRLLR draws a square, LLRRRLRLRLLR draws a convoluted regular pattern "
"after a காலசுழற்சி of seemingly chaotic behavior, and RRLLLRLLLRRR seems "
"பெறுநர் fill a hour glass..."

#. type: Content of: <p>
#: src/lessons/turmites/langtoncolors/LangtonColors.html:18
msgid ""
"Changing your buggle into a generic Langton's ant is not very complicated, "
"although it is not completely trivial. As previously, you have to write a "
"<code>step</code> function. But this time, it receives two arrays as "
"parameters.  The first one defines the rules to follow depending on the "
"ground color while the second one gives the sequence of colors to use. For "
"example, the basic ant would have [!java]<code>{'R', 'L'}</code> and "
"<code>{Color.white, Color.black}</code>[/!] [!python]<code>['R', 'L']</code> "
"and <code>[Color.white, Color.black]</code>[/!] [!scala]<code>Array('R', "
"'L')</code> and <code>Array(Color.white, Color.black)</code>[/!] as "
"arguments."
msgstr ""
"Changing your buggle into a generic Langton's ant is not very complicated, "
"although it is not completely trivial. அச் previously, you have பெறுநர் write "
"a <code>step</code> function. But this time, it receives two arrays அச் "
"parameters.  The first one வரையறுக்கிறது the rules பெறுநர் follow depending on "
"the ground color while the second one gives the வரிசை of colors பெறுநர் use. "
"க்கு example, the அடிப்படை ant would have [!java]<code>{'R', 'L'}</code> and "
"<code>{Color.white, Color.black}</code>[/!] [!python]<code>['R', 'L']</code> "
"and <code>[Color.white, Color.black]</code>[/!] [!scala]<code>Array('R', "
"'L')</code> and <code>Array(Color.white, Color.black)</code>[/!] அச் "
"arguments."

#. type: Content of: <p>
#: src/lessons/turmites/langtoncolors/LangtonColors.html:29
msgid "At each step, you thus have to apply the following pseudo-code:"
msgstr "At each step, you thus have பெறுநர் இடு the following pseudo-code:"

#. type: Content of: <ul><li>
#: src/lessons/turmites/langtoncolors/LangtonColors.html:31
msgid "Find the position of the ground color in the color sequence;"
msgstr "கண்டுபிடி the position of the ground color in the color sequence;"

#. type: Content of: <ul><li>
#: src/lessons/turmites/langtoncolors/LangtonColors.html:32
msgid ""
"Turn left or right depending on the content of the rule array at that "
"position;"
msgstr ""
"Turn இடது or வலது depending on the content of the விதி array at that "
"position;"

#. type: Content of: <ul><li>
#: src/lessons/turmites/langtoncolors/LangtonColors.html:33
msgid ""
"Mark the current ground with the next color in the sequence (the last color "
"being followed by the first one);"
msgstr ""
"Mark the மின்னோட்ட்ம், ஓட்டம் ground with the அடுத்தது color in the வரிசை (the last "
"color being followed by the first one);"

#. type: Content of: <ul><li>
#: src/lessons/turmites/langtoncolors/LangtonColors.html:34
msgid "Move forward by one step."
msgstr "Move forward by one step."

#. type: Content of: <p>
#: src/lessons/turmites/langtoncolors/LangtonColors.html:37
#: src/lessons/turmites/helloturmite/HelloTurmite.html:67
msgid "You now should have enough information to succeed."
msgstr "You now should have enough செய்தி பெறுநர் succeed."

#. type: Content of: <h2>
#: src/lessons/turmites/helloturmite/HelloTurmite.html:2
msgid "Turmites"
msgstr "Turmites"

#. type: Content of: <p>
#: src/lessons/turmites/helloturmite/HelloTurmite.html:4
msgid ""
"This exercise explores a new way to extend the concept of Langton's "
"ant. Now, the behavior of the ant not only depends on the color on the "
"ground, but also on its internal state (represented by an integer "
"value). The idea of changing the ant into such an automata naturally comes "
"from the Turing machine concept. This explains the name of these new "
"animals, which is a portemanteau of <i>Turing</i> and <i>Termite</i> (if you "
"don't know what a Turing machine is, you should run to wikipedia, because it "
"is simply impossible to be a real computer scientist before that)."
msgstr ""
"This exercise explores a புதிய way பெறுநர் extend the concept of Langton's "
"ant. Now, the behavior of the ant not only depends on the color on the "
"ground, but also on its internal state (represented by an முழு எண் value). "
"The idea of changing the ant into such an automata naturally comes இருந்து "
"the Turing machine concept. This explains the பெயர் of these புதிய animals, "
"which is a portemanteau of <i>Turing</i> and <i>Termite</i> (if you don't "
"know what a Turing machine is, you should ஓடு பெறுநர் wikipedia, because it "
"is simply impossible பெறுநர் be a real கணிப்பொறி, கணிணி scientist before that)."

#. type: Content of: <p>
#: src/lessons/turmites/helloturmite/HelloTurmite.html:13
msgid ""
"Once again, you just have to write the <code>step()</code> method, in charge "
"of doing one turmite's step. Once again, you should first find the rank of "
"the current's cell ground color in the color sequence. But this time, the "
"<code>rule</code> data depends both on the current color and the current "
"state.  <code>rule</code> actually contains 3 information in each situation: "
"the color to write, the move to do, and the next state value. For example, "
"[!java|python]rule[1][0][/!][!scala]rule(1)(0)[/!] contains the informations "
"to use when <code>state==1</code> and <code>color==0</code>.  In other "
"worlds, you can retrieve the information relative to your current situation "
"by using "
"<code>[!java|python]rule[state][currentColor][/!][!scala]rule(state)(currentColor)[/!]</code>."
msgstr ""
"Once again, you just have பெறுநர் write the <code>step()</code> method, in "
"மின்னூட்டு of doing one turmite's step. Once again, you should first கண்டுபிடி "
"the rank of the current's கலன் ground color in the color sequence. But this "
"time, the <code>rule</code> தகவல்கள் depends both on the மின்னோட்ட்ம், ஓட்டம் color "
"and the மின்னோட்ட்ம், ஓட்டம் state.  <code>rule</code> actually contains 3 செய்தி "
"in each situation: the color பெறுநர் write, the move பெறுநர் do, and the "
"அடுத்தது state value. க்கு example, [!java|python]rule[1][0][/!][!scala]"
"rule(1)(0)[/!] contains the informations பெறுநர் use when <code>state==1</"
"code> and <code>color==0</code>.  In மற்றொன்று worlds, you can retrieve the "
"செய்தி relative பெறுநர் your மின்னோட்ட்ம், ஓட்டம் situation by using <code>"
"[!java|python]rule[state][currentColor][/!][!scala]rule(state)(currentColor)"
"[/!]</code>."

#. type: Content of: <p>
#: src/lessons/turmites/helloturmite/HelloTurmite.html:25
msgid ""
"Each such information set contains 3 values. The first one is the rank of "
"the color to write on the ground. The second is the move to do, with the "
"following notation: 0=stop, 1=noturn, 2=left, 4=u-turn, 8=right. Note that "
"if the command is stop, you shouldn't even move forward on that step (but "
"you shouldn't stop your program either: the next steps can do something else "
"in a future state). Finally, the third integer is the next "
"<code>state</code> value to go into after this iteration."
msgstr ""
"Each such செய்தி கணம் contains 3 values. The first one is the rank of the "
"color பெறுநர் write on the ground. The second is the move பெறுநர் do, with the "
"following notation: 0=stop, 1=noturn, 2=left, 4=u-turn, 8=right. குறிப்பு "
"that if the கட்டளை is stop, you shouldn't இரட்டை move forward on that படி (but "
"you shouldn't நிறுத்து your திட்டம் either: the அடுத்தது படிகள் can do something "
"else in a future state). Finally, the third முழு எண் is the அடுத்தது "
"<code>state</code> மதிப்பு பெறுநர் go into after this iteration."

#. type: Content of: <p>
#: src/lessons/turmites/helloturmite/HelloTurmite.html:32
msgid ""
"Since these arbitrary notations are somehow difficult to remember, you "
"should define a set of constants that you should use instead of the direct "
"numerical values.  Their names could be NOTURN, LEFT, RIGHT and so on.  "
"[!scala]Just declare them using the keyword <code>val</code> instead of "
"<code>var</code>.  You should always use <code>val</code> instead of "
"<code>var</code> when possible anyway.[/!] [!java]The modifiers <code>final "
"static</code> before their type is the way to mark variables as constant in "
"Java.  You should write for example <code>static final int NOTURN=1;</code> "
"Sorry for the complexity of this notation. [/!] [!python]By convention, such "
"constant variables are written in upper case in python.  Technically, you "
"can still modify them, but that would be a very bad idea.[/!] You should "
"write them out of any method so that they are globally visible."
msgstr ""
"Since these arbitrary notations அரே somehow difficult பெறுநர் remember, you "
"should define a கணம் of மாறிலிகள் that you should use instead of the direct "
"numerical values.  Their names could be NOTURN, LEFT, வலது and so on.  "
"[!scala]Just declare them using the keyword <code>val</code> instead of "
"<code>var</code>.  You should எப்போதும் use <code>val</code> instead of "
"<code>var</code> when possible anyway.[/!] [!java]The modifiers <code>final "
"static</code> before their வகை is the way பெறுநர் mark மாறிகள் அச் மாறா, மாறிலி "
"in Java.  You should write க்கு example <code>static final int NOTURN=1;</"
"code> Sorry க்கு the complexity of this notation. [/!] [!python]By "
"convention, such மாறா, மாறிலி மாறிகள் அரே written in upper case in python.  "
"Technically, you can still modify them, but that would be a very bad idea.[/"
"!] You should write them out of any method so that they அரே globally visible."

#. type: Content of: <p>
#: src/lessons/turmites/helloturmite/HelloTurmite.html:44
msgid ""
"Using such constants greatly help making the code easier to read. Compare "
"the next two code chunks:"
msgstr ""
"Using such மாறிலிகள் greatly உதவி making the குறியீடு easier பெறுநர் read. "
"Compare the அடுத்தது two குறியீடு chunks:"

#. type: Content of: <pre>
#: src/lessons/turmites/helloturmite/HelloTurmite.html:46
#, no-wrap
msgid ""
"[!java]if (rule[state][currentColor][NEXT_MOVE] == LEFT) {[/!][!python]if "
"rule[state][currentColor][NEXT_MOVE] == LEFT:[/!][!scala]if "
"(rule(state)(currentColor)(NEXT_MOVE) == LEFT) {[/!]\n"
"    left()[!java];[/!]\n"
"[!java|scala]}[/!]"
msgstr ""
"[!java]if (rule[state][currentColor][NEXT_MOVE] == LEFT) {[/!][!python]if "
"rule[state][currentColor][NEXT_MOVE] == LEFT:[/!][!scala]if "
"(rule(state)(currentColor)(NEXT_MOVE) == LEFT) {[/!]\n"
"    left()[!java];[/!]\n"
"[!java|scala]}[/!]"

#. type: Content of: <p>
#: src/lessons/turmites/helloturmite/HelloTurmite.html:49
msgid "This is much more easier to read (although longer) than the following:"
msgstr ""
"This is much more easier பெறுநர் read (although longer) than the following:"

#. type: Content of: <pre>
#: src/lessons/turmites/helloturmite/HelloTurmite.html:50
#, no-wrap
msgid ""
"[!java]if (rule[i][j][1] == 2) {[/!][!python]if rule[i][j][1] == "
"2:[/!][!scala]if (rule(i)(j)(1) == 2) {[/!]\n"
"    left()[!java];[/!]\n"
"[!java|scala]}[/!]"
msgstr ""
"[!java]if (rule[i][j][1] == 2) {[/!][!python]if rule[i][j][1] == 2:[/!]"
"[!scala]if (rule(i)(j)(1) == 2) {[/!]\n"
"    left()[!java];[/!]\n"
"[!java|scala]}[/!]"

#. type: Content of: <p>
#: src/lessons/turmites/helloturmite/HelloTurmite.html:54
msgid ""
"Finally, you probably want to write a <code>elif</code> branch for the "
"<code>STOP</code> condition too. Having a <code>else</code> branch "
"displaying an error message such as \"unknown case\" is a good practice: it "
"makes your assumptions about your code more explicit, and you will get an "
"error message if they fall short. When doing so, the next problem is that "
"you have nothing to do in the <code>STOP</code> case, but python do not "
"allows you to write empty <code>elif</code> branches. You should use the "
"<code>pass</code> instruction as a placeholder: it says python that you have "
"a branch here, and that it does not contain anything."
msgstr ""
"Finally, you probably want பெறுநர் write a <code>elif</code> branch க்கு the "
"<code>STOP</code> condition too. Having a <code>else</code> branch "
"displaying an பிழை செய்தி such அச் \"unknown case\" is a good practice: it "
"makes your assumptions பற்றி your குறியீடு more explicit, and you will get an "
"பிழை செய்தி if they fall short. When doing so, the அடுத்தது problem is that "
"you have nothing பெறுநர் do in the <code>STOP</code> case, but பைதான் do not "
"allows you பெறுநர் write வெறுமை <code>elif</code> branches. You should use "
"the <code>pass</code> instruction அச் a placeholder: it says பைதான் that you "
"have a branch here, and that it does not contain anything."

#. type: Content of: <p>
#: src/lessons/turmites/helloturmite/HelloTurmite.html:63
msgid ""
"You should probably use a [!java]switch case[/!][!scala]pattern matching[/!] "
"construct to keep your code readable.  If you can't remember what it is, "
"check <a href=\"plm://lessons.welcome/bdr.BDR2\">this exercise</a>."
msgstr ""
"You should probably use a [!java]switch case[/!][!scala]pattern matching[/!] "
"construct பெறுநர் keep your குறியீடு readable.  If you can't remember what it "
"is, சரிபார் <a href=\"plm://lessons.welcome/bdr.BDR2\">this exercise</a>."

#. type: Content of: <h2>
#: src/lessons/turmites/helloturmite/HelloTurmite.html:69
msgid "Bibliographical notes"
msgstr "Bibliographical notes"

#. type: Content of: <p>
#: src/lessons/turmites/helloturmite/HelloTurmite.html:70
msgid ""
"According to wikipedia, turmites were invented independently by the end of "
"the eighties. It has been shown that turmites in general are exactly "
"equivalent in power to one-dimensional Turing machines with an infinite "
"tape, as either can simulate the other. This means that absolutely any "
"program that you can think of could theoretically be computed on this "
"device..."
msgstr ""
"According பெறுநர் wikipedia, turmites were invented independently by the end "
"of the eighties. It has been shown that turmites in பொது அரே exactly "
"equivalent in விசை பெறுநர் one-dimensional Turing machines with an கந்தழி, "
"முடிவிலி tape, அச் either can simulate the other. This means that absolutely "
"any திட்டம் that you can think of could theoretically be computed on this "
"device..."

#. type: Content of: <h2>
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:2
msgid "Creating Turmites"
msgstr "Creating Turmites"

#. type: Content of: <p>
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:4
msgid ""
"This exercise allows you to build your own turmites. To pass the exercise, "
"you should simply write a <code>init()</code> method which initializes the "
"<code>rule</code> to use the following transitions table (from wikipedia), "
"set the buggle initial position at (8;33), and ask for 8342 steps."
msgstr ""
"This exercise allows you பெறுநர் உருவாக்கு your own turmites. பெறுநர் கணவாய் the "
"exercise, you should simply write a <code>init()</code> method which "
"initializes the <code>rule</code> பெறுநர் use the following transitions table "
"(from wikipedia), கணம் the buggle initial position at (8;33), and ask க்கு "
"8342 steps."

#. type: Content of: <table><tr><th>
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:11
msgid "Current color"
msgstr "மின்னோட்ட்ம், ஓட்டம் color"

#. type: Content of: <table><tr><td>
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:14
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:29
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:32
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:40
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:42
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:43
msgid "0"
msgstr "0"

#. type: Content of: <table><tr><td>
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:15
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:30
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:33
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:35
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:38
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:45
msgid "1"
msgstr "1"

#. type: Content of: <table><tr><th>
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:19
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:22
msgid "Write color"
msgstr "Write color"

#. type: Content of: <table><tr><th>
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:20
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:23
msgid "Turn"
msgstr "Turn"

#. type: Content of: <table><tr><th>
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:21
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:24
msgid "Next state"
msgstr "அடுத்தது state"

#. type: Content of: <table><tr><th>
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:27
msgid "Current state"
msgstr "மின்னோட்ட்ம், ஓட்டம் state"

#. type: Content of: <table><tr><td>
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:31
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:34
msgid "R"
msgstr "R"

#. type: Content of: <table><tr><td>
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:41
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:44
msgid "N"
msgstr "N"

#. type: Content of: <p>
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:49
msgid ""
"where the direction to turn is one of <b>L</b> (90° left), <b>R</b> (90° "
"right), <b>N</b> (no turn) and <b>U</b> (180° U-turn)."
msgstr ""
"where the direction பெறுநர் turn is one of <b>L</b> (90° left), <b>R</b> (90° "
"right), <b>N</b> (no turn) and <b>U</b> (180° U-turn)."

#. type: Content of: <h2>
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:51
msgid "Going further"
msgstr "Going further"

#. type: Content of: <p>
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:52
msgid ""
"This exercise is naturally an excuse to let you experiment with your own "
"turmites.  Feel free to change the transition table and the amount of steps "
"to experiment by yourself. To that extend, you may find the Ed Pegg Jr's "
"library useful. If you find new interesting patterns, send them per email so "
"that we can integrate them to this list!"
msgstr ""
"This exercise is naturally an excuse பெறுநர் let you experiment with your own "
"turmites.  Feel free பெறுநர் change the transition table and the amount of "
"படிகள் பெறுநர் experiment by yourself. பெறுநர் that extend, you சி-வைகாசி "
"கண்டுபிடி the Ed Pegg Jr's library useful. If you கண்டுபிடி புதிய interesting "
"patterns, send them per email so that we can integrate them பெறுநர் this list!"

#. type: Content of: <p>
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:58
msgid ""
"In addition, wikipedia is desperately missing some good looking colorful "
"turmites: only black and white ones are depicted.  You should consider "
"submitting your creations directly to the free encyclopedia."
msgstr ""
"In addition, wikipedia is desperately missing some good looking colorful "
"turmites: only கருப்பு and வெள்ளை ones அரே depicted.  You should consider "
"submitting your creations directly பெறுநர் the free encyclopedia."

#. type: Content of: <p>
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:63
msgid ""
"Here are some 2-color turmites, extracted from "
"http://demonstrations.wolfram.com/Turmites/ [!python|scala]They are not "
"written using the [!thelang] syntax, but converting them should be easy.[/!]"
msgstr ""
"Here அரே some 2-color turmites, extracted இருந்து http://"
"demonstrations.wolfram.com/Turmites/ [!python|scala]They அரே not written "
"using the [!thelang] syntax, but converting them should be easy.[/!]"

#. type: Content of: <pre>
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:67
#, no-wrap
msgid ""
"{{{1, RIGHT , 0}, {0, LEFT  , 0}}}  # 1: Langton's ant\n"
"{{{1, RIGHT , 0}, {0, NOTURN, 0}}}  # 2: binary counter\n"
"{{{0, LEFT  , 1}, {1, RIGHT , 1}}, {{1, NOTURN, 0}, {1, NOTURN, 1}}} # 3: "
"(filled triangle)\n"
"{{{0, NOTURN, 1}, {0, LEFT  , 1}}, {{1, RIGHT , 0}, {0, NOTURN, 1}}} # 4: "
"spiral in a box\n"
"{{{0, RIGHT , 1}, {0, LEFT  , 0}}, {{1, LEFT  , 1}, {0, RIGHT , 0}}} # 5: "
"stripe-filled spiral\n"
"{{{0, RIGHT , 1}, {0, LEFT  , 0}}, {{1, LEFT  , 1}, {1, NOTURN, 0}}} # 6: "
"stepped pyramid\n"
"{{{0, RIGHT , 1}, {0, NOTURN, 1}}, {{1, RIGHT , 1}, {1, LEFT  , 0}}} # 7: "
"contoured island\n"
"{{{0, RIGHT , 1}, {0, RIGHT , 1}}, {{1, NOTURN, 0}, {0, RIGHT , 1}}} # 8: "
"woven placemat\n"
"{{{0, RIGHT , 1}, {1, RIGHT , 1}}, {{1, LEFT  , 1}, {1, LEFT  , 0}}} # 9: "
"snowflake-ish\n"
"{{{1, LEFT  , 0}, {0, NOTURN, 1}}, {{0, LEFT  , 0}, {0, LEFT  , 1}}} # 10: "
"slow city builder\n"
"{{{1, LEFT  , 0}, {1, RIGHT , 1}}, {{0, RIGHT , 0}, {0, LEFT  , 1}}} # 11: "
"framed computer art\n"
"{{{1, LEFT  , 0}, {1, RIGHT , 1}}, {{0, RIGHT , 1}, {1, LEFT  , 0}}} # 12: "
"balloon bursting (makes a spreading highway)\n"
"{{{1, LEFT  , 1}, {0, LEFT  , 0}}, {{1, NOTURN, 0}, {0, NOTURN, 0}}} # 13: "
"makes a horizontal highway\n"
"{{{1, LEFT  , 1}, {0, LEFT  , 0}}, {{1, RIGHT , 1}, {1, RIGHT , 0}}} # 14: "
"makes a 45 degree highway\n"
"{{{1, LEFT  , 1}, {0, LEFT  , 1}}, {{1, RIGHT , 1}, {0, LEFT  , 0}}} # 15: "
"makes a 45 degree highway\n"
"{{{1, LEFT  , 1}, {0, NOTURN, 0}}, {{1, NOTURN, 0}, {1, RIGHT , 0}}} # 16: "
"spiral in a filled box\n"
"{{{1, LEFT  , 1}, {0, RIGHT , 0}}, {{0, LEFT  , 0}, {0, LEFT  , 0}}} # 17: "
"glaciers\n"
"{{{1, LEFT  , 1}, {1, LEFT  , 1}}, {{1, RIGHT , 1}, {0, NOTURN, 0}}} # 18: "
"golden rectangle!\n"
"{{{1, LEFT  , 1}, {1, RIGHT , 0}}, {{0, LEFT  , 0}, {0, LEFT  , 0}}} # 19: "
"fizzy spill\n"
"{{{1, LEFT  , 1}, {1, RIGHT , 1}}, {{1, NOTURN, 0}, {0, NOTURN, 1}}} # 20: "
"nested cabinets\n"
"{{{1, NOTURN, 1}, {0, LEFT  , 1}}, {{1, RIGHT , 0}, {1, NOTURN, 1}}} # 21: "
"(cross)\n"
"{{{1, NOTURN, 1}, {0, NOTURN, 0}}, {{0, RIGHT , 0}, {1, LEFT  , 0}}} # 22: "
"saw-tipped growth\n"
"{{{1, NOTURN, 1}, {0, NOTURN, 1}}, {{1, RIGHT , 1}, {0, NOTURN, 0}}} # 23: "
"curves in blocks growth\n"
"{{{1, NOTURN, 1}, {0, RIGHT , 0}}, {{0, LEFT  , 0}, {0, LEFT  , 0}}} # 24: "
"textured growth\n"
"{{{1, NOTURN, 1}, {0, RIGHT , 1}}, {{1, LEFT  , 0}, {1, RIGHT , 0}}} # 25: "
"(diamond growth)\n"
"{{{1, NOTURN, 1}, {1, LEFT  , 0}}, {{1, RIGHT , 1}, {0, NOTURN, 0}}} # 26: "
"coiled rope\n"
"{{{1, RIGHT , 0}, {0, LEFT  , 1}}, {{1, LEFT  , 0}, {0, NOTURN, 1}}} # 27: "
"(growth)\n"
"{{{1, RIGHT , 0}, {0, LEFT  , 1}}, {{1, LEFT  , 0}, {0, RIGHT , 1}}} # 28: "
"(square spiral)\n"
"{{{1, RIGHT , 0}, {1, RIGHT , 1}}, {{0, NOTURN, 0}, {0, NOTURN, 1}}} # 29: "
"loopy growth with holes\n"
"{{{1, RIGHT , 1}, {0, LEFT  , 1}}, {{1, NOTURN, 0}, {0, NOTURN, 0}}} # 30: "
"Lanton's Ant drawn with squares\n"
"{{{1, RIGHT , 1}, {0, RIGHT , 0}}, {{0, LEFT  , 1}, {1, LEFT  , 0}}} # 31: "
"growth with curves and blocks\n"
"{{{1, RIGHT , 1}, {0, RIGHT , 0}}, {{0, NOTURN, 0}, {1, RIGHT , 1}}} # 32: "
"distracted spiral builder\n"
"{{{1, RIGHT , 1}, {0, RIGHT , 1}}, {{1, NOTURN, 0}, {1, NOTURN, 1}}} # 33: "
"cauliflower stalk (45 deg highway)\n"
"{{{1, RIGHT , 1}, {1, LEFT  , 1}}, {{1, RIGHT , 1}, {0, RIGHT , 0}}} # 34: "
"worm trails (eventually turns cyclic!)\n"
"{{{1, RIGHT , 1}, {1, NOTURN, 0}}, {{1, NOTURN, 0}, {0, NOTURN, 1}}} # 35: "
"eventually makes a two-way highway!\n"
"{{{1, RIGHT , 1}, {1, RIGHT , 0}}, {{0, NOTURN, 0}, {0, NOTURN, 0}}} # 36: "
"almost symmetric mould bloom\n"
"{{{1, RIGHT , 1}, {1, RIGHT , 0}}, {{0, RIGHT , 0}, {1, NOTURN, 1}}} # 37: "
"makes a 1 in 2 gradient highway\n"
"{{{1, RIGHT , 1}, {1, RIGHT , 1}}, {{1, LEFT  , 1}, {0, RIGHT , 0}}} # 38: "
"immediately makes a 1 in 3 highway\n"
"{{{0, RIGHT , 1}, {1, RIGHT , 1}}, {{0, LEFT  , 2}, {0, LEFT  , 0}}, {{1, "
"RIGHT , 2}, {1, LEFT  , 0}}} # 39: squares and diagonals growth\n"
"{{{1, LEFT  , 1}, {0, NOTURN, 0}}, {{0, RIGHT , 2}, {1, LEFT  , 0}}, {{1, "
"RIGHT , 1}, {1, NOTURN, 0}}} # 40: streak at approx. an 8.1 in 1 gradient\n"
"{{{1, LEFT  , 1}, {0, NOTURN, 2}}, {{0, RIGHT , 2}, {1, NOTURN, 1}}, {{1, "
"RIGHT , 1}, {1, NOTURN, 0}}} # 41: streak at approx. a 1.14 in 1 gradient\n"
"{{{1, LEFT  , 1}, {1, LEFT  , 1}}, {{1, NOTURN, 0}, {0, NOTURN, 2}}, {{0, "
"LEFT  , 1}, {1, NOTURN, 1}}} # 42: maze-like growth\n"
"{{{1, LEFT  , 2}, {0, RIGHT , 0}}, {{1, LEFT  , 0}, {0, RIGHT , 0}}, {{0, "
"LEFT  , 0}, {0, LEFT  , 1}}} # 43: growth by cornices \n"
"{{{1, RIGHT , 0}, {0, RIGHT , 2}}, {{0, LEFT  , 0}, {0, RIGHT , 0}}, {{0, "
"NOTURN, 1}, {1, LEFT  , 0}}} # 44: makes a 1 in 7 highway\n"
"{{{1, RIGHT , 1}, {0, LEFT  , 0}}, {{1, RIGHT , 2}, {0, NOTURN, 0}}, {{1, "
"LEFT  , 0}, {0, LEFT  , 0}}} # 45: makes a 4 in 1 highway\n"
msgstr ""
"{{{1, வலது , 0}, {0, இடது  , 0}}}  # 1: Langton's ant\n"
"{{{1, வலது , 0}, {0, NOTURN, 0}}}  # 2: இருமம் counter\n"
"{{{0, இடது  , 1}, {1, வலது , 1}}, {{1, NOTURN, 0}, {1, NOTURN, 1}}} # 3: ("
"filled triangle)\n"
"{{{0, NOTURN, 1}, {0, இடது  , 1}}, {{1, வலது , 0}, {0, NOTURN, 1}}} # 4: "
"spiral in a box\n"
"{{{0, வலது , 1}, {0, இடது  , 0}}, {{1, இடது  , 1}, {0, வலது , 0}}} # 5: "
"stripe-filled spiral\n"
"{{{0, வலது , 1}, {0, இடது  , 0}}, {{1, இடது  , 1}, {1, NOTURN, 0}}} # 6: "
"stepped pyramid\n"
"{{{0, வலது , 1}, {0, NOTURN, 1}}, {{1, வலது , 1}, {1, இடது  , 0}}} # 7: "
"contoured island\n"
"{{{0, வலது , 1}, {0, வலது , 1}}, {{1, NOTURN, 0}, {0, வலது , 1}}} # 8: woven "
"placemat\n"
"{{{0, வலது , 1}, {1, வலது , 1}}, {{1, இடது  , 1}, {1, இடது  , 0}}} # 9: "
"snowflake-ish\n"
"{{{1, இடது  , 0}, {0, NOTURN, 1}}, {{0, இடது  , 0}, {0, இடது  , 1}}} # 10: "
"slow city builder\n"
"{{{1, இடது  , 0}, {1, வலது , 1}}, {{0, வலது , 0}, {0, இடது  , 1}}} # 11: "
"framed கணிப்பொறி, கணிணி art\n"
"{{{1, இடது  , 0}, {1, வலது , 1}}, {{0, வலது , 1}, {1, இடது  , 0}}} # 12: "
"balloon bursting (makes a spreading highway)\n"
"{{{1, இடது  , 1}, {0, இடது  , 0}}, {{1, NOTURN, 0}, {0, NOTURN, 0}}} # 13: "
"makes a horizontal highway\n"
"{{{1, இடது  , 1}, {0, இடது  , 0}}, {{1, வலது , 1}, {1, வலது , 0}}} # 14: "
"makes a 45 degree highway\n"
"{{{1, இடது  , 1}, {0, இடது  , 1}}, {{1, வலது , 1}, {0, இடது  , 0}}} # 15: "
"makes a 45 degree highway\n"
"{{{1, இடது  , 1}, {0, NOTURN, 0}}, {{1, NOTURN, 0}, {1, வலது , 0}}} # 16: "
"spiral in a filled box\n"
"{{{1, இடது  , 1}, {0, வலது , 0}}, {{0, இடது  , 0}, {0, இடது  , 0}}} # 17: "
"glaciers\n"
"{{{1, இடது  , 1}, {1, இடது  , 1}}, {{1, வலது , 1}, {0, NOTURN, 0}}} # 18: "
"golden rectangle!\n"
"{{{1, இடது  , 1}, {1, வலது , 0}}, {{0, இடது  , 0}, {0, இடது  , 0}}} # 19: "
"fizzy spill\n"
"{{{1, இடது  , 1}, {1, வலது , 1}}, {{1, NOTURN, 0}, {0, NOTURN, 1}}} # 20: "
"nested cabinets\n"
"{{{1, NOTURN, 1}, {0, இடது  , 1}}, {{1, வலது , 0}, {1, NOTURN, 1}}} # 21: "
"(cross)\n"
"{{{1, NOTURN, 1}, {0, NOTURN, 0}}, {{0, வலது , 0}, {1, இடது  , 0}}} # 22: "
"saw-tipped growth\n"
"{{{1, NOTURN, 1}, {0, NOTURN, 1}}, {{1, வலது , 1}, {0, NOTURN, 0}}} # 23: "
"curves in தொகுதிகள் growth\n"
"{{{1, NOTURN, 1}, {0, வலது , 0}}, {{0, இடது  , 0}, {0, இடது  , 0}}} # 24: "
"textured growth\n"
"{{{1, NOTURN, 1}, {0, வலது , 1}}, {{1, இடது  , 0}, {1, வலது , 0}}} # 25: ("
"diamond growth)\n"
"{{{1, NOTURN, 1}, {1, இடது  , 0}}, {{1, வலது , 1}, {0, NOTURN, 0}}} # 26: "
"coiled rope\n"
"{{{1, வலது , 0}, {0, இடது  , 1}}, {{1, இடது  , 0}, {0, NOTURN, 1}}} # 27: "
"(growth)\n"
"{{{1, வலது , 0}, {0, இடது  , 1}}, {{1, இடது  , 0}, {0, வலது , 1}}} # 28: ("
"square spiral)\n"
"{{{1, வலது , 0}, {1, வலது , 1}}, {{0, NOTURN, 0}, {0, NOTURN, 1}}} # 29: "
"loopy growth with holes\n"
"{{{1, வலது , 1}, {0, இடது  , 1}}, {{1, NOTURN, 0}, {0, NOTURN, 0}}} # 30: "
"Lanton's Ant drawn with squares\n"
"{{{1, வலது , 1}, {0, வலது , 0}}, {{0, இடது  , 1}, {1, இடது  , 0}}} # 31: "
"growth with curves and blocks\n"
"{{{1, வலது , 1}, {0, வலது , 0}}, {{0, NOTURN, 0}, {1, வலது , 1}}} # 32: "
"distracted spiral builder\n"
"{{{1, வலது , 1}, {0, வலது , 1}}, {{1, NOTURN, 0}, {1, NOTURN, 1}}} # 33: "
"பூக்கோசு, பூங்கோசு, பூக்கோவா stalk (45 டெக் highway)\n"
"{{{1, வலது , 1}, {1, இடது  , 1}}, {{1, வலது , 1}, {0, வலது , 0}}} # 34: புழு "
"trails (eventually turns cyclic!)\n"
"{{{1, வலது , 1}, {1, NOTURN, 0}}, {{1, NOTURN, 0}, {0, NOTURN, 1}}} # 35: "
"eventually makes a two-way highway!\n"
"{{{1, வலது , 1}, {1, வலது , 0}}, {{0, NOTURN, 0}, {0, NOTURN, 0}}} # 36: "
"almost சமச்சீர் பூஞ்சைக்காளான் bloom\n"
"{{{1, வலது , 1}, {1, வலது , 0}}, {{0, வலது , 0}, {1, NOTURN, 1}}} # 37: "
"makes a 1 in 2 சரிவு highway\n"
"{{{1, வலது , 1}, {1, வலது , 1}}, {{1, இடது  , 1}, {0, வலது , 0}}} # 38: "
"உடனடியாக makes a 1 in 3 highway\n"
"{{{0, வலது , 1}, {1, வலது , 1}}, {{0, இடது  , 2}, {0, இடது  , 0}}, {{1, வலது "
", 2}, {1, இடது  , 0}}} # 39: squares and diagonals growth\n"
"{{{1, இடது  , 1}, {0, NOTURN, 0}}, {{0, வலது , 2}, {1, இடது  , 0}}, {{1, வலது"
" , 1}, {1, NOTURN, 0}}} # 40: streak at approx. an 8.1 in 1 gradient\n"
"{{{1, இடது  , 1}, {0, NOTURN, 2}}, {{0, வலது , 2}, {1, NOTURN, 1}}, {{1, வலது"
" , 1}, {1, NOTURN, 0}}} # 41: streak at approx. a 1.14 in 1 gradient\n"
"{{{1, இடது  , 1}, {1, இடது  , 1}}, {{1, NOTURN, 0}, {0, NOTURN, 2}}, {{0, "
"இடது  , 1}, {1, NOTURN, 1}}} # 42: maze-like growth\n"
"{{{1, இடது  , 2}, {0, வலது , 0}}, {{1, இடது  , 0}, {0, வலது , 0}}, {{0, இடது"
"  , 0}, {0, இடது  , 1}}} # 43: growth by cornices \n"
"{{{1, வலது , 0}, {0, வலது , 2}}, {{0, இடது  , 0}, {0, வலது , 0}}, {{0, "
"NOTURN, 1}, {1, இடது  , 0}}} # 44: makes a 1 in 7 highway\n"
"{{{1, வலது , 1}, {0, இடது  , 0}}, {{1, வலது , 2}, {0, NOTURN, 0}}, {{1, இடது"
"  , 0}, {0, இடது  , 0}}} # 45: makes a 4 in 1 highway\n"

#. type: Content of: <p>
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:114
msgid ""
"Langton's ants may not share the expressiveness power of the turmites, but "
"they remain fascinating too. You can experiment with them using the "
"initLangton() method, provided in your template, that allows to build a "
"Turmite transition table from a Langton's ant name. Tiny changes in the ant "
"may result huge changes. For example, \"RRL\" does not seem to lead to any "
"constructed pattern, even after a million steps, but \"RLL\" starts building "
"a very simple highway pattern after less than 100 steps!"
msgstr ""
"Langton's ants சி-வைகாசி not பங்கு the expressiveness விசை of the turmites, "
"but they remain fascinating too. You can experiment with them using the "
"initLangton() method, provided in your template, that allows பெறுநர் உருவாக்கு "
"a Turmite transition table இருந்து a Langton's ant name. Tiny changes in the "
"ant சி-வைகாசி result huge changes. க்கு example, \"RRL\" does not seem பெறுநர் "
"ஈயம் பெறுநர் any constructed pattern, இரட்டை after a million steps, but \"RLL\" "
"starts building a very simple highway pattern after less than 100 steps!"

#. type: Content of: <p>
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:121
msgid ""
"Quite a lot of Langton's ants build highways: RL, of course, but also "
"RLRLRLLRLR (about 2500 steps).  The chaotic behavior of ants before the "
"highway can be very short (as with RLL that only need 100 steps to converge) "
"or very long, as with LLLLLLRRLRRR which seems chaotic for more than 500,000 "
"steps before build the highway or even RRLLLRRRLRRR which needs 1170000 to "
"start converging. Some are narrow, and others are very large, such as "
"RRLRLLRLRR (200,000 steps). This ant is also notable since it is somehow "
"squarish even before the highway start where most others do not show "
"anything notable before their highway."
msgstr ""
"Quite a நிறைய of Langton's ants உருவாக்கு highways: RL, of course, but also "
"RLRLRLLRLR (about 2500 steps).  The chaotic behavior of ants before the "
"highway can be very குறுக்கு (as with RLL that only need 100 படிகள் பெறுநர் "
"converge) or very long, அச் with LLLLLLRRLRRR which seems chaotic க்கு more "
"than 500,000 படிகள் before உருவாக்கு the highway or இரட்டை RRLLLRRRLRRR which "
"needs 1170000 பெறுநர் தொடங்கு converging. Some அரே narrow, and others அரே very "
"large, such அச் RRLRLLRLRR (200,000 steps). This ant is also notable since it "
"is somehow squarish இரட்டை before the highway தொடங்கு where பெரும்பாலானவை "
"others do not காட்டு anything notable before their highway."

#. type: Content of: <p><p><p>
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:129
msgid ""
"Some ants fill solid sectors, such as RRLLLRLLLRRR (16,000 steps), "
"RRLLLRLLLRRR (30,000 steps), RRLLLRRRRRLR (125,000 steps) or RRLRLLRRRRRR "
"(20,000 steps). Some even fill the whole space (RRLRR after 3000 "
"steps). Some of my personal favorite ones are the ones where the ant seem to "
"be bouncing within a box that gets bigger on each bump, such as LRRRRRLLR "
"(30,000 steps). LRRRRLLLRRR is even more impressing since the bounces within "
"the box are regular and since it converges more rapidly to its stable "
"behavior (15,000 steps are enough)."
msgstr ""
"Some ants fill solid sectors, such அச் RRLLLRLLLRRR (16,000 steps), "
"RRLLLRLLLRRR (30,000 steps), RRLLLRRRRRLR (125,000 steps) or RRLRLLRRRRRR ("
"20,000 steps). Some இரட்டை fill the whole இடைவெளி (RRLRR after 3000 steps). "
"Some of my personal favorite ones அரே the ones where the ant seem பெறுநர் be "
"bouncing within a box that gets bigger on each bump, such அச் LRRRRRLLR ("
"30,000 steps). LRRRRLLLRRR is இரட்டை more impressing since the bounces within "
"the box அரே regular and since it converges more rapidly பெறுநர் its stable "
"behavior (15,000 படிகள் அரே enough)."

#. type: Content of: <p><p><p>
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:136
msgid ""
"Finally, some ants are just build artistic patterns. You should check this "
"video for some beautiful ones: "
"http://www.youtube.com/watch?v=1X-gtr4pEBU. If you want to convert them into "
"your code, you have to shift them by one: For example, the one depicted at "
"3:42 is not RRLRLRLLRL, but RLRLRLLRLR (the first visible move should be "
"read as last one)."
msgstr ""
"Finally, some ants அரே just உருவாக்கு artistic patterns. You should சரிபார் "
"this ஒளிதோற்றம் க்கு some beautiful ones: http://www.youtube.com/watch?v=1X-"
"gtr4pEBU. If you want பெறுநர் convert them into your code, you have பெறுநர் "
"உயர்த்து them by one: க்கு example, the one depicted at 3:42 is not RRLRLRLLRL, "
"but RLRLRLLRLR (the first visible move should be read அச் last one)."

#. type: Content of: <p><p><p>
#: src/lessons/turmites/turmitecreator/TurmiteCreator.html:141
msgid ""
"As you can see by exploring the above set of turmites, they are usually not "
"as colorful as the ants, but this may be because very few colors suffice to "
"exhibit complex behaviors. For example, there is a specific class of "
"turmites called <i>busy beavers</i> which are turmites that write a lot of "
"things before stopping (busy beavers are usually classical turing machines, "
"but the idea fits perfectly to turmites too). There is a sort of "
"international competition where people strive to find the turmite that "
"covers the biggest area before stopping. The web page is here: "
"http://code.google.com/p/ruletablerepository/wiki/TwoDimensionalTuringMachines"
msgstr ""
"அச் you can see by exploring the above கணம் of turmites, they அரே usually not "
"அச் colorful அச் the ants, but this சி-வைகாசி be because very few colors "
"suffice பெறுநர் exhibit அணைவு behaviors. க்கு example, there is a specific "
"வகுப்பு of turmites called <i>busy beavers</i> which அரே turmites that write "
"a நிறைய of things before stopping (busy beavers அரே usually classical turing "
"machines, but the idea fits perfectly பெறுநர் turmites too). There is a "
"வரிசைப்படுத்து of international competition where people strive பெறுநர் கண்டுபிடி"
" the turmite that மறையம் the biggest area before stopping. The விரலிடைத் தோல் "
"page is here: http://code.google.com/p/ruletablerepository/wiki/"
"TwoDimensionalTuringMachines"

#. type: Content of: <h1>
#: src/lessons/turmites/universe/TurmiteWorld.html:2
msgid "Turmite universe"
msgstr "Turmite அண்டம்"

#. type: Content of: <p>
#: src/lessons/turmites/universe/TurmiteWorld.html:4
msgid ""
"This universe is very similar to the buggle one, but you will probably not "
"use all buggles methods.  So, this page only recap the buggle methods that "
"you will use."
msgstr ""
"This அண்டம் is very similar பெறுநர் the buggle one, but you will probably not "
"use அனைத்தும் buggles methods.  So, this page only recap the buggle முறைகள் "
"that you will use."

#. type: Content of: <table><tr><td>
#: src/lessons/turmites/universe/TurmiteWorld.html:12
msgid ""
"[!java|c]void [/!][!c]stepForward()[/!][!java|python|scala]forward()[/!] or "
"[!java|c]void [/!]forward([!java|c]int [/!]steps[!scala]:Int[/!])"
msgstr ""
"[!java|c]void [/!][!c]stepForward()[/!][!java|python|scala]forward()[/!] or "
"[!java|c]void [/!]forward([!java|c]int [/!]steps[!scala]:Int[/!])"

#. type: Content of: <table><tr><td>
#: src/lessons/turmites/universe/TurmiteWorld.html:13
msgid ""
"[!java|c]void [/!][!c]stepBackward()[/!][!java|python|scala]backward()[/!] "
"or [!java|c]void [/!]backward([!java|c]int [/!]steps[!scala]:Int[/!])"
msgstr ""
"[!java|c]void [/!][!c]stepBackward()[/!][!java|python|scala]backward()[/!] "
"or [!java|c]void [/!]backward([!java|c]int [/!]steps[!scala]:Int[/!])"

#. type: Content of: <h1>
#: src/plm/universe/sort/SortingWorld.html:2
msgid "Sorting World"
msgstr "Sorting World"

#. type: Content of: outside any tag (error?)
#: src/plm/universe/sort/SortingWorld.html:3
msgid ""
"This world provides tools to experiment with the sorting algorithms. It can "
"be used in two different ways: the first one is naturally to write the "
"required sorting algorithms. But it is also possible to simply use the demo "
"mode of each exercise to observe the behavior of sorting algorithms. It "
"helps understanding the differences between each of them."
msgstr ""
"This world provides கருவிகள் பெறுநர் experiment with the sorting algorithms. "
"It can be used in two different ways: the first one is naturally பெறுநர் "
"write the required sorting algorithms. But it is also possible பெறுநர் simply "
"use the demo பயன்முறை of each exercise பெறுநர் observe the behavior of sorting "
"algorithms. It helps understanding the differences between each of them."

#. type: Content of: <h2>
#: src/plm/universe/sort/SortingWorld.html:9
msgid "Methods available to sorting algorithms"
msgstr "முறைகள் available பெறுநர் sorting algorithms"

#. type: Content of: <table><tr><td>
#: src/plm/universe/sort/SortingWorld.html:11
msgid "<b>Method</b>"
msgstr "<b>Method</b>"

#. type: Content of: <table><tr><td>
#: src/plm/universe/sort/SortingWorld.html:11
msgid "<b>Action</b>"
msgstr "<b>Action</b>"

#. type: Content of: <table><tr><td>
#: src/plm/universe/sort/SortingWorld.html:11
msgid "<b>Cost</b>"
msgstr "<b>Cost</b>"

#. type: Content of: <table><tr><td>
#: src/plm/universe/sort/SortingWorld.html:12
msgid "[!java|c]int [/!]getValueCount() [!scala]:Int[/!]"
msgstr "[!java|c]int [/!]getValueCount() [!scala]:Int[/!]"

#. type: Content of: <table><tr><td>
#: src/plm/universe/sort/SortingWorld.html:13
msgid "Returns the amount of values in the array"
msgstr "Returns the amount of values in the array"

#. type: Content of: <table><tr><td>
#: src/plm/universe/sort/SortingWorld.html:13
#: src/plm/universe/sort/SortingWorld.html:31
msgid "none"
msgstr "எதுவுமில்லை"

#. type: Content of: <table><tr><td>
#: src/plm/universe/sort/SortingWorld.html:15
msgid ""
"[!java]boolean [/!][!c]int [/!]isSmaller([!java|c]int [/!]i[!scala]:Int[/!], "
"[!java|c]int [/!]j[!scala]:Int[/!]) [!scala]:Boolean[/!]"
msgstr ""
"[!java]boolean [/!][!c]int [/!]isSmaller([!java|c]int [/!]i[!scala]:Int[/!], "
"[!java|c]int [/!]j[!scala]:Int[/!]) [!scala]:Boolean[/!]"

#. type: Content of: <table><tr><td>
#: src/plm/universe/sort/SortingWorld.html:16
msgid ""
"Returns true if the content of cell i is strictly smaller than the one of "
"cell j"
msgstr ""
"Returns true if the content of கலன் i is strictly smaller than the one of கலன் "
"j"

#. type: Content of: <table><tr><td>
#: src/plm/universe/sort/SortingWorld.html:16
msgid "two reads"
msgstr "two reads"

#. type: Content of: <table><tr><td>
#: src/plm/universe/sort/SortingWorld.html:17
msgid ""
"[!java]boolean [/!][!c]int [/!]isSmallerThan([!java|c]int "
"[/!]i[!scala]:Int[/!], [!java|c]int [/!]value[!scala]:Int[/!])[!scala] "
":Boolean[/!]"
msgstr ""
"[!java]boolean [/!][!c]int [/!]isSmallerThan([!java|c]int [/!]i[!scala]:Int[/"
"!], [!java|c]int [/!]value[!scala]:Int[/!])[!scala] :Boolean[/!]"

#. type: Content of: <table><tr><td>
#: src/plm/universe/sort/SortingWorld.html:18
msgid ""
"Returns true if the content of cell i is strictly smaller than the "
"<code>value</code>"
msgstr ""
"Returns true if the content of கலன் i is strictly smaller than the "
"<code>value</code>"

#. type: Content of: <table><tr><td>
#: src/plm/universe/sort/SortingWorld.html:18
#: src/plm/universe/sort/SortingWorld.html:26
msgid "one read"
msgstr "one read"

#. type: Content of: <table><tr><td>
#: src/plm/universe/sort/SortingWorld.html:20
msgid ""
"[!java|c]void [/!]swap([!java|c]int [/!]i[!scala]:Int[/!], [!java|c]int "
"[/!]j[!scala]:Int[/!])"
msgstr ""
"[!java|c]void [/!]swap([!java|c]int [/!]i[!scala]:Int[/!], [!java|c]int [/!]j"
"[!scala]:Int[/!])"

#. type: Content of: <table><tr><td>
#: src/plm/universe/sort/SortingWorld.html:21
msgid "Swaps the content of cell i and the one of cell j"
msgstr "Swaps the content of கலன் i and the one of கலன் j"

#. type: Content of: <table><tr><td>
#: src/plm/universe/sort/SortingWorld.html:21
msgid "two reads, two writes"
msgstr "two reads, two writes"

#. type: Content of: <table><tr><td>
#: src/plm/universe/sort/SortingWorld.html:22
msgid ""
"[!java|c]void [/!]copy([!java|c]int [/!]from[!scala]:Int[/!], [!java|c]int "
"[/!]to[!scala]:Int[/!])"
msgstr ""
"[!java|c]void [/!]copy([!java|c]int [/!]from[!scala]:Int[/!], [!java|c]int "
"[/!]to[!scala]:Int[/!])"

#. type: Content of: <table><tr><td>
#: src/plm/universe/sort/SortingWorld.html:23
msgid "Copy the content of cell 'from' into the cell 'to'"
msgstr "நகலெடு the content of கலன் 'from' into the கலன் 'to'"

#. type: Content of: <table><tr><td>
#: src/plm/universe/sort/SortingWorld.html:23
msgid "one read, one write"
msgstr "one read, one write"

#. type: Content of: <table><tr><td>
#: src/plm/universe/sort/SortingWorld.html:25
msgid "[!java|c]int [/!]getValue([!java|c]int [/!]idx[!scala]:Int[/!])"
msgstr "[!java|c]int [/!]getValue([!java|c]int [/!]idx[!scala]:Int[/!])"

#. type: Content of: <table><tr><td>
#: src/plm/universe/sort/SortingWorld.html:26
msgid "Returns the value of cell idx"
msgstr "Returns the மதிப்பு of கலன் idx"

#. type: Content of: <table><tr><td>
#: src/plm/universe/sort/SortingWorld.html:27
msgid ""
"[!java|c]void [/!]setValue([!java|c]int [/!]idx[!scala]:Int[/!], "
"[!java|c]int [/!]value[!scala]:Int[/!])"
msgstr ""
"[!java|c]void [/!]setValue([!java|c]int [/!]idx[!scala]:Int[/!], [!java|c]"
"int [/!]value[!scala]:Int[/!])"

#. type: Content of: <table><tr><td>
#: src/plm/universe/sort/SortingWorld.html:28
msgid "Sets cell 'idx' to the <code>value</code>"
msgstr "Sets கலன் 'idx' பெறுநர் the <code>value</code>"

#. type: Content of: <table><tr><td>
#: src/plm/universe/sort/SortingWorld.html:28
msgid "one write"
msgstr "one write"

#. type: Content of: <table><tr><td>
#: src/plm/universe/sort/SortingWorld.html:30
msgid "[!java]boolean [/!][!c]int [/!]isSelected() [!scala]:Boolean[/!]"
msgstr "[!java]boolean [/!][!c]int [/!]isSelected() [!scala]:Boolean[/!]"

#. type: Content of: outside any tag (error?)
#: src/plm/universe/sort/SortingWorld.html:31
#: src/lessons/sort/pancake/universe/PancakeWorld.html:22
#: src/lessons/recursion/hanoi/universe/HanoiWorld.html:28
msgid "Returns whether the current world is selected in the graphical interface."
msgstr ""
"Returns whether the மின்னோட்ட்ம், ஓட்டம் world is தேர்ந்தெடுக்கப்பட்டது in the "
"graphical interface."

#. type: Content of: <p>
#: src/plm/universe/sort/SortingWorld.html:34
msgid "As always, the indices of cells range from 0 to"
msgstr "அச் always, the indices of cells வீச்சு இருந்து 0 பெறுநர்"

#. type: Content of: <p><pre>
#: src/plm/universe/sort/SortingWorld.html:34
#, no-wrap
msgid "getValueCount()-1"
msgstr "getValueCount()-1"

#. type: Content of: <p>
#: src/plm/universe/sort/SortingWorld.html:34
msgid ". Accessing a cell out of this range raises an error."
msgstr ". Accessing a கலன் out of this வீச்சு raises an error."

#. type: Content of: <h2>
#: src/plm/universe/sort/SortingWorld.html:36
msgid "History view"
msgstr "வரலாறு பார்வை"

#. type: Content of: <p>
#: src/plm/universe/sort/SortingWorld.html:37
msgid ""
"It is not enough to sort the array to pass the exercises. Your solution must "
"strictly follow the expected behavior of each exercise. This is enforced by "
"checking that your algorithm needs the same amount of read and write "
"operations to sort the array. When they don't match, understanding the "
"difference between your code and the expected solution can reveal very "
"difficult."
msgstr ""
"It is not enough பெறுநர் வரிசைப்படுத்து the array பெறுநர் கணவாய் the exercises. "
"Your நீர்மக்கூழ் must strictly follow the expected behavior of each exercise. "
"This is enforced by checking that your படிமுறை needs the same amount of read "
"and write operations பெறுநர் வரிசைப்படுத்து the array. When they don't match, "
"understanding the வேறுபாடு between your குறியீடு and the expected நீர்மக்கூழ் can "
"reveal very difficult."

#. type: Content of: <p>
#: src/plm/universe/sort/SortingWorld.html:44
msgid ""
"To help in this process, it is possible to graphically explore the history "
"of your sorting algorithm. Switch to the Objective view and use the "
"contextual menu (right click) to switch from the view of the current state "
"to the view of its history."
msgstr ""
"பெறுநர் உதவி in this process, it is possible பெறுநர் graphically explore the "
"வரலாறு of your sorting algorithm. ஆளி, நிலைமாறி பெறுநர் the Objective பார்வை "
"and use the contextual பட்டியல் (right click) பெறுநர் ஆளி, நிலைமாறி இருந்து the "
"பார்வை of the மின்னோட்ட்ம், ஓட்டம் state பெறுநர் the பார்வை of its history."

#. type: Content of: <p>
#: src/plm/universe/sort/SortingWorld.html:49
#: src/lessons/sort/basic/bubble/AlgBubbleSort1.html:19
msgid ""
"The history view is a bit hairly at the first glance, but actually rather "
"simple: The time flows from left to right on this graph, and each row is a "
"cell of your array. The curved lines that go navigate between rows represent "
"a given data value. When two lines cross, this means that two values were "
"swapped at this time stamp; A line fork represent a value copy; When a value "
"is magenta and followed by an interrogation mark (?), it was read using "
"getValue(); If the value is red and followed with an exclamation point (!), "
"it was written using setValue()."
msgstr ""
"The வரலாறு பார்வை is a துணுக்கு hairly at the first glance, but actually "
"rather simple: The time flows இருந்து இடது பெறுநர் வலது on this graph, and "
"each நிரை is a கலன் of your array. The curved வரிகள் that go navigate between "
"rows represent a given தகவல்கள் value. When two வரிகள் cross, this means that "
"two values were swapped at this time stamp; A வரி fork represent a மதிப்பு "
"copy; When a மதிப்பு is மெசந்தா and followed by an interrogation mark (?), it "
"was read using getValue(); If the மதிப்பு is சிவப்பு and followed with an "
"exclamation புள்ளியம் (!), it was written using setValue()."

#. type: Content of: <p>
#: src/plm/universe/sort/SortingWorld.html:58
msgid ""
"This view, inspired from Aldo Cortesi, reveals very helpful understand the "
"inner behavior of sorting algorithms."
msgstr ""
"This view, inspired இருந்து Aldo Cortesi, reveals very helpful understand the "
"inner behavior of sorting algorithms."

#. type: Content of: <h3>
#: src/lessons/sort/basic/Main.html:2 src/lessons/sort/basic/short_desc.html:2
msgid "Sorting Algorithms"
msgstr "Sorting Algorithms"

#. type: Content of: outside any tag (error?)
#: src/lessons/sort/basic/Main.html:4
msgid ""
"This lesson allows to experiment with some classical sorting algorithms (and "
"some less common variant of them). The goal is two fold: you can first "
"better understand the idea of these algorithms by writing them yourself. But "
"even if you don't code the algorithms, you can use the demo mode to organize "
"\"races\" between these algorithms to experiment in practice what the "
"different asymptotical complexity mean."
msgstr ""
"This பாடம் allows பெறுநர் experiment with some classical sorting algorithms ("
"and some less common variant of them). The goal is two fold: you can first "
"better understand the idea of these algorithms by writing them yourself. But "
"இரட்டை if you don't குறியீடு the algorithms, you can use the demo பயன்முறை "
"பெறுநர் organize \"races\" between these algorithms பெறுநர் experiment in "
"practice what the different asymptotical complexity mean."

#. type: Content of: <p>
#: src/lessons/sort/basic/Main.html:11
msgid ""
"More exercises are planned for the future, on recursive sorting algorithms "
"(such as QuickSort and MergeSort) or using other microworlds to apply these "
"algorithms to other contexts."
msgstr ""
"More exercises அரே planned க்கு the future, on recursive sorting algorithms ("
"such அச் QuickSort and MergeSort) or using மற்றொன்று microworlds பெறுநர் இடு "
"these algorithms பெறுநர் மற்றொன்று contexts."

#. type: Content of: <ul><li>
#: src/lessons/sort/basic/Main.html:19
msgid ""
"Other graphical representations could be proposed, such as the ones "
"presented at <a href=\"http://sorting.at/\">http://sorting.at/</a>."
msgstr ""
"மற்றொன்று graphical representations could be proposed, such அச் the ones "
"presented at <a href=\"http://sorting.at/\">http://sorting.at/</a>."

#. type: Content of: <p>
#: src/lessons/sort/basic/short_desc.html:4
msgid ""
"This lesson allows to experiment with some classical sorting algorithms (and "
"some less common variant of them :)"
msgstr ""
"This பாடம் allows பெறுநர் experiment with some classical sorting algorithms ("
"and some less common variant of them :)"

#. type: Content of: <p>
#: src/lessons/sort/basic/short_desc.html:7
#: src/lessons/recursion/lego/short_desc.html:6
#: src/lessons/maze/short_desc.html:6
msgid "You are supposed to master the bases of programming to take this lesson."
msgstr ""
"You அரே supposed பெறுநர் master the bases of programming பெறுநர் take this "
"lesson."

#. type: Content of: <h1>
#: src/lessons/sort/basic/bubble/AlgBubbleSort1.html:2
msgid "BubbleSort"
msgstr "BubbleSort"

#. type: Content of: <p>
#: src/lessons/sort/basic/bubble/AlgBubbleSort1.html:4
msgid ""
"Welcome to the sorting universe. It allows you to experiment with the "
"existing sorting algorithms. The list of buildins that you can use in your "
"algorithms is available in the world reference documentation "
"(\"Help\"-&gt;\"About this world\")."
msgstr ""
"Welcome பெறுநர் the sorting universe. It allows you பெறுநர் experiment with "
"the existing sorting algorithms. The பட்டியல் of buildins that you can use in "
"your algorithms is available in the world குறிப்பு ஆவணப்படுத்துதல் (\"Help\"-&gt;"
"\"About this world\")."

#. type: Content of: <p>
#: src/lessons/sort/basic/bubble/AlgBubbleSort1.html:8
msgid ""
"It is not enough to sort the array to pass the exercises. Your solution must "
"strictly follow the expected behavior of each exercise. This is enforced by "
"checking that your algorithm needs the same amount of read and write "
"operations to sort the array."
msgstr ""
"It is not enough பெறுநர் வரிசைப்படுத்து the array பெறுநர் கணவாய் the exercises. "
"Your நீர்மக்கூழ் must strictly follow the expected behavior of each exercise. "
"This is enforced by checking that your படிமுறை needs the same amount of read "
"and write operations பெறுநர் வரிசைப்படுத்து the array."

#. type: Content of: <p>
#: src/lessons/sort/basic/bubble/AlgBubbleSort1.html:13
msgid ""
"When your algorithm diverges from the expectation, understanding the "
"difference between your code and the expected solution can reveal very "
"difficult. To help in this process, it is posible to graphically explore the "
"history of your sorting algorithm. Switch to the Objective view and use the "
"contextual menu (right click)  to switch from the the view of the current "
"state to the view of its history."
msgstr ""
"When your படிமுறை diverges இருந்து the expectation, understanding the வேறுபாடு"
" between your குறியீடு and the expected நீர்மக்கூழ் can reveal very difficult. "
"பெறுநர் உதவி in this process, it is posible பெறுநர் graphically explore the "
"வரலாறு of your sorting algorithm. ஆளி, நிலைமாறி பெறுநர் the Objective பார்வை "
"and use the contextual பட்டியல் (right click)  பெறுநர் ஆளி, நிலைமாறி இருந்து the "
"the பார்வை of the மின்னோட்ட்ம், ஓட்டம் state பெறுநர் the பார்வை of its history."

#. type: Content of: <h2>
#: src/lessons/sort/basic/bubble/AlgBubbleSort1.html:28
msgid "First attempt at BubbleSort"
msgstr "First attempt at BubbleSort"

#. type: Content of: <p>
#: src/lessons/sort/basic/bubble/AlgBubbleSort1.html:30
msgid ""
"This first sorting algorithm is the most simple one: Bubble sort consists in "
"progressively moving up the smaller elements of the array, as if they were "
"air bubbles moving up to the surface of a liquid. The algorithm traverse the "
"array, and compare any pair of adjacent elements. If two adjacent elements "
"are wrongly sorted, they are swapped. Once the array was completely "
"traversed, the operation starts again from the beginning. When no elements "
"were sorted after a full traversal, it means that the array is completely "
"sorted: the algorithm can stop.  Bubble sort is studied because of its "
"simplicity, but it is almost never used in practice because of its bad "
"performance (O(n^2) on average)."
msgstr ""
"This first sorting படிமுறை is the பெரும்பாலானவை simple one: Bubble "
"வரிசைப்படுத்து consists in progressively moving மேலே the smaller elements of "
"the array, அச் if they were காற்று bubbles moving மேலே பெறுநர் the surface of a "
"liquid. The படிமுறை traverse the array, and compare any பேரிக்காய் of adjacent "
"elements. If two adjacent elements அரே wrongly sorted, they அரே swapped. "
"Once the array was completely traversed, the செயல்பாடு starts again இருந்து "
"the beginning. When இல்லை elements were sorted after a full traversal, it "
"means that the array is completely sorted: the படிமுறை can stop.  Bubble "
"வரிசைப்படுத்து is studied because of its simplicity, but it is almost ஒருபோதும் "
"used in practice because of its bad performance (O(n^2) on average)."

#. type: Attribute 'alt' of: <div>
#: src/lessons/sort/basic/bubble/AlgBubbleSort1.html:40
#: src/lessons/sort/basic/bubble/AlgBubbleSort2.html:12
msgid "Show Tip (Pseudo-code)"
msgstr "காட்டு Tip (Pseudo-code)"

#. type: Content of: <div><p>
#: src/lessons/sort/basic/bubble/AlgBubbleSort1.html:41
msgid "The pseudo-code of the BubbleSort algorithm is the following:"
msgstr "The pseudo-code of the BubbleSort படிமுறை is the following:"

#. type: Content of: <div><pre>
#: src/lessons/sort/basic/bubble/AlgBubbleSort1.html:42
#, no-wrap
msgid ""
"do: \n"
"        For each i in [0,len-2]\n"
"          If cells i and i+1 must be swapped, do it\n"
"while we swapped something during last traversal\n"
msgstr ""
"do: \n"
"        க்கு each i in [0,len-2]\n"
"          If cells i and i+1 must be swapped, do it\n"
"while we swapped something during last traversal\n"

#. type: Content of: <h1>
#: src/lessons/sort/basic/bubble/AlgBubbleSort2.html:2
msgid "BubbleSort (take 2)"
msgstr "BubbleSort (take 2)"

#. type: Content of: <p>
#: src/lessons/sort/basic/bubble/AlgBubbleSort2.html:4
msgid ""
"If you look carefully at the behavior of BubbleSort, a first easy "
"optimization appears: after one traversal, the last element of the array "
"must be the biggest of all since the traversal moved it up like a bubble to "
"its position. More generally, after N traversal, we know that the N last "
"elements of the array are already sorted. It is thus not necessary to "
"compare them again during the subsequent traversals. For now, we will have "
"as many traversal as there is in the array."
msgstr ""
"If you look carefully at the behavior of BubbleSort, a first easy உகப்பாக்கம் "
"appears: after one traversal, the last தனிமம் of the array must be the "
"biggest of அனைத்தும் since the traversal moved it மேலே like a bubble பெறுநர் "
"its position. More generally, after N traversal, we know that the N last "
"elements of the array அரே already sorted. It is thus not necessary பெறுநர் "
"compare them again during the subsequent traversals. க்கு now, we will have அச்"
" many traversal அச் there is in the array."

#. type: Content of: <div><p>
#: src/lessons/sort/basic/bubble/AlgBubbleSort2.html:13
msgid "The pseudo-code of the BubbleSort2 algorithm is the following:"
msgstr "The pseudo-code of the BubbleSort2 படிமுறை is the following:"

#. type: Content of: <div><pre>
#: src/lessons/sort/basic/bubble/AlgBubbleSort2.html:14
#, no-wrap
msgid ""
"For all i in [len-2,0] (traversing from biggest to smallest)\n"
"       For all j in [0, i]\n"
"          If cells j and j+1 must be swapped, do it\n"
msgstr ""
"க்கு அனைத்தும் i in [len-2,0] (traversing இருந்து biggest பெறுநர் smallest)\n"
"       க்கு அனைத்தும் j in [0, i]\n"
"          If cells j and j+1 must be swapped, do it\n"

#. type: Content of: <p>
#: src/lessons/sort/basic/bubble/AlgBubbleSort2.html:20
msgid ""
"When we run this algorithm, it is quite disappointing to see that it runs "
"approximately at the same speed than the basic version of BubbleSort. This "
"is a graphical effect only since only value changes are graphically "
"represented. Since this variation avoids some useless comparisons, it does "
"exactly the same amount of swaps that the basic version. It is thus quite "
"logical that the graphical interface draws this version at the same pace "
"than the base version. But the statistics on the amount of reads show that "
"we saved about the fourth of the amount of reads, which is not bad."
msgstr ""
"When we ஓடு this algorithm, it is quite disappointing பெறுநர் see that it "
"runs approximately at the same விரைவு than the அடிப்படை version of "
"BubbleSort. This is a graphical விளைவு only since only மதிப்பு changes அரே "
"graphically represented. Since this variation avoids some useless "
"comparisons, it does exactly the same amount of swaps that the அடிப்படை "
"version. It is thus quite logical that the graphical இடைமுகம் draws this "
"version at the same pace than the காரம் version. But the statistics on the "
"amount of reads காட்டு that we saved பற்றி the fourth of the amount of reads, "
"which is not bad."

#. type: Content of: <p>
#: src/lessons/sort/basic/bubble/AlgBubbleSort2.html:29
msgid ""
"From the asymptotic complexity point of view, there is absolutely no "
"difference: this variation is still in O(n^2) on average (our gain is only "
"on the constant term, ignored when computing the asymptotic complexity)."
msgstr ""
"இருந்து the asymptotic complexity புள்ளியம் of view, there is absolutely இல்லை "
"difference: this variation is still in O(n^2) on average (our பெருக்கம் is "
"only on the மாறா, மாறிலி term, ignored when computing the asymptotic "
"complexity)."

#. type: Content of: <h1>
#: src/lessons/sort/basic/bubble/AlgBubbleSort3.html:2
msgid "BubbleSort (take 3)"
msgstr "BubbleSort (take 3)"

#. type: Content of: <p>
#: src/lessons/sort/basic/bubble/AlgBubbleSort3.html:4
msgid ""
"Let's now reintroduce the little optimization we removed at previous step: "
"if a traversal does not swap any element, it means that the array is already "
"sorted. In that case, we want to stop the whole sorting process."
msgstr ""
"Let's now reintroduce the little உகப்பாக்கம் we removed at previous step: if a "
"traversal does not swap any element, it means that the array is already "
"sorted. In that case, we want பெறுநர் நிறுத்து the whole sorting process."

#. type: Content of: <p>
#: src/lessons/sort/basic/bubble/AlgBubbleSort3.html:9
msgid ""
"[!java|python|c]For that, simply use the <code>break</code> keyword, which "
"breaks the current loop.  Beware, if you have several nested loops, this "
"will apply to the internal one.[/!] [!scala]For that, simply quit the "
"current function by calling <code>return</code> with no associated "
"value.[/!]"
msgstr ""
"[!java|python|c]For that, simply use the <code>break</code> keyword, which "
"breaks the மின்னோட்ட்ம், ஓட்டம் loop.  Beware, if you have several nested loops, "
"this will இடு பெறுநர் the internal one.[/!] [!scala]For that, simply வெளியேறு "
"the மின்னோட்ட்ம், ஓட்டம் சார்பு by calling <code>return</code> with இல்லை associated "
"value.[/!]"

#. type: Attribute 'alt' of: <div>
#: src/lessons/sort/basic/bubble/AlgBubbleSort3.html:14
msgid "If you want, this tip shows the pseudo-code."
msgstr "If you want, this tip shows the pseudo-code."

#. type: Content of: <div><pre>
#: src/lessons/sort/basic/bubble/AlgBubbleSort3.html:16
#, no-wrap
msgid ""
"For all i in [len-2,0] (traversing from biggest to smallest)\n"
"       For all j in [0, i]\n"
"          If cells j and j+1 must be swapped, do it\n"
"       If traversal on j did not swap anything, break the for loop\n"
msgstr ""
"க்கு அனைத்தும் i in [len-2,0] (traversing இருந்து biggest பெறுநர் smallest)\n"
"       க்கு அனைத்தும் j in [0, i]\n"
"          If cells j and j+1 must be swapped, do it\n"
"       If traversal on j did not swap anything, இடைவேளை the க்கு loop\n"

#. type: Content of: <p>
#: src/lessons/sort/basic/bubble/AlgBubbleSort3.html:23
msgid ""
"This optimization is even more disappointing: it only provide a gain of a "
"few percents on the amount of reads over BubbleSort2."
msgstr ""
"This உகப்பாக்கம் is இரட்டை more disappointing: it only provide a பெருக்கம் of a "
"few விழுக்காடுகள் on the amount of reads வீச்சலகு BubbleSort2."

#. type: Content of: <h1>
#: src/lessons/sort/basic/cocktail/AlgCocktailSort1.html:2
msgid "CocktailSort"
msgstr "CocktailSort"

#. type: Content of: <p>
#: src/lessons/sort/basic/cocktail/AlgCocktailSort1.html:4
msgid ""
"To improve further the BubbleSort algorithm, we need to look closer its "
"behavior. One can notice that big elements are moved very quickly in "
"position while small ones move very slowly to their destination. They are "
"thus traditionally referred to as \"rabbits\" and \"turtles\" respectively "
"for big fast values and small slow ones."
msgstr ""
"பெறுநர் improve further the BubbleSort algorithm, we need பெறுநர் look closer "
"its behavior. One can notice that big elements அரே moved very quickly in "
"position while small ones move very slowly பெறுநர் their destination. They அரே"
" thus traditionally referred பெறுநர் அச் \"rabbits\" and \"turtles\" "
"respectively க்கு big fast values and small slow ones."

#. type: Content of: <p>
#: src/lessons/sort/basic/cocktail/AlgCocktailSort1.html:10
msgid ""
"To help the turtles moving faster, the cocktail sort traverse alternatively "
"the array from right to left and from left to right. Here is the "
"pseudo-code:"
msgstr ""
"பெறுநர் உதவி the turtles moving faster, the cocktail வரிசைப்படுத்து traverse "
"alternatively the array இருந்து வலது பெறுநர் இடது and இருந்து இடது பெறுநர் "
"right. Here is the pseudo-code:"

#. type: Content of: <pre>
#: src/lessons/sort/basic/cocktail/AlgCocktailSort1.html:15
#, no-wrap
msgid ""
"Do\n"
"  For all i in [0,len-2], do:\n"
"    if i and i+1 must be swapped, do it\n"
"  For all i in [len-2,0] (downward), do:\n"
"    if i and i+1 must be swapped, do it\n"
"while at least one of the traversal swapped an element\n"
msgstr ""
"Do\n"
"  க்கு அனைத்தும் i in [0,len-2], do:\n"
"    if i and i+1 must be swapped, do it\n"
"  க்கு அனைத்தும் i in [len-2,0] (downward), do:\n"
"    if i and i+1 must be swapped, do it\n"
"while at least one of the traversal swapped an element\n"

#. type: Content of: <p>
#: src/lessons/sort/basic/cocktail/AlgCocktailSort1.html:23
msgid ""
"One can see that cocktail sort achieves exactly the same amount of swaps "
"than the bubble sort, but improves slightly on read amount. It is however "
"still worse than BubbleSort2 to that extend."
msgstr ""
"One can see that cocktail வரிசைப்படுத்து achieves exactly the same amount of "
"swaps than the bubble sort, but improves slightly on read amount. It is "
"however still worse than BubbleSort2 பெறுநர் that extend."

#. type: Content of: <h1>
#: src/lessons/sort/basic/cocktail/AlgCocktailSort2.html:2
msgid "CocktailSort (take 2)"
msgstr "CocktailSort (take 2)"

#. type: Content of: <p>
#: src/lessons/sort/basic/cocktail/AlgCocktailSort2.html:4
msgid ""
"We will now apply to CocktailSort the same optimization than BubbleSort2 did "
"to BubbleSort. We must remember the limits of the array part not being "
"sorted yet, and traverse it alternatively from left to right and from right "
"to left:"
msgstr ""
"We will now இடு பெறுநர் CocktailSort the same உகப்பாக்கம் than BubbleSort2 did "
"பெறுநர் BubbleSort. We must remember the limits of the array பகுதி not being "
"sorted yet, and traverse it alternatively இருந்து இடது பெறுநர் வலது and இருந்து "
"வலது பெறுநர் இடது:"

#. type: Content of: <pre>
#: src/lessons/sort/basic/cocktail/AlgCocktailSort2.html:9
#, no-wrap
msgid ""
"beg=0; end=len-2\n"
"do\n"
"  For all Pour i in [beg,end], do:\n"
"      If cells i and i+1 must be swapped, do it    \n"
"  end -= 1 (this means end = end - 1)\n"
"  For all Pour i in [beg,end] (downwards), do:\n"
"      If cells i and i+1 must be swapped, do it    \n"
"  beg += 1 (this means beg = beg + 1)\n"
"while at least one of the traversal swapped an element\n"
msgstr ""
"beg=0; end=len-2\n"
"do\n"
"  க்கு அனைத்தும் Pour i in [beg,end], do:\n"
"      If cells i and i+1 must be swapped, do it    \n"
"  end -= 1 (this means end = end - 1)\n"
"  க்கு அனைத்தும் Pour i in [beg,end] (downwards), do:\n"
"      If cells i and i+1 must be swapped, do it    \n"
"  beg += 1 (this means beg = beg + 1)\n"
"while at least one of the traversal swapped an element\n"

#. type: Content of: <h1>
#: src/lessons/sort/basic/cocktail/AlgCocktailSort3.html:2
msgid "CocktailSort (take 3)"
msgstr "CocktailSort (take 3)"

#. type: Content of: <p>
#: src/lessons/sort/basic/cocktail/AlgCocktailSort3.html:4
msgid ""
"Even if the asymptotic complexity of CocktailSort2 is the same than the one "
"of BubbleSort, it seem to perform better in practice. It is even possible to "
"improve a bit further by stopping it if the first traversal didn't found "
"anything to swap, without achieving the downwards traversal. Likewise, we "
"can stop if the upward traversal found something to swap, but not the "
"downwards one."
msgstr ""
"இரட்டை if the asymptotic complexity of CocktailSort2 is the same than the one "
"of BubbleSort, it seem பெறுநர் perform better in practice. It is இரட்டை "
"possible பெறுநர் improve a துணுக்கு further by stopping it if the first "
"traversal didn't found anything பெறுநர் swap, without achieving the downwards "
"traversal. Likewise, we can நிறுத்து if the upward traversal found something "
"பெறுநர் swap, but not the downwards one."

#. type: Content of: <h1>
#: src/lessons/sort/basic/insertion/AlgInsertionSort.html:2
msgid "InsertionSort"
msgstr "InsertionSort"

#. type: Content of: <p>
#: src/lessons/sort/basic/insertion/AlgInsertionSort.html:5
msgid ""
"This sorting algorithm is quite simple to understand and write, even if it "
"is not as efficient as possible. Its asymptotic complexity is in O(n²), but "
"it is more efficient in practice (linear in best case, ie when the array is "
"already sorted, and N2/4 on average)."
msgstr ""
"This sorting படிமுறை is quite simple பெறுநர் understand and write, இரட்டை if "
"it is not அச் efficient அச் possible. Its asymptotic complexity is in O(n²), "
"but it is more efficient in practice (linear in best case, ie when the array "
"is already sorted, and N2/4 on average)."

#. type: Content of: <p>
#: src/lessons/sort/basic/insertion/AlgInsertionSort.html:10
msgid ""
"The idea is to traverse all elements of the array, and to insert each of "
"them into its proper position in the already sorted part of the array. When "
"we look at an element x, the situation is the following: any elements to the "
"left of the array are already sorted, and we have to insert x at its "
"position in the array."
msgstr ""
"The idea is பெறுநர் traverse அனைத்தும் elements of the array, and பெறுநர் "
"செருகவும் each of them into its proper position in the already sorted பகுதி "
"of the array. When we look at an தனிமம் ஃச், the situation is the following: "
"any elements பெறுநர் the இடது of the array அரே already sorted, and we have "
"பெறுநர் செருகவும் ஃச் at its position in the array."

#. type: Content of: <p>
#: src/lessons/sort/basic/insertion/AlgInsertionSort.html:18
msgid "Once this is done, the situation is the following:"
msgstr "Once this is done, the situation is the following:"

#. type: Content of: <p>
#: src/lessons/sort/basic/insertion/AlgInsertionSort.html:22
msgid "The pseudo-code of this algorithm is thus the following:"
msgstr "The pseudo-code of this படிமுறை is thus the following:"

#. type: Content of: <pre>
#: src/lessons/sort/basic/insertion/AlgInsertionSort.html:23
#, no-wrap
msgid ""
"For each i in [1,len-1] # Cell 0 is already sorted when considered alone\n"
"  store the value of i in a variable v\n"
"  copy the cell i-1 into i if i-1 contains a value bigger than v\n"
"  copy the cell i-2 into i-1 if i-2 contains a value bigger than v\n"
"  copy the cell i-3 into i-2 if i-3 contains a value bigger than v\n"
"  copy the cell i-4 into i-3 if i-4 contains a value bigger than v\n"
"  ...\n"
"  copy v into the last cell copied above\n"
msgstr ""
"க்கு each i in [1,len-1] # கலன் 0 is already sorted when considered alone\n"
"  store the மதிப்பு of i in a variable v\n"
"  நகலெடு the கலன் i-1 into i if i-1 contains a மதிப்பு bigger than v\n"
"  நகலெடு the கலன் i-2 into i-1 if i-2 contains a மதிப்பு bigger than v\n"
"  நகலெடு the கலன் i-3 into i-2 if i-3 contains a மதிப்பு bigger than v\n"
"  நகலெடு the கலன் i-4 into i-3 if i-4 contains a மதிப்பு bigger than v\n"
"  ...\n"
"  நகலெடு v into the last கலன் copied above\n"

#. type: Content of: <p>
#: src/lessons/sort/basic/insertion/AlgInsertionSort.html:33
msgid ""
"Naturally, you should use a loop to write the big permutation within the "
"given loop. Writing it this way would be really ... counter-productive."
msgstr ""
"Naturally, you should use a loop பெறுநர் write the big வரிசைமாற்றம், வரிசைவகுதி "
"within the given loop. Writing it this way would be really ... counter-"
"productive."

#. type: Content of: <p>
#: src/lessons/sort/basic/insertion/AlgInsertionSort.html:36
msgid ""
"If you've always wondered what computer science researchers do nowadays, "
"here is part of the answer: They improve fundamental algorithms so that "
"others can write efficient programs."
msgstr ""
"If you've எப்போதும் wondered what கணிப்பொறி, கணிணி science researchers do "
"nowadays, here is பகுதி of the விடை: They improve fundamental algorithms so "
"that others can write efficient programs."

#. type: Content of: <h2>
#: src/lessons/sort/basic/insertion/AlgInsertionSort.html:40
msgid "Other variation of insertion sort"
msgstr "மற்றொன்று variation of insertion வரிசைப்படுத்து"

#. type: Content of: <p>
#: src/lessons/sort/basic/insertion/AlgInsertionSort.html:42
msgid ""
"TreeSort builds a binary search tree to sort them. It leads to a O(n log(n))  "
"on average, but O(n^2) in worst cases. We won't study this algorithm here "
"since understanding its behavior requires to know what a binary tree is, "
"what is beyond our present goals."
msgstr ""
"TreeSort builds a இருமம் தேடல் tree பெறுநர் வரிசைப்படுத்து them. It இழுதுகள் பெறுநர்"
" a O(n log(n))  on average, but O(n^2) in worst cases. We won't study this "
"படிமுறை here since understanding its behavior requires பெறுநர் know what a "
"இருமம் tree is, what is beyond our present goals."

#. type: Content of: <p>
#: src/lessons/sort/basic/insertion/AlgInsertionSort.html:47
msgid ""
"There is other variations over the insertion sort, such as PatienceSort "
"which builds piles of values and sort each pile afterward. This algorithm "
"presents a 0(n log(n)) timing worst case and a 0(n) space "
"complexity. LibrarySort (proposed in 2004) also trades a bit space in "
"exchange for time since it provide a time complexity of O(n log(n)) but "
"needs to store some more data."
msgstr ""
"There is மற்றொன்று variations வீச்சலகு the insertion sort, such அச் PatienceSort "
"which builds piles of values and வரிசைப்படுத்து each pile afterward. This "
"படிமுறை presents a 0(n log(n)) நேரவிவரம் worst case and a 0(n) இடைவெளி "
"complexity. LibrarySort (proposed in 2004) also trades a துணுக்கு இடைவெளி in "
"exchange க்கு time since it provide a time complexity of O(n log(n)) but "
"needs பெறுநர் store some more data."

#. type: Content of: <p>
#: src/lessons/sort/basic/insertion/AlgInsertionSort.html:54
msgid ""
"Wikipedia provides a detailled description of all these algorithms we cannot "
"present here because of time constraints."
msgstr ""
"Wikipedia provides a detailled விவரம் of அனைத்தும் these algorithms we cannot "
"present here because of time constraints."

#. type: Content of: <h2>
#: src/lessons/sort/basic/shell/AlgShellSort.html:2
msgid "ShellSort"
msgstr "ShellSort"

#. type: Content of: outside any tag (error?)
#: src/lessons/sort/basic/shell/AlgShellSort.html:4
msgid ""
"This algorithm is named after its author, Donald Shell, who published it in "
"1959. It can be seen as an application of the CombSort idea (let elements "
"having a long path to travel take shortcuts) to the insertion sort (CombSort "
"is a variation of BubbleSort). Instead of comparing adjacent values during "
"the insertion sort, it compares values separated by a bigger gap. The bigger "
"the gap, the faster the elements are moved to their final destination, but "
"also the less precise is this move. It is thus mandatory to apply the "
"algorithm with a serie of decreasing gaps. At the last step, when the gap is "
"one, InsertionSort is used, but onto an array which is almost already sorted "
"by previous steps."
msgstr ""
"This படிமுறை is named after its author, Donald Shell, who published it in "
"1959. It can be seen அச் an application of the CombSort idea (let elements "
"having a long பாதை பெறுநர் travel take shortcuts) பெறுநர் the insertion "
"வரிசைப்படுத்து (CombSort is a variation of BubbleSort). Instead of comparing "
"adjacent values during the insertion sort, it compares values separated by a "
"bigger gap. The bigger the gap, the faster the elements அரே moved பெறுநர் "
"their final destination, but also the less precise is this move. It is thus "
"mandatory பெறுநர் இடு the படிமுறை with a serie of decreasing gaps. At the "
"last step, when the gap is one, InsertionSort is used, but onto an array "
"which is almost already sorted by previous steps."

#. type: Content of: <p>
#: src/lessons/sort/basic/shell/AlgShellSort.html:15
msgid ""
"Donald Shell propose <code>len/2</code> as initial value of the gap, and "
"then to divide it by 2 at each step. The pseudo-code is thus the following:"
msgstr ""
"Donald ஓடு propose <code>len/2</code> அச் initial மதிப்பு of the gap, and then "
"பெறுநர் divide it by 2 at each step. The pseudo-code is thus the following:"

#. type: Content of: <p><pre>
#: src/lessons/sort/basic/shell/AlgShellSort.html:18
#, no-wrap
msgid ""
"gap=len/2\n"
"while gap>0:\n"
"  apply InsertionSort, comparing i-gap and i, then i-2gap and i-gap, then "
"i-3gap and i-2gap, etc.\n"
msgstr ""
"gap=len/2\n"
"while gap>0:\n"
"  இடு InsertionSort, comparing i-gap and i, then i-2gap and i-gap, then i-"
"3gap and i-2gap, etc.\n"

#. type: Content of: <p><p>
#: src/lessons/sort/basic/shell/AlgShellSort.html:23
msgid ""
"Just like in CombSort, the sequence of values taken by the gap is crucial "
"for Shell sort performance. In some rare pathological cases, the sequence we "
"used above can lead to a O(n^2) performance. Other sequences were proposed: "
"the Hibbard's increments of 2k − 1 lead to a complexity of O(n^(3/2)) in "
"worst cases. Pratt's increments 2^i3^j lead to a O(nlog(n)log(n) performance "
"in worst cases. The existance of a sequence leading to a O(n log(n)) was "
"precluded by Poonen, Plaxton, and Suel. Thanks to this performance, "
"ShellSort is a valid candidate for array of several hundred thousands when "
"correctly implemented."
msgstr ""
"Just like in CombSort, the வரிசை of values taken by the gap is crucial க்கு "
"ஓடு வரிசைப்படுத்து performance. In some rare pathological cases, the வரிசை we "
"used above can ஈயம் பெறுநர் a O(n^2) performance. மற்றொன்று வரிசைகள் were "
"proposed: the Hibbard's increments of 2k − 1 ஈயம் பெறுநர் a complexity of O(n^("
"3/2)) in worst cases. Pratt's increments 2^i3^j ஈயம் பெறுநர் a O(nlog(n)log(n) "
"performance in worst cases. The existance of a வரிசை leading பெறுநர் a O(n "
"log(n)) was precluded by Poonen, Plaxton, and Suel. Thanks பெறுநர் this "
"performance, ShellSort is a valid candidate க்கு array of several hundred "
"thousands when correctly implemented."

#. type: Content of: <p><p>
#: src/lessons/sort/basic/shell/AlgShellSort.html:33
msgid ""
"In our case, the array are ways too small to benefit of these "
"optimizations. If you ever need to do so, take as initial gap the biggest "
"value of the targeted serie still smaller than the array size, and then use "
"decreasing values of the serie."
msgstr ""
"In our case, the array அரே ways too small பெறுநர் benefit of these "
"optimizations. If you ever need பெறுநர் do so, take அச் initial gap the "
"biggest மதிப்பு of the targeted serie still smaller than the array size, and "
"then use decreasing values of the serie."

#. type: Content of: <p><p>
#: src/lessons/sort/basic/shell/AlgShellSort.html:38
msgid ""
"Interestingly enough, determining the best gap sequence for shell sort turns "
"into a research issue of our century in computer science. For example, an "
"article of 2001 introduces the following sequence, which seems to be optimal "
"in practice for arrays of size up to 10^5: {1, 4, 10, 23, 57, 132, 301, 701, "
"1750} (Marcin Ciura, Best Increments for the Average Case of Shellsort, 13th "
"International Symposium on Fundamentals of Computation Theory, LNCS 2001; "
"Vol. 2138)."
msgstr ""
"Interestingly enough, determining the best gap வரிசை க்கு ஓடு வரிசைப்படுத்து "
"turns into a research சிக்கல் of our century in கணிப்பொறி, கணிணி science. க்கு "
"example, an article of 2001 introduces the following sequence, which seems "
"பெறுநர் be optimal in practice க்கு arrays of அளவு மேலே பெறுநர் 10^5: {1, 4, "
"10, 23, 57, 132, 301, 701, 1750} (Marcin Ciura, Best Increments க்கு the "
"Average Case of Shellsort, 13th International Symposium on Fundamentals of "
"Computation Theory, LNCS 2001; Vol. 2138)."

#. type: Content of: <h1>
#: src/lessons/sort/basic/selection/AlgSelectionSort.html:2
msgid "Selection Sort"
msgstr "தேர்வு வரிசைப்படுத்து"

#. type: Content of: outside any tag (error?)
#: src/lessons/sort/basic/selection/AlgSelectionSort.html:4
msgid ""
"In this exercise we will implement another classical algorithm: selection "
"sort."
msgstr ""
"In this exercise we will implement another classical algorithm: தேர்வு sort."

#. type: Content of: <p>
#: src/lessons/sort/basic/selection/AlgSelectionSort.html:7
msgid ""
"The idea is simply to select for each cell of the array the smallest value "
"from the part not already sorted. Thus for the first cell, it takes the "
"smallest value over the whole array. For the second one, it takes the second "
"smallest value, which is the smallest value from the cell not already "
"sorted. You of course don't have to sort the last cell of the array, that is "
"already sorted when you consider it."
msgstr ""
"The idea is simply பெறுநர் தேர்ந்தெடு க்கு each கலன் of the array the smallest "
"மதிப்பு இருந்து the பகுதி not already sorted. Thus க்கு the first cell, it "
"takes the smallest மதிப்பு வீச்சலகு the whole array. க்கு the second one, it "
"takes the second smallest value, which is the smallest மதிப்பு இருந்து the கலன் "
"not already sorted. You of course don't have பெறுநர் வரிசைப்படுத்து the last கலன்"
" of the array, that is already sorted when you consider it."

#. type: Content of: <p><p>
#: src/lessons/sort/basic/selection/AlgSelectionSort.html:14
msgid ""
"More generally, for the cell N, it looks the cell M in [N;len] containing "
"the smallest possible value of the interval. Then, it swaps the content of "
"cell N with the one of cell M."
msgstr ""
"More generally, க்கு the கலன் N, it looks the கலன் M in [N;len] containing the "
"smallest possible மதிப்பு of the interval. Then, it swaps the content of கலன் "
"N with the one of கலன் M."

#. type: Content of: <p><p><h2>
#: src/lessons/sort/basic/selection/AlgSelectionSort.html:18
msgid "Existing variations"
msgstr "Existing variations"

#. type: Content of: <p><p>
#: src/lessons/sort/basic/selection/AlgSelectionSort.html:19
msgid ""
"Another classical algorithm which idea is based on the selection of good "
"elements is HeapSort, but it uses a heap data structure which we did not see "
"yet. Simply remember that HeapSort provides a O(n log n) performance in "
"worst case, which is why it is a very interesting algorithm in practice."
msgstr ""
"Another classical படிமுறை which idea is based on the தேர்வு of good elements "
"is HeapSort, but it uses a heap தகவல்கள் structure which we did not see yet. "
"Simply remember that HeapSort provides a O(n log n) performance in worst "
"case, which is why it is a very interesting படிமுறை in practice."

#. type: Content of: <h1>
#: src/lessons/sort/basic/comb/AlgCombSort.html:2
msgid "CombSort"
msgstr "CombSort"

#. type: Content of: <p>
#: src/lessons/sort/basic/comb/AlgCombSort.html:4
msgid ""
"We saw that CocktailSort improve a bit for turtles (i.e. small values near "
"to the end of the array), but it is still possible to achieve "
"better. ComboSort comes down to providing them a short cut: instead of "
"comparing adjacent values, we compare values separated by a gap bigger than "
"1. That way, turtles will traverse <i>gap</i> cells at each "
"traversal. Naturally, we have to apply the algorithm with decreasing gaps, "
"and finish with <i>gap=1</i> to ensure that the array is correctly sorted "
"afterward. Choosing the right gap and how to decrease it is a difficult "
"question, but in practice, dividing it by 1.3 after each traversal leads to "
"good performance. Here is the corresponding pseudo-code:"
msgstr ""
"We saw that CocktailSort improve a துணுக்கு க்கு turtles (i.e. small values "
"near பெறுநர் the end of the array), but it is still possible பெறுநர் achieve "
"better. ComboSort comes down பெறுநர் providing them a குறுக்கு cut: instead of "
"comparing adjacent values, we compare values separated by a gap bigger than "
"1. That way, turtles will traverse <i>gap</i> cells at each traversal. "
"Naturally, we have பெறுநர் இடு the படிமுறை with decreasing gaps, and finish "
"with <i>gap=1</i> பெறுநர் ensure that the array is correctly sorted "
"afterward. Choosing the வலது gap and how பெறுநர் decrease it is a difficult "
"question, but in practice, dividing it by 1.3 after each traversal இழுதுகள் "
"பெறுநர் good performance. Here is the corresponding pseudo-code:"

#. type: Content of: <pre>
#: src/lessons/sort/basic/comb/AlgCombSort.html:16
#, no-wrap
msgid ""
"gap = len;\n"
"do\n"
"   if gap>1 then\n"
"     gap = gap / 1.3\n"
"   i = O\n"
"   while i+gap &lt; len do:\n"
"     if i and i+gap must be swapped, do it\n"
"     increase i by one\n"
"while the gap is bigger than 1 or the last traversal swapped at least one "
"pair\n"
msgstr ""
"gap = len;\n"
"do\n"
"   if gap>1 then\n"
"     gap = gap / 1.3\n"
"   i = O\n"
"   while i+gap &lt; len do:\n"
"     if i and i+gap must be swapped, do it\n"
"     increase i by one\n"
"while the gap is bigger than 1 or the last traversal swapped at least one "
"pair\n"

#. type: Content of: outside any tag (error?)
#: src/lessons/sort/basic/comb/AlgCombSort.html:27
#: src/lessons/maze/island/IslandMaze.html:67
#: src/lessons/welcome/bat/bool1/Max1020.html:6
msgid "[!scala]"
msgstr "[!scala]"

#. type: Content of: <p>
#: src/lessons/sort/basic/comb/AlgCombSort.html:27
msgid ""
"One tricky part is that we want to divide gap, that is an integer (of type "
"Int), by 1.3, that is a Double.  The type system of scala won't let us do "
"this, because such discrepancy usually denotes a programmer error.  As this "
"is not an error this time, we have to convert gap to Double for the time of "
"the operation, and then convert the result back to Int to store it into "
"gap. This should be written this way:"
msgstr ""
"One tricky பகுதி is that we want பெறுநர் divide gap, that is an முழு எண் (of "
"வகை Int), by 1.3, that is a Double.  The வகை மண்டலம் of scala won't let us do "
"this, because such discrepancy usually denotes a நிரலி (device), நிரலர் "
"(person) error.  அச் this is not an பிழை this time, we have பெறுநர் convert "
"gap பெறுநர் இரட்டை க்கு the time of the operation, and then convert the result "
"பின் பெறுநர் Int பெறுநர் store it into gap. This should be written this way:"

#. type: Content of: <pre>
#: src/lessons/sort/basic/comb/AlgCombSort.html:31
#, no-wrap
msgid "gap = (gap.asInstanceOf[Double] / 1.3).asInstanceOf[Int]"
msgstr "gap = (gap.asInstanceOf[Double] / 1.3).asInstanceOf[Int]"

#. type: Content of: <p>
#: src/lessons/sort/basic/comb/AlgCombSort.html:32
msgid ""
"This is rather verbose, but actually, this notation is not very complex. And "
"remember that the type checker is your friend. It's picky and sometimes "
"annoying (as on this one), but it often catches weird bugs that would have "
"been a pain to debug if not catch by the type checker. And since the Scala's "
"authors are pragmatic, the previous expression can be simplified:"
msgstr ""
"This is rather verbose, but actually, this notation is not very complex. And "
"remember that the வகை checker is your friend. It's எடுத்துரை and sometimes "
"annoying (as on this one), but it often catches weird bugs that would have "
"been a pain பெறுநர் debug if not catch by the வகை checker. And since the "
"Scala's ஆசிரியர்கள் அரே pragmatic, the previous கோவை can be simplified:"

#. type: Content of: <pre>
#: src/lessons/sort/basic/comb/AlgCombSort.html:36
#, no-wrap
msgid "gap = (gap.toDouble / 1.3).toInt"
msgstr "gap = (gap.toDouble / 1.3).toInt"

#. type: Content of: <p>
#: src/lessons/sort/basic/comb/AlgCombSort.html:37
msgid ""
"<code>toDouble</code> and <code>toInt</code> are just shortcuts for the "
"corresponding expressions <code>asInstanceOf[Double]</code> and "
"<code>asInstanceOf[Int]</code>. It's not very generic, but it's very handy."
msgstr ""
"<code>toDouble</code> and <code>toInt</code> அரே just shortcuts க்கு the "
"corresponding expressions <code>asInstanceOf[Double]</code> and "
"<code>asInstanceOf[Int]</code>. It's not very generic, but it's very handy."

#. type: Content of: <p>
#: src/lessons/sort/basic/comb/AlgCombSort.html:41
msgid ""
"This algorithm was invented by Wlodek Dobosiewicz in 1980, and later "
"rediscovered and popularized by Stephen Lacey and Richard Box, who described "
"it in Byte Magazine in April 1991."
msgstr ""
"This படிமுறை was invented by Wlodek Dobosiewicz in 1980, and later "
"rediscovered and popularized by Stephen Lacey and Richard Box, who described "
"it in Byte Magazine in ப-சித்திரை 1991."

#. type: Content of: <h1>
#: src/lessons/sort/basic/comb/AlgCombSort11.html:2
msgid "CombSort11"
msgstr "CombSort11"

#. type: Content of: <p>
#: src/lessons/sort/basic/comb/AlgCombSort11.html:4
msgid ""
"The authors of this algorithm observed that the performance is increased if "
"we make sure that the last values of the gap are (11, 8, 6, 4, 3, 2, 1)  "
"rather than (9, 6, 4, 3, 2, 1) or (10, 7, 5, 3, 2, 1). Rework the code of "
"CombSort to ensure just after the gap update that if it is 9 or 10, we "
"should use 11 instead."
msgstr ""
"The ஆசிரியர்கள் of this படிமுறை observed that the performance is increased if "
"we make sure that the last values of the gap அரே (11, 8, 6, 4, 3, 2, 1)  "
"rather than (9, 6, 4, 3, 2, 1) or (10, 7, 5, 3, 2, 1). Rework the குறியீடு of "
"CombSort பெறுநர் ensure just after the gap புதுப்பிப்பு that if it is 9 or 10, "
"we should use 11 instead."

#. type: Content of: <h1>
#: src/lessons/sort/basic/gnome/AlgGnomeSort.html:2
msgid "GnomeSort"
msgstr "GnomeSort"

#. type: Content of: <p>
#: src/lessons/sort/basic/gnome/AlgGnomeSort.html:4
msgid ""
"The Gnome sort is similar to insertion sort, but the elements are moved in "
"position by a serie of swaps just like in bubble sort. It is named after the "
"supposed behavior of garden gnomes when they sort flower pots. Here is a "
"description of the algorithm by its author:"
msgstr ""
"The Gnome வரிசைப்படுத்து is similar பெறுநர் insertion sort, but the elements அரே"
" moved in position by a serie of swaps just like in bubble sort. It is named "
"after the supposed behavior of garden gnomes when they வரிசைப்படுத்து flower "
"pots. Here is a விவரம் of the படிமுறை by its author:"

#. type: Content of: <p>
#: src/lessons/sort/basic/gnome/AlgGnomeSort.html:9
msgid ""
"Gnome Sort is based on the technique used by the standard Dutch Garden Gnome "
"(Du.: tuinkabouter). Here is how a garden gnome sorts a line of flower "
"pots. Basically, he looks at the flower pot next to him and the one "
"immediately after ; if they are in the right order he steps one pot forward, "
"otherwise he swaps them and steps one pot backwards. Boundary conditions: if "
"there is no previous pot, he steps forwards; if there is no pot next to him, "
"he is done.  <i>—Dick Grune</i>"
msgstr ""
"Gnome வரிசைப்படுத்து is based on the technique used by the தரநிலை டச்சு Garden "
"Gnome (Du.: tuinkabouter). Here is how a garden gnome sorts a வரி of flower "
"pots. Basically, he looks at the flower pot அடுத்தது பெறுநர் him and the one "
"உடனடியாக after ; if they அரே in the வலது order he படிகள் one pot forward, "
"otherwise he swaps them and படிகள் one pot backwards. Boundary conditions: if "
"there is இல்லை previous pot, he படிகள் forwards; if there is இல்லை pot அடுத்தது "
"பெறுநர் him, he is done.  <i>—Dick Grune</i>"

#. type: Content of: <h1>
#: src/lessons/sort/dutchflag/Main.html:2
#: src/lessons/sort/dutchflag/short_desc.html:2
#: src/lessons/sort/dutchflag/DutchFlagAlgo.html:2
#: src/lessons/sort/dutchflag/universe/DutchFlagWorld.html:2
msgid "The Dutch Flag Problem"
msgstr "The டச்சு Flag Problem"

#. type: Content of: <p>
#: src/lessons/sort/dutchflag/Main.html:4
msgid ""
"This problem was first proposed by E.W Dijkstra in 1976 (in the chapter 14 "
"of his book \"A Discipline of Programming\").  It is a very classical "
"variation of the sorting algorithms since then. It is sometimes useful in "
"real life, but it became famous for its pedagogical properties: its "
"complexity is not trivial, but not complex either.  It can easily be "
"formally proven, but it's not absolutely trivial either."
msgstr ""
"This problem was first proposed by E.W Dijkstra in 1976 (in the பாடங்கள் 14 of "
"his book \"A Discipline of Programming\").  It is a very classical variation "
"of the sorting algorithms since then. It is sometimes useful in real life, "
"but it became famous க்கு its pedagogical properties: its complexity is not "
"trivial, but not அணைவு either.  It can easily be formally proven, but it's "
"not absolutely trivial either."

#. type: Content of: <ul><li>
#: src/lessons/sort/dutchflag/Main.html:13
msgid "A temporal view could be welcomed."
msgstr "A temporal பார்வை could be welcomed."

#. type: Content of: <ul><li>
#: src/lessons/sort/dutchflag/Main.html:14
msgid ""
"Other exercises, for example with 2 colors only or with more than 3 colors, "
"could generalize the proposed approach."
msgstr ""
"மற்றொன்று exercises, க்கு example with 2 colors only or with more than 3 "
"colors, could generalize the proposed approach."

#. type: Content of: <ul><li>
#: src/lessons/sort/dutchflag/Main.html:15
msgid "This problem could be solved recursively."
msgstr "This problem could be solved recursively."

#. type: Content of: <p>
#: src/lessons/sort/dutchflag/short_desc.html:4
msgid ""
"This is a classical sorting problem, constituting a variation over the "
"insertion sort."
msgstr ""
"This is a classical sorting problem, constituting a variation வீச்சலகு the "
"insertion sort."

#. type: Content of: <p>
#: src/lessons/sort/dutchflag/DutchFlagAlgo.html:4
msgid ""
"Your work is to sort all the colors of the Dutch flag, and the only provided "
"primitive is to exchange two given lines.  In addition, you should not "
"create any additional variables (but a few indices)."
msgstr ""
"Your வேலை is பெறுநர் வரிசைப்படுத்து அனைத்தும் the colors of the டச்சு flag, and "
"the only provided தொடக்கநிலை is பெறுநர் exchange two given lines.  In "
"addition, you should not create any additional மாறிகள் (but a few indices)."

#. type: Content of: <p>
#: src/lessons/sort/dutchflag/DutchFlagAlgo.html:7
msgid ""
"If you think carefully, this can be done in linear time, where you sort a "
"line at each iteration of the loop.  You may want to check again the <a "
"href=\"plm://lessons.sort.basic/insertion.AlgInsertionSort\">insertion "
"sort</a>, of which the Dutch Flag sort is a variation. The main difference "
"is that you have 3 insertion points, not only one..."
msgstr ""
"If you think carefully, this can be முடிந்தது in நேரியல் time, where you "
"வரிசைப்படுத்து a வரி at each மறுசெய்கை of the loop.  You சி-வைகாசி want பெறுநர் "
"சரிபார் again the <a href="
"\"plm://lessons.sort.basic/insertion.AlgInsertionSort\">insertion sort</a>, "
"of which the டச்சு Flag வரிசைப்படுத்து is a variation. The main வேறுபாடு is "
"that you have 3 insertion points, not only one..."

#. type: Attribute 'alt' of: <div>
#: src/lessons/sort/dutchflag/DutchFlagAlgo.html:11
msgid "I need an hint to start"
msgstr "I need an hint பெறுநர் தொடங்கு"

#. type: Content of: <div>
#: src/lessons/sort/dutchflag/DutchFlagAlgo.html:12
msgid "Do a traversal over your data, saving 3 indices:"
msgstr "Do a traversal வீச்சலகு your data, saving 3 indices:"

#. type: Content of: <div><ul><li>
#: src/lessons/sort/dutchflag/DutchFlagAlgo.html:14
msgid ""
"<code>afterBlue</code> is initialized to 0. Make sure that every cell below "
"<code>afterBlue</code> is filled with blue elements."
msgstr ""
"<code>afterBlue</code> is initialized பெறுநர் 0. Make sure that every கலன் "
"below <code>afterBlue</code> is filled with நீலம் elements."

#. type: Content of: <div><ul><li>
#: src/lessons/sort/dutchflag/DutchFlagAlgo.html:15
msgid ""
"<code>whiteRed</code> is initialized to size-1. Make sure that every cell "
"after <code>whiteRed</code> is filled with red elements."
msgstr ""
"<code>whiteRed</code> is initialized பெறுநர் size-1. Make sure that every கலன் "
"after <code>whiteRed</code> is filled with சிவப்பு elements."

#. type: Content of: <div><ul><li>
#: src/lessons/sort/dutchflag/DutchFlagAlgo.html:16
msgid ""
"<code>beforeWhite</code> is initialized to size-1. Make sure that every cell "
"after <code>beforeWhite</code> and before <code>whiteRed</code> is filled "
"with white elements."
msgstr ""
"<code>beforeWhite</code> is initialized பெறுநர் size-1. Make sure that every "
"கலன் after <code>beforeWhite</code> and before <code>whiteRed</code> is "
"filled with வெள்ளை elements."

#. type: Content of: <div>
#: src/lessons/sort/dutchflag/DutchFlagAlgo.html:18
msgid ""
"Note that the unsorted cells are always between <code>afterBlue</code> and "
"<code>beforeWhite</code>."
msgstr ""
"குறிப்பு that the unsorted cells அரே எப்போதும் between <code>afterBlue</code> "
"and <code>beforeWhite</code>."

#. type: Content of: <div>
#: src/lessons/sort/dutchflag/DutchFlagAlgo.html:20
msgid ""
"At each step of your traversal, check the color of the cell at "
"<code>afterBlue</code> and do the required exchanges.  The loop ending "
"condition is when <code>afterBlue</code> becomes larger than "
"<code>beforeWhite</code>."
msgstr ""
"At each படி of your traversal, சரிபார் the color of the கலன் at "
"<code>afterBlue</code> and do the required exchanges.  The loop ending "
"condition is when <code>afterBlue</code> becomes larger than "
"<code>beforeWhite</code>."

#. type: Content of: <h2>
#: src/lessons/sort/dutchflag/universe/DutchFlagWorld.html:4
msgid "Provided values"
msgstr "Provided values"

#. type: Content of: <p>
#: src/lessons/sort/dutchflag/universe/DutchFlagWorld.html:6
msgid ""
"The colors are represented through the following constants: BLUE, WHITE and "
"RED.  You can use them directly in your code."
msgstr ""
"The colors அரே represented through the following constants: BLUE, வெள்ளை and "
"RED.  You can use them directly in your code."

#. type: Content of: <h2>
#: src/lessons/sort/dutchflag/universe/DutchFlagWorld.html:9
#: src/lessons/lander/universe/DelegatingLanderWorld.html:8
msgid "Provided functions"
msgstr "Provided செயல்பாடுகள்"

#. type: Content of: <p>
#: src/lessons/sort/dutchflag/universe/DutchFlagWorld.html:11
msgid "This world is very simple, with only 5 provided functions."
msgstr "This world is very simple, with only 5 provided functions."

#. type: Content of: <pre>
#: src/lessons/sort/dutchflag/universe/DutchFlagWorld.html:13
#, no-wrap
msgid ""
"[!java|c]void [/!]swap([!java|c]int [/!]x[!scala]:Int[/!], [!java|c]int "
"[/!]y[!scala]:Int[/!])"
msgstr ""
"[!java|c]void [/!]swap([!java|c]int [/!]x[!scala]:Int[/!], [!java|c]int [/!]y"
"[!scala]:Int[/!])"

#. type: Content of: outside any tag (error?)
#: src/lessons/sort/dutchflag/universe/DutchFlagWorld.html:14
msgid "Swap the lines number <code>x</code> and <code>y</code>."
msgstr "Swap the வரிகள் எண் <code>x</code> and <code>y</code>."

#. type: Content of: <pre>
#: src/lessons/sort/dutchflag/universe/DutchFlagWorld.html:16
#, no-wrap
msgid "[!java|c]int [/!]getSize() [!scala]:Int[/!]"
msgstr "[!java|c]int [/!]getSize() [!scala]:Int[/!]"

#. type: Content of: outside any tag (error?)
#: src/lessons/sort/dutchflag/universe/DutchFlagWorld.html:17
msgid "Returns the amount of lines on this flag."
msgstr "Returns the amount of வரிகள் on this flag."

#. type: Content of: <pre>
#: src/lessons/sort/dutchflag/universe/DutchFlagWorld.html:19
#, no-wrap
msgid ""
"[!java|c]int [/!]getColor([!java|c]int [/!]line[!scala]:Int[/!])  "
"[!scala]:Int[/!]"
msgstr ""
"[!java|c]int [/!]getColor([!java|c]int [/!]line[!scala]:Int[/!])  [!scala]:"
"Int[/!]"

#. type: Content of: outside any tag (error?)
#: src/lessons/sort/dutchflag/universe/DutchFlagWorld.html:20
msgid "Returns the color of the given line."
msgstr "Returns the color of the given line."

#. type: Content of: <pre>
#: src/lessons/sort/dutchflag/universe/DutchFlagWorld.html:22
#: src/lessons/sort/baseball/universe/BaseballWorld.html:31
#, no-wrap
msgid "[!java]boolean [/!][!c]int [/!]isSorted()  [!scala]:Boolean[/!]"
msgstr "[!java]boolean [/!][!c]int [/!]isSorted()  [!scala]:Boolean[/!]"

#. type: Content of: outside any tag (error?)
#: src/lessons/sort/dutchflag/universe/DutchFlagWorld.html:23
msgid "Returns whether the flag is sorted."
msgstr "Returns whether the flag is sorted."

#. type: Content of: <pre>
#: src/lessons/sort/dutchflag/universe/DutchFlagWorld.html:25
#: src/lessons/sort/baseball/universe/BaseballWorld.html:37
#, no-wrap
msgid "[!java]boolean [/!][!c]int [/!]isSelected()  [!scala]:Boolean[/!]"
msgstr "[!java]boolean [/!][!c]int [/!]isSelected()  [!scala]:Boolean[/!]"

#. type: Content of: outside any tag (error?)
#: src/lessons/sort/dutchflag/universe/DutchFlagWorld.html:26
#: src/lessons/sort/baseball/universe/BaseballWorld.html:38
msgid "Returns whether the current world is selected in the interface."
msgstr ""
"Returns whether the மின்னோட்ட்ம், ஓட்டம் world is தேர்ந்தெடுக்கப்பட்டது in the "
"interface."

#. type: Content of: <h1>
#: src/lessons/sort/pancake/universe/PancakeWorld.html:2
msgid "PancakeWorld"
msgstr "PancakeWorld"

#. type: Content of: <p>
#: src/lessons/sort/pancake/universe/PancakeWorld.html:4
msgid "This universe is very simple, with only five functions provided."
msgstr "This அண்டம் is very simple, with only five செயல்பாடுகள் provided."

#. type: Content of: <pre>
#: src/lessons/sort/pancake/universe/PancakeWorld.html:6
#, no-wrap
msgid "[!java|c]int [/!]getStackSize()  [!scala]:Int[/!]"
msgstr "[!java|c]int [/!]getStackSize()  [!scala]:Int[/!]"

#. type: Content of: outside any tag (error?)
#: src/lessons/sort/pancake/universe/PancakeWorld.html:7
msgid "Returns the size of the stack, that is the amount of pancakes it contains."
msgstr ""
"Returns the அளவு of the stack, that is the amount of pancakes it contains."

#. type: Content of: <pre>
#: src/lessons/sort/pancake/universe/PancakeWorld.html:9
#, no-wrap
msgid ""
"[!java|c]int [/!]getPancakeRadius([!java|c]int [/!]rank[!scala]:Int[/!])  "
"[!scala]:Int[/!]"
msgstr ""
"[!java|c]int [/!]getPancakeRadius([!java|c]int [/!]rank[!scala]:Int[/!])  "
"[!scala]:Int[/!]"

#. type: Content of: outside any tag (error?)
#: src/lessons/sort/pancake/universe/PancakeWorld.html:10
msgid ""
"Returns the radius of the pancake passed as argument, with the rank of the "
"top-most pancake being 0."
msgstr ""
"Returns the ஆரம் of the pancake passed அச் argument, with the rank of the top-"
"most pancake being 0."

#. type: Content of: <pre>
#: src/lessons/sort/pancake/universe/PancakeWorld.html:12
#, no-wrap
msgid ""
"[!java]boolean [/!][!c]int [/!]isPancakeUpsideDown([!java|c]int "
"[/!]rank[!scala]:Int[/!])   [!scala]:Boolean[/!]"
msgstr ""
"[!java]boolean [/!][!c]int [/!]isPancakeUpsideDown([!java|c]int [/!]rank"
"[!scala]:Int[/!])   [!scala]:Boolean[/!]"

#. type: Content of: outside any tag (error?)
#: src/lessons/sort/pancake/universe/PancakeWorld.html:13
msgid ""
"Returns whether the pancake passed as argument upside-down, that is, if its "
"burned side is on top. As usual, the top-most pancake is of rank 0."
msgstr ""
"Returns whether the pancake passed அச் argument upside-down, that is, if its "
"burned பக்கம் is on top. அச் usual, the top-most pancake is of rank 0."

#. type: Content of: <pre>
#: src/lessons/sort/pancake/universe/PancakeWorld.html:15
#, no-wrap
msgid "[!java|c]void [/!]flip([!java|c]int [/!]amount[!scala]:Int[/!])"
msgstr "[!java|c]void [/!]flip([!java|c]int [/!]amount[!scala]:Int[/!])"

#. type: Content of: outside any tag (error?)
#: src/lessons/sort/pancake/universe/PancakeWorld.html:16
msgid ""
"Flips the <code>amount</code> first pancakes composing the stack, from the "
"top of it."
msgstr ""
"Flips the <code>amount</code> first pancakes composing the stack, இருந்து the "
"மேலே of it."

#. type: Content of: <pre>
#: src/lessons/sort/pancake/universe/PancakeWorld.html:18
#, no-wrap
msgid "[!java]boolean [/!][!c]int [/!]isSorted()   [!scala]:Boolean[/!]"
msgstr "[!java]boolean [/!][!c]int [/!]isSorted()   [!scala]:Boolean[/!]"

#. type: Content of: outside any tag (error?)
#: src/lessons/sort/pancake/universe/PancakeWorld.html:19
msgid "Returns whether the pancake stack is correctly sorted."
msgstr "Returns whether the pancake stack is correctly sorted."

#. type: Content of: <pre>
#: src/lessons/sort/pancake/universe/PancakeWorld.html:21
#, no-wrap
msgid "[!java]boolean [/!][!c]int [/!]isSelected()   [!scala]:Boolean[/!]"
msgstr "[!java]boolean [/!][!c]int [/!]isSelected()   [!scala]:Boolean[/!]"

#. type: Content of: <h1>
#: src/lessons/sort/pancake/Main.html:2
#: src/lessons/sort/pancake/BasicPancake.html:2
msgid "Pancake Sorting"
msgstr "Pancake Sorting"

#. type: Content of: <p>
#: src/lessons/sort/pancake/Main.html:4
msgid ""
"This activity is inspired by a problem first introduced in 1975 by Harry "
"Dweighter in the American Mathematical Monthly. The question is not only to "
"sort the pancakes, but to determine <code>f(n)</code> the <i>minimal</i> "
"amount of flips mandated to sort any stack of size <code>n</code>."
msgstr ""
"This செய்கைப்பாடு is inspired by a problem first introduced in 1975 by Harry "
"Dweighter in the அமேரிகன் Mathematical Monthly. The கேள்வி is not only பெறுநர் "
"வரிசைப்படுத்து the pancakes, but பெறுநர் determine <code>f(n)</code> the "
"<i>minimal</i> amount of flips mandated பெறுநர் வரிசைப்படுத்து any stack of அளவு"
" <code>n</code>."

#. type: Content of: <p>
#: src/lessons/sort/pancake/Main.html:8
msgid ""
"This problem is now famous because Bill Gates authored (with "
"C. Papadimitriou) his only scientific publication in 1979 on this topic, "
"providing a faster algorithm and proving that <code>17n/16 ≤ f(n) ≤ "
"(5n+5)/3</code>.  This was the only publication of Bill Gates before he "
"invented Windows and became rich."
msgstr ""
"This problem is now famous because சட்டகம் Gates authored (with C. "
"Papadimitriou) his only scientific publication in 1979 on this topic, "
"providing a faster படிமுறை and proving that <code>17n/16 ≤ f(n) ≤ (5n+5)/3</"
"code>.  This was the only publication of சட்டகம் Gates before he invented "
"சாளரங்கள் and became rich."

#. type: Content of: <p>
#: src/lessons/sort/pancake/Main.html:12
msgid ""
"Then, David X. Cohen, the inventor of the Futurama comics with many "
"mathematical references, introduced the variant with burnt pancakes and "
"studied its complexity with Manuel Blum in 1993."
msgstr ""
"Then, David ஃச். Cohen, the inventor of the Futurama comics with many "
"mathematical references, introduced the variant with burnt pancakes and "
"studied its complexity with Manuel Blum in 1993."

#. type: Content of: <p>
#: src/lessons/sort/pancake/Main.html:15
msgid ""
"An article of 2011 (by L. Bulteau, G. Fertin and I. Rusu) proved that "
"determining the minimal amount of flips to sort the stack is a NP-complete "
"problem. Naturally, the stack sorting problem is not NP-complete since it "
"can be solved in 2n-3 steps with the naive algorithm and (5n+5)/3 steps with "
"the Gates algorithm.  That's determining the minimal amount of steps that is "
"NP."
msgstr ""
"An article of 2011 (by L. Bulteau, G. Fertin and I. Rusu) proved that "
"determining the minimal amount of flips பெறுநர் வரிசைப்படுத்து the stack is a "
"NP-complete problem. Naturally, the stack sorting problem is not NP-complete "
"since it can be solved in 2n-3 படிகள் with the naive படிமுறை and (5n+5)/3 "
"படிகள் with the Gates algorithm.  That's determining the minimal amount of "
"படிகள் that is NP."

#. type: Content of: <p>
#: src/lessons/sort/pancake/Main.html:20
msgid "Further information can be found on the wikipedia page, as usual."
msgstr "Further செய்தி can be found on the wikipedia page, அச் usual."

#. type: Content of: <p>
#: src/lessons/sort/pancake/Main.html:23
msgid ""
"This activity is also integrated to CSIRL (my repository of <i>free</i> "
"unplugged activities to introduce computer science, available at "
"http://www.loria.fr/~quinson/Mediation/SMN/), and it may be interesting to "
"run the unplugged activities before implementing these algorithms in PLM."
msgstr ""
"This செய்கைப்பாடு is also integrated பெறுநர் CSIRL (my களஞ்சியம் of <i>free</i> "
"unplugged activities பெறுநர் introduce கணிப்பொறி, கணிணி science, available at "
"http://www.loria.fr/~quinson/Mediation/SMN/), and it சி-வைகாசி be "
"interesting பெறுநர் ஓடு the unplugged activities before implementing these "
"algorithms in PLM."

#. type: Content of: <ul><li>
#: src/lessons/sort/pancake/Main.html:34
msgid "A temporal view similar to the sorting universe could be helpful"
msgstr "A temporal பார்வை similar பெறுநர் the sorting அண்டம் could be helpful"

#. type: Content of: <ul><li>
#: src/lessons/sort/pancake/Main.html:35
msgid ""
"Other exercises, for example on the Roti sorting, with a pile of Roti that "
"have to touch the grill on each face (see "
"http://en.wikipedia.org/wiki/Pancake_sorting#The_identical_pancake_stack)."
msgstr ""
"மற்றொன்று exercises, க்கு example on the Roti sorting, with a pile of Roti that "
"have பெறுநர் touch the grill on each face (see http://en.wikipedia.org/wiki/"
"Pancake_sorting#The_identical_pancake_stack)."

#. type: Content of: <h3>
#: src/lessons/sort/pancake/short_desc.html:2
msgid "The pancake problem"
msgstr "The pancake problem"

#. type: Content of: <p>
#: src/lessons/sort/pancake/short_desc.html:4
msgid "Help the poor psychorigid pancakes' chef to sort its pancake stack!"
msgstr ""
"உதவி the poor psychorigid pancakes' chef பெறுநர் வரிசைப்படுத்து its pancake "
"stack!"

#. type: Content of: <p>
#: src/lessons/sort/pancake/short_desc.html:6
msgid ""
"This funny problem leads to algorithms that are somewhat more challenging to "
"implement. You are supposed to master the bases of programming and some "
"sorting algorithms to take this lesson."
msgstr ""
"This funny problem இழுதுகள் பெறுநர் algorithms that அரே somewhat more "
"challenging பெறுநர் implement. You அரே supposed பெறுநர் master the bases of "
"programming and some sorting algorithms பெறுநர் take this lesson."

#. type: Content of: <p>
#: src/lessons/sort/pancake/BasicPancake.html:4
msgid ""
"The pancake sorting problem is a simple puzzle where you have a set of "
"pancakes, each of differing size. The chef cooking the pancake is a bit "
"psychorigid: he hates when the pancakes are not correctly sorted on the "
"plate. He loves when they are correctly ordered, with the small ones over "
"the larger ones. As every pancake maker, he masters the pancake flipping "
"with his spatula. He can flip the pancake on top of the stack, or even "
"several pancakes at once. The thing is that he has only one plate and the "
"table is too dirty to place pancakes on it, even temporary. The only allowed "
"operation is to flip some pancakes that are on top of the stack."
msgstr ""
"The pancake sorting problem is a simple puzzle where you have a கணம் of "
"pancakes, each of differing size. The chef cooking the pancake is a துணுக்கு "
"psychorigid: he hates when the pancakes அரே not correctly sorted on the "
"plate. He loves when they அரே correctly ordered, with the small ones வீச்சலகு "
"the larger ones. அச் every pancake maker, he masters the pancake flipping "
"with his spatula. He can flip the pancake on மேலே of the stack, or இரட்டை "
"several pancakes at once. The thing is that he has only one plate and the "
"table is too dirty பெறுநர் place pancakes on it, இரட்டை temporary. The only "
"allowed செயல்பாடு is பெறுநர் flip some pancakes that அரே on மேலே of the stack."

#. type: Content of: <p>
#: src/lessons/sort/pancake/BasicPancake.html:13
msgid ""
"Your work is to help this poor guy sorting his stack by flipping the "
"pancakes. Each pancake is defined by its radius and rank within the stack, "
"with the top-most pancake is at rank 0, and the one below at rank 1."
msgstr ""
"Your வேலை is பெறுநர் உதவி this poor guy sorting his stack by flipping the "
"pancakes. Each pancake is defined by its ஆரம் and rank within the stack, with "
"the top-most pancake is at rank 0, and the one below at rank 1."

#. type: Content of: <p>
#: src/lessons/sort/pancake/BasicPancake.html:17
msgid ""
"Note that you can play physically with pieces of paper or wood at first to "
"get the grasp on this problem. This is even one of the activities that I use "
"in my CS-IRL (computer science in real life) project to introduce the "
"concept of algorithm to absolute beginners that wonder about our "
"science. More information at http://www.loria.fr/~quinson/Mediation/SMN/ (in "
"French)."
msgstr ""
"குறிப்பு that you can play physically with pieces of paper or மரம் at first "
"பெறுநர் get the grasp on this problem. This is இரட்டை one of the activities "
"that I use in my CS-IRL (computer science in real life) திட்டம் பெறுநர் "
"introduce the concept of படிமுறை பெறுநர் தனி, சார்பிலா beginners that wonder "
"பற்றி our science. More செய்தி at http://www.loria.fr/~quinson/Mediation/SMN/ ("
"in French)."

#. type: Attribute 'alt' of: <p><div>
#: src/lessons/sort/pancake/BasicPancake.html:23
#: src/lessons/sort/pancake/BubblePancake.html:10
msgid "I don't get it. I need some help."
msgstr "I don't get it. I need some help."

#. type: Content of: <p><div>
#: src/lessons/sort/pancake/BasicPancake.html:24
msgid ""
"You should try to first move the largest pancake to the bottom, and then the "
"largest but one pancake on top of it, and then the one just smaller on top, "
"and so on."
msgstr ""
"You should try பெறுநர் first move the largest pancake பெறுநர் the bottom, and "
"then the largest but one pancake on மேலே of it, and then the one just "
"smaller on top, and so on."

#. type: Attribute 'alt' of: <p><p><div>
#: src/lessons/sort/pancake/BasicPancake.html:28
#: src/lessons/sort/pancake/BubblePancake.html:13
msgid "The first tip was not enough. I need another one."
msgstr "The first tip was not enough. I need another one."

#. type: Content of: <p><div>
#: src/lessons/sort/pancake/BasicPancake.html:29
msgid "So first, you need to move the largest pancake at the bottom of the stack."
msgstr ""
"So first, you need பெறுநர் move the largest pancake at the கீழே of the stack."

#. type: Content of: <p><div>
#: src/lessons/sort/pancake/BasicPancake.html:30
msgid ""
"Can you imagine a situation in which you can easily bring this damn large "
"pancake to the bottom?"
msgstr ""
"Can you imagine a situation in which you can easily bring this damn large "
"pancake பெறுநர் the bottom?"

#. type: Content of: <p><div>
#: src/lessons/sort/pancake/BasicPancake.html:31
msgid "How could you reach this situation from the current one?"
msgstr ""
"How could you reach this situation இருந்து the மின்னோட்ட்ம், ஓட்டம் one?"

#. type: Content of: <h1>
#: src/lessons/sort/pancake/BubblePancake.html:2
msgid "Bubble Pancakes"
msgstr "Bubble Pancakes"

#. type: Content of: <p>
#: src/lessons/sort/pancake/BubblePancake.html:4
msgid ""
"This problem is similar to the previous: you have to sort the pancakes, the "
"smallest at the top and the biggest at the bottom, except you can only flip "
"them to sort."
msgstr ""
"This problem is similar பெறுநர் the previous: you have பெறுநர் வரிசைப்படுத்து "
"the pancakes, the smallest at the மேலே and the biggest at the bottom, except "
"you can only flip them பெறுநர் sort."

#. type: Content of: <p>
#: src/lessons/sort/pancake/BubblePancake.html:6
msgid ""
"The purpose here is to sort them using the bubble algorithm, where one "
"pancake is moved to the bottom until it encounters a bigger one. In "
"graphical representations, it looks like a bubble takes the element and move "
"them through the pile. This is where its name comes from."
msgstr ""
"The purpose here is பெறுநர் வரிசைப்படுத்து them using the bubble algorithm, "
"where one pancake is moved பெறுநர் the கீழே until it encounters a bigger one. "
"In graphical representations, it looks like a bubble takes the தனிமம் and "
"move them through the pile. This is where its பெயர் comes from."

#. type: Content of: <p>
#: src/lessons/sort/pancake/BubblePancake.html:8
msgid ""
"Now, using pancakes makes it a little more difficult to write, because you "
"have to find a way to swap only two pancakes at a time."
msgstr ""
"Now, using pancakes makes it a little more difficult பெறுநர் write, because "
"you have பெறுநர் கண்டுபிடி a way பெறுநர் swap only two pancakes at a time."

#. type: Content of: <p><div>
#: src/lessons/sort/pancake/BubblePancake.html:11
msgid ""
"The bubble algorithm consists in browsing the whole pile from top to bottom, "
"and making a comparision between two pancakes. Each time the top pancake is "
"bigger than the one below, you have to swap them, then compare the bigger "
"pancake you just swapped with one below, and so on. You have to browse "
"through the entire pile until no swap has occurred, in which case the pile "
"is sorted."
msgstr ""
"The bubble படிமுறை consists in browsing the whole pile இருந்து மேலே பெறுநர் "
"bottom, and making a comparision between two pancakes. Each time the மேலே "
"pancake is bigger than the one below, you have பெறுநர் swap them, then "
"compare the bigger pancake you just swapped with one below, and so on. You "
"have பெறுநர் browse through the entire pile until இல்லை swap has occurred, in "
"which case the pile is sorted."

#. type: Content of: <p><p><div>
#: src/lessons/sort/pancake/BubblePancake.html:14
msgid ""
"If you don't understand the basic bubble sorting algorithm, you should try "
"the exercises within the “Sorting algorithms” lesson. If you do, but can't "
"figure a way to swap only two pancakes at a time, think of a situation where "
"only two pancakes are swapped at a time, and find a way to reach that "
"situation."
msgstr ""
"If you don't understand the அடிப்படை bubble sorting algorithm, you should try "
"the exercises within the “Sorting algorithms” lesson. If you do, but can't "
"figure a way பெறுநர் swap only two pancakes at a time, think of a situation "
"where only two pancakes அரே swapped at a time, and கண்டுபிடி a way பெறுநர் "
"reach that situation."

#. type: Content of: <h1>
#: src/lessons/sort/pancake/BurnedPancake.html:2
msgid "Burned Pancakes"
msgstr "Burned Pancakes"

#. type: Content of: <p>
#: src/lessons/sort/pancake/BurnedPancake.html:4
msgid ""
"Hard blow for the chef! The pancakes got burnt on one side! There is no way "
"he can deliver a stack of pancakes with visibly burnt pancakes! You've got "
"to help him ensuring that no pancake is upside-down while sorting his stack."
msgstr ""
"Hard blow க்கு the chef! The pancakes got burnt on one side! There is இல்லை "
"way he can deliver a stack of pancakes with visibly burnt pancakes! You've "
"got பெறுநர் உதவி him ensuring that இல்லை pancake is upside-down while sorting "
"his stack."

#. type: Content of: <h1>
#: src/lessons/sort/pancake/GatesPancake.html:2
msgid "Faster Pancake Sorting"
msgstr "Faster Pancake Sorting"

#. type: Content of: <p>
#: src/lessons/sort/pancake/GatesPancake.html:4
msgid ""
"Unlike others sorting problem, the expensive operation is not the comparison "
"of values, but the flipping of pancakes. In this exercise, we will explore "
"another algorithm that attempt to reduce the amount of stack flipping. The "
"funny side is that this algorithm was first introduced by Bill Gates, before "
"invented Windows."
msgstr ""
"Unlike others sorting problem, the expensive செயல்பாடு is not the comparison "
"of values, but the flipping of pancakes. In this exercise, we will explore "
"another படிமுறை that attempt பெறுநர் reduce the amount of stack flipping. The "
"funny பக்கம் is that this படிமுறை was first introduced by சட்டகம் Gates, before "
"invented Windows."

#. type: Content of: <p>
#: src/lessons/sort/pancake/GatesPancake.html:9
msgid ""
"The basic idea is to grow sequences of sorted pancakes, not necessarily "
"starting from the bottom.  We say that a sequence of ordered pancakes "
"constitute a <b>block</b> while a pancake that is not part of a block is "
"said to be <b>free</b>. The algorithm then considers the topmost pancake (of "
"radius <code>t</code>) and search for the <code>t+1</code> or "
"<code>t-1</code> pancakes (the considered neighbor is noted "
"<code>t+o</code>). Eight cases may happen:"
msgstr ""
"The அடிப்படை idea is பெறுநர் grow வரிசைகள் of sorted pancakes, not necessarily "
"starting இருந்து the bottom.  We say that a வரிசை of ordered pancakes "
"constitute a <b>block</b> while a pancake that is not பகுதி of a block is "
"said பெறுநர் be <b>free</b>. The படிமுறை then considers the topmost pancake ("
"of ஆரம் <code>t</code>) and தேடல் க்கு the <code>t+1</code> or <code>t-1</code> "
"pancakes (the considered neighbor is noted <code>t+o</code>). Eight cases "
"சி-வைகாசி happen:"

#. type: Content of: <ul><li>
#: src/lessons/sort/pancake/GatesPancake.html:16
msgid ""
"<b>Case a</b>: Both <code>t</code> and <code>t+o</code> are free. They are "
"then merged in one flip."
msgstr ""
"<b>Case a</b>: Both <code>t</code> and <code>t+o</code> அரே free. They அரே "
"then merged in one flip."

#. type: Content of: <ul><li>
#: src/lessons/sort/pancake/GatesPancake.html:20
msgid ""
"<b>Case b</b>: <code>t</code> is free, and <code>t+o</code> is the first of "
"a block. They are merged in one flip."
msgstr ""
"<b>Case b</b>: <code>t</code> is free, and <code>t+o</code> is the first of "
"a block. They அரே merged in one flip."

#. type: Content of: <ul><li>
#: src/lessons/sort/pancake/GatesPancake.html:25
msgid ""
"<b>Case c</b>: <code>t</code> is free but both <code>t-1</code> and "
"<code>t+1</code> are the last elements of blocks.  Both blocks and "
"<code>t</code> are merged all together in 4 flips.  Beware, if either "
"<code>t-1</code> or <code>t+1</code> does not exist (because <code>t</code> "
"is 0 or max), only two flips are mandated."
msgstr ""
"<b>Case c</b>: <code>t</code> is free but both <code>t-1</code> and "
"<code>t+1</code> அரே the last elements of blocks.  Both தொகுதிகள் and "
"<code>t</code> அரே merged அனைத்தும் together in 4 flips.  Beware, if either "
"<code>t-1</code> or <code>t+1</code> does not exist (because <code>t</code> "
"is 0 or max), only two flips அரே mandated."

#. type: Content of: <ul><li>
#: src/lessons/sort/pancake/GatesPancake.html:33
msgid ""
"<b>Case d</b>: <code>t</code> is in a block but <code>t+o</code> is "
"free. They are merged in one flip."
msgstr ""
"<b>Case d</b>: <code>t</code> is in a block but <code>t+o</code> is free. "
"They அரே merged in one flip."

#. type: Content of: <ul><li>
#: src/lessons/sort/pancake/GatesPancake.html:38
msgid ""
"<b>Case e</b>: <code>t</code> is in a block and <code>t+o</code> is the "
"first element of a block. They are merged in one flip."
msgstr ""
"<b>Case e</b>: <code>t</code> is in a block and <code>t+o</code> is the "
"first தனிமம் of a block. They அரே merged in one flip."

#. type: Content of: <ul><li>
#: src/lessons/sort/pancake/GatesPancake.html:42
msgid ""
"<b>Case f</b>: <code>t</code> is in a block and <code>t+o</code> is the last "
"element of another block.  They are merged in 3 flips as follows."
msgstr ""
"<b>Case f</b>: <code>t</code> is in a block and <code>t+o</code> is the last "
"தனிமம் of another block.  They அரே merged in 3 flips அச் follows."

#. type: Content of: <ul><li>
#: src/lessons/sort/pancake/GatesPancake.html:46
msgid ""
"<b>Case g</b>: <code>t</code> is in a block of length k+1 (the last element "
"is <code>t+ko</code>), <code>t+(k+1)o</code> is either free or the last "
"element of another block. Both blocks are merged in 2 flips:"
msgstr ""
"<b>Case g</b>: <code>t</code> is in a block of length k+1 (the last தனிமம் is "
"<code>t+ko</code>), <code>t+(k+1)o</code> is either free or the last தனிமம் "
"of another block. Both தொகுதிகள் அரே merged in 2 flips:"

#. type: Content of: <ul><li>
#: src/lessons/sort/pancake/GatesPancake.html:49
msgid ""
"<b>Case h</b>: <code>t</code> is in a block of length k+1 (the last element "
"is <code>t+ko</code>), <code>t+(k+1)o</code> is the first element of another "
"block (the difference with case g is that <code>t+(k+1)o</code> is now the "
"<i>first</i> element of its block). Both blocks are merged in 2 flips:"
msgstr ""
"<b>Case h</b>: <code>t</code> is in a block of length k+1 (the last தனிமம் is "
"<code>t+ko</code>), <code>t+(k+1)o</code> is the first தனிமம் of another "
"block (the வேறுபாடு with case g is that <code>t+(k+1)o</code> is now the "
"<i>first</i> தனிமம் of its block). Both தொகுதிகள் அரே merged in 2 flips:"

#. type: Content of: <ul><li>
#: src/lessons/sort/pancake/GatesPancake.html:55
msgid ""
"<b>Case i</b>: <code>t</code> is in a block of length <code>n</code> (this "
"block contains all pancakes).  If <code>t</code> is not 1, the whole stack "
"is fliped. The algorithm then stops."
msgstr ""
"<b>Case i</b>: <code>t</code> is in a block of length <code>n</code> (this "
"block contains அனைத்தும் pancakes).  If <code>t</code> is not 1, the whole "
"stack is fliped. The படிமுறை then stops."

#. type: Content of: <p>
#: src/lessons/sort/pancake/GatesPancake.html:58
msgid ""
"Each iteration increases the size of the blocks, so the algorithm eventually "
"halts in all cases. A finer analysis would show that it takes at most "
"<code>(5n+5)/3</code> steps to sort the stack. That's better than the naïve "
"algorithm, that requires 2n-3 steps."
msgstr ""
"Each மறுசெய்கை increases the அளவு of the blocks, so the படிமுறை eventually "
"halts in அனைத்தும் cases. A finer பகுப்பாய்வு would காட்டு that it takes at "
"பெரும்பாலானவை <code>(5n+5)/3</code> படிகள் பெறுநர் வரிசைப்படுத்து the stack. "
"That's better than the naïve algorithm, that requires 2n-3 steps."

#. type: Content of: <h2>
#: src/lessons/sort/pancake/GatesPancake.html:61
msgid "Your turn"
msgstr "Your turn"

#. type: Content of: <p>
#: src/lessons/sort/pancake/GatesPancake.html:62
msgid ""
"You now have almost enough information to implement this algorithm on your "
"own. We just have to remove the last remaining ambiguities to ensure that "
"you implement exactly the same algorithm that the correction. If several "
"cases apply to your situation, then you should use the first given one. For "
"example, if both cases a and b apply (e.g., with <code>t-1</code> on case "
"<b>a</b> and <code>t+1</code> on case <b>b</b>), then you should apply the "
"flips of case <b>a</b>. If a given case applies for both <code>t+1</code> "
"and <code>t-1</code>, then you should apply it to <code>t+1</code>."
msgstr ""
"You now have almost enough செய்தி பெறுநர் implement this படிமுறை on your own. "
"We just have பெறுநர் அகற்று the last remaining ambiguities பெறுநர் ensure that "
"you implement exactly the same படிமுறை that the correction. If several cases "
"இடு பெறுநர் your situation, then you should use the first given one. க்கு "
"example, if both cases a and b இடு (e.g., with <code>t-1</code> on case "
"<b>a</b> and <code>t+1</code> on case <b>b</b>), then you should இடு the "
"flips of case <b>a</b>. If a given case applies க்கு both <code>t+1</code> "
"and <code>t-1</code>, then you should இடு it பெறுநர் <code>t+1</code>."

#. type: Content of: <p>
#: src/lessons/sort/pancake/GatesPancake.html:68
msgid ""
"Note that it is somehow harder than the other exercises we did so far, so "
"don't be surprised if you need more time to achieve this.  But do not give "
"up hope, you can do it!"
msgstr ""
"குறிப்பு that it is somehow harder than the மற்றொன்று exercises we did so far, "
"so don't be surprised if you need more time பெறுநர் achieve this.  But do not "
"give மேலே hope, you can do it!"

#. type: Attribute 'alt' of: <p><div>
#: src/lessons/sort/pancake/GatesPancake.html:71
msgid "Well, I need some help to start."
msgstr "Well, I need some உதவி பெறுநர் start."

#. type: Content of: <p><div>
#: src/lessons/sort/pancake/GatesPancake.html:72
msgid ""
"First write some helper functions such as <code>isFirst()</code> or "
"<code>isFree()</code>. This will simplify your main algorithm afterward, "
"that can be written very similarly to the explication above with a bunch of "
"if conditions. Factorizing code this way often helps making your code more "
"readable."
msgstr ""
"First write some helper செயல்பாடுகள் such அச் <code>isFirst()</code> or "
"<code>isFree()</code>. This will simplify your main படிமுறை afterward, that "
"can be written very similarly பெறுநர் the explication above with a bunch of "
"if conditions. Factorizing குறியீடு this way often helps making your குறியீடு "
"more readable."

#. type: Attribute 'alt' of: <p><div>
#: src/lessons/sort/pancake/GatesPancake.html:79
msgid "My code keeps failing and I don't know how to debug it."
msgstr "My குறியீடு keeps failing and I don't know how பெறுநர் debug it."

#. type: Content of: <p><div>
#: src/lessons/sort/pancake/GatesPancake.html:80
msgid ""
"To debug one world after the other and avoid that the messages of all worlds "
"get intermixed, you can write your debug function only if the method "
"<code>isSelected()</code> returns true. It will be so only for the entity "
"that is currently selected in the graphical interface, that is probably the "
"world you are currently debugging. This will help breaking the difficulty in "
"parts by debugging the situation one after the other."
msgstr ""
"பெறுநர் debug one world after the மற்றொன்று and avoid that the செய்திகள் of "
"அனைத்தும் worlds get intermixed, you can write your debug சார்பு only if the "
"method <code>isSelected()</code> returns true. It will be so only க்கு the "
"உருபொருள் that is currently தேர்ந்தெடுக்கப்பட்டது in the graphical interface, that "
"is probably the world you அரே currently debugging. This will உதவி breaking "
"the difficulty in பாகங்கள் by debugging the situation one after the other."

#. type: Content of: <p><div>
#: src/lessons/sort/pancake/GatesPancake.html:86
msgid ""
"In particular, it may help to print textually the state of the world each "
"time you enter the main loop."
msgstr ""
"In particular, it சி-வைகாசி உதவி பெறுநர் அச்சிடுக textually the state of the "
"world each time you enter the main loop."

#. type: Content of: <h1>
#: src/lessons/sort/pancake/CohenPancake.html:2
msgid "Faster Burned Pancake Sorting"
msgstr "Faster Burned Pancake Sorting"

#. type: Content of: <p>
#: src/lessons/sort/pancake/CohenPancake.html:4
msgid ""
"The Gates' algorithm that we saw in the previous exercise quickly sort a "
"stack of unburned pancakes by increasing the size of the blocks of sorted "
"pancakes. This is much faster that the naive algorithm which moves at each "
"step the largest pancake to the bottom of still unsorted pancakes. Gates' "
"algorithm manages to sort a stack of <i>n</i> pancakes in less than <i>(5n + "
"5)/3</i> steps in the worst case, while the naive algorithm requires at most "
"<i>2n</i> steps. Gates is thus about one third faster in the worst case."
msgstr ""
"The Gates' படிமுறை that we saw in the previous exercise quickly வரிசைப்படுத்து "
"a stack of unburned pancakes by increasing the அளவு of the தொகுதிகள் of "
"sorted pancakes. This is much faster that the naive படிமுறை which moves at "
"each படி the largest pancake பெறுநர் the கீழே of still unsorted pancakes. "
"Gates' படிமுறை manages பெறுநர் வரிசைப்படுத்து a stack of <i>n</i> pancakes in "
"less than <i>(5n + 5)/3</i> படிகள் in the worst case, while the naive படிமுறை "
"requires at பெரும்பாலானவை <i>2n</i> steps. Gates is thus பற்றி one third "
"faster in the worst case."

#. type: Content of: <p>
#: src/lessons/sort/pancake/CohenPancake.html:11
msgid ""
"In this exercise, we will explore an adaptation of the same idea to burnt "
"pancakes. This was first published by David X. Cohen and Manuel Blum. David "
"Cohen co-founded a few years later the Futurama TV show full of mathematical "
"jokes. Definitively, interesting people studied that little pancake "
"problem..."
msgstr ""
"In this exercise, we will explore an adaptation of the same idea பெறுநர் "
"burnt pancakes. This was first published by David ஃச். Cohen and Manuel Blum. "
"David Cohen co-founded a few years later the Futurama TV காட்டு full of "
"mathematical jokes. Definitively, interesting people studied that little "
"pancake problem..."

#. type: Content of: <p>
#: src/lessons/sort/pancake/CohenPancake.html:16
msgid ""
"The Cohen's algorithm is slightly easier than the Gates' one since it "
"distinguishes less cases:"
msgstr ""
"The Cohen's படிமுறை is slightly easier than the Gates' one since it "
"distinguishes less cases:"

#. type: Content of: <p>
#: src/lessons/sort/pancake/CohenPancake.html:18
msgid ""
"<b>Case 1:</b> At least one pancake is rightside up in the stack. Let "
"<i>p</i> be the largest such pancake.  Note that <i>p + 1</i> must therefore "
"be upside down, unless <i>p = n</i> (in which case there is no <i>p + 1</i> "
"pancake)."
msgstr ""
"<b>Case 1:</b> At least one pancake is rightside மேலே in the stack. Let "
"<i>p</i> be the largest such pancake.  குறிப்பு that <i>p + 1</i> must "
"therefore be upside down, unless <i>p = n</i> (in which case there is இல்லை "
"<i>p + 1</i> pancake)."

#. type: Content of: <ul><li>
#: src/lessons/sort/pancake/CohenPancake.html:22
msgid "<b>Case 1.a:</b> <i>p+1</i> is lower in the stack than <i>p</i>."
msgstr "<b>Case 1.a:</b> <i>p+1</i> is lower in the stack than <i>p</i>."

#. type: Content of: <ul><li>
#: src/lessons/sort/pancake/CohenPancake.html:23
msgid "<b>Case 1.b:</b> <i>p+1</i> is higher in the stack than <i>p</i>."
msgstr "<b>Case 1.b:</b> <i>p+1</i> is higher in the stack than <i>p</i>."

#. type: Content of: <ul><li>
#: src/lessons/sort/pancake/CohenPancake.html:24
msgid ""
"<b>Case 1.c:</b> There is no <i>p+1</i> because <i>p</i> is the largest "
"pancake in stack, that is because <i>p = n</i>.  If pancake <i>p</i> is "
"already in position, there is nothing to do. If not, you can move it to the "
"bottom of the stack in 2 flips:"
msgstr ""
"<b>Case 1.c:</b> There is இல்லை <i>p+1</i> because <i>p</i> is the largest "
"pancake in stack, that is because <i>p = n</i>.  If pancake <i>p</i> is "
"already in position, there is nothing பெறுநர் do. If not, you can move it "
"பெறுநர் the கீழே of the stack in 2 flips:"

#. type: Content of: <ul><li>
#: src/lessons/sort/pancake/CohenPancake.html:28
msgid ""
"<b>The trick is that the pancake <i>p</i> should never be considered "
"again.</b> Otherwise, you will consider that pancake again and again since "
"it's rightside up, and since that's the largest pancake. To leave that "
"pancake alone, you should keep track of the stack size that is still to be "
"sorted. Any traversal of the stack must then only consider these pancakes, "
"leaving alone the ones that are already in position at the bottom of the "
"stack."
msgstr ""
"<b>The trick is that the pancake <i>p</i> should ஒருபோதும் be considered "
"again.</b> Otherwise, you will consider that pancake again and again since "
"it's rightside up, and since that's the largest pancake. பெறுநர் leave that "
"pancake alone, you should keep மின்தடம் of the stack அளவு that is still பெறுநர் "
"be sorted. Any traversal of the stack must then only consider these "
"pancakes, leaving alone the ones that அரே already in position at the கீழே of "
"the stack."

#. type: Content of: <p>
#: src/lessons/sort/pancake/CohenPancake.html:36
msgid ""
"<b>Case 2:</b> All pancakes are downside. Again, we distinguish two "
"sub-cases."
msgstr ""
"<b>Case 2:</b> அனைத்தும் pancakes அரே downside. Again, we distinguish two sub-"
"cases."

#. type: Content of: <ul><li>
#: src/lessons/sort/pancake/CohenPancake.html:39
msgid ""
"<b>Case 2.a:</b> There is at least one <i>p</i> for which <i>p+1</i> is "
"higher than <i>p</i> (if there is several such <i>p</i>, take the largest "
"one)."
msgstr ""
"<b>Case 2.a:</b> There is at least one <i>p</i> க்கு which <i>p+1</i> is "
"higher than <i>p</i> (if there is several such <i>p</i>, take the largest "
"one)."

#. type: Content of: <ul><li>
#: src/lessons/sort/pancake/CohenPancake.html:43
msgid ""
"<b>Case 2.b:</b> Any pancake <i>p</i> is lower than pancake <i>p+1</i>. In "
"that case, we must have that setting:"
msgstr ""
"<b>Case 2.b:</b> Any pancake <i>p</i> is lower than pancake <i>p+1</i>. In "
"that case, we must have that setting:"

#. type: Content of: <p>
#: src/lessons/sort/pancake/CohenPancake.html:48
msgid ""
"As you can see, we achieve one join in 2 flips in the cases 1 or 2.a. Since "
"we need to achieve n joins to sort the stack, we can sort the stack in "
"<i>2n</i> steps if case 2.b does not occurs."
msgstr ""
"அச் you can see, we achieve one join in 2 flips in the cases 1 or 2.a. Since "
"we need பெறுநர் achieve n joins பெறுநர் வரிசைப்படுத்து the stack, we can "
"வரிசைப்படுத்து the stack in <i>2n</i> படிகள் if case 2.b does not occurs."

#. type: Content of: <p>
#: src/lessons/sort/pancake/CohenPancake.html:51
msgid ""
"That case 2.b requires a very different handling as it is obviously not "
"possible to achieve a join in only 2 flips.  But fortunately, we can "
"leverage the very specific setting of the stack in that case to provide the "
"following algorithm.  It sorts a stack in that exact configuration after "
"exactly <i>2n</i> steps."
msgstr ""
"That case 2.b requires a very different handling அச் it is obviously not "
"possible பெறுநர் achieve a join in only 2 flips.  But fortunately, we can "
"leverage the very specific setting of the stack in that case பெறுநர் provide "
"the following algorithm.  It sorts a stack in that exact உள்ளமைவு after "
"exactly <i>2n</i> steps."

#. type: Content of: <pre>
#: src/lessons/sort/pancake/CohenPancake.html:56
#, no-wrap
msgid ""
"Repeat n times\n"
"    Flip the whole stack of n pancakes\n"
"    Flip the top (n-1) pancakes\n"
msgstr ""
"Repeat n times\n"
"    Flip the whole stack of n pancakes\n"
"    Flip the மேலே (n-1) pancakes\n"

#. type: Content of: <p>
#: src/lessons/sort/pancake/CohenPancake.html:61
msgid ""
"It may sound somehow magic, but it actually works, as depicted on an example "
"below."
msgstr ""
"It சி-வைகாசி sound somehow magic, but it actually works, அச் depicted on an "
"example below."

#. type: Content of: <p>
#: src/lessons/sort/pancake/CohenPancake.html:65
msgid ""
"So, all in all, the Cohen algorithm manages to sort the stack of burnt "
"pancakes in <i>2n</i> steps in all cases.  Quite a win over the naive "
"algorithm for burnt pancakes that requires <i>3n</i> steps."
msgstr ""
"So, அனைத்தும் in all, the Cohen படிமுறை manages பெறுநர் வரிசைப்படுத்து the stack "
"of burnt pancakes in <i>2n</i> படிகள் in அனைத்தும் cases.  Quite a win வீச்சலகு "
"the naive படிமுறை க்கு burnt pancakes that requires <i>3n</i> steps."

#. type: Attribute 'alt' of: <p><div>
#: src/lessons/sort/pancake/CohenPancake.html:68
msgid "I cannot get it right."
msgstr "I cannot get it right."

#. type: Content of: <p><div>
#: src/lessons/sort/pancake/CohenPancake.html:69
msgid ""
"Don't worry. This exercise is very difficult, so it's ok if it does not work "
"right away for you.  Add some relevant logging to your code to understand "
"where it stop performing correctly.  Make sure to use the method "
"<code>isSelected()</code> so that your logs only appears in the currently "
"displayed world. In particular, it may help to print textually the state of "
"the world each time you enter the main loop."
msgstr ""
"Don't worry. This exercise is very difficult, so it's சரி if it does not வேலை"
" வலது away க்கு you.  கூட்டு some relevant logging பெறுநர் your குறியீடு பெறுநர் "
"understand where it நிறுத்து performing correctly.  Make sure பெறுநர் use the "
"method <code>isSelected()</code> so that your logs only appears in the "
"currently displayed world. In particular, it சி-வைகாசி உதவி பெறுநர் அச்சிடுக "
"textually the state of the world each time you enter the main loop."

#. type: Content of: <h1>
#: src/lessons/sort/baseball/Main.html:2
msgid "The Rainbow Baseball Game"
msgstr "The Rainbow Baseball Game"

#. type: Content of: <p>
#: src/lessons/sort/baseball/Main.html:4
msgid ""
"This activity is inspired from the orange game, from the \"Computer Science "
"Unplugged\" activities repository.  It was however heavily since then, first "
"for the CSIRL (my repository of <i>free</i> unplugged activities to "
"introduce computer science, available at "
"http://www.loria.fr/~quinson/Mediation/SMN/) and now for PLM."
msgstr ""
"This செய்கைப்பாடு is inspired இருந்து the ஆரஞ்சு game, இருந்து the "
"\"Computer Science Unplugged\" activities repository.  It was however "
"heavily since then, first க்கு the CSIRL (my களஞ்சியம் of <i>free</i> unplugged "
"activities பெறுநர் introduce கணிப்பொறி, கணிணி science, available at http://"
"www.loria.fr/~quinson/Mediation/SMN/) and now க்கு PLM."

#. type: Content of: <p>
#: src/lessons/sort/baseball/Main.html:8
msgid ""
"In the literature, the generalized form of this problem is known as the "
"pebble motion problem (the bases can be connected by any kind of graph, and "
"the affinity of pebbles with bases may be different). Another variant of "
"this problem is the well known 15-puzzle, with one player per base, and a "
"two dimensional square grid. Much more information about these problems can "
"be found on wikipedia, as usual."
msgstr ""
"In the literature, the generalized form of this problem is known அச் the "
"pebble இயக்கம் problem (the bases can be connected by any kind of graph, and "
"the affinity of pebbles with bases சி-வைகாசி be different). Another variant "
"of this problem is the well known 15-puzzle, with one player per base, and a "
"two dimensional square grid. Much more செய்தி பற்றி these problems can be "
"found on wikipedia, அச் usual."

#. type: Content of: <h3>
#: src/lessons/sort/baseball/Main.html:13
msgid ""
"How do you know that the naive algorithm won't loop on that initial "
"situation?"
msgstr ""
"How do you know that the naive படிமுறை won't loop on that initial situation?"

#. type: Content of: <p>
#: src/lessons/sort/baseball/Main.html:15
msgid ""
"Well, we simply tested all possible situations to see when this algorithm "
"loops and when it finds the correct solution. We found that it works for all "
"situations where no player is at home (there is 84 such situations for 4 "
"bases, once you take the symmetries into account). It obviously works for "
"some situations that do not respect this criteria (such as all situations it "
"encounters from one of those 84 boards to the final state), but that's "
"another story. Having such a criteria allows us to generate pseudo-random "
"initial situations for the first exercise for which the algorithm we propose "
"is guarenteed to work."
msgstr ""
"Well, we simply tested அனைத்தும் possible situations பெறுநர் see when this "
"படிமுறை வளையங்கள் and when it finds the சரியான solution. We found that it "
"works க்கு அனைத்தும் situations where இல்லை player is at வீடு (there is 84 such "
"situations க்கு 4 bases, once you take the symmetries into account). It "
"obviously works க்கு some situations that do not respect this criteria (such "
"அச் அனைத்தும் situations it encounters இருந்து one of those 84 boards பெறுநர் the "
"final state), but that's another story. Having such a criteria allows us "
"பெறுநர் generate pseudo-random initial situations க்கு the first exercise க்கு "
"which the படிமுறை we propose is guarenteed பெறுநர் work."

#. type: Content of: <p>
#: src/lessons/sort/baseball/Main.html:22
msgid ""
"We also explored bigger instances of the problem, and unfortunately, we have "
"no such criteria for them.  With 5 bases, the algorithm wrongly loops for 24 "
"of the 1824 possible boards where no player is home (that's 1.31%).  With 6 "
"bases, it fails on 1251 of the 58860 such boards (2.12%). With 7 bases, it "
"fails for 84444 out of 2633940 (that's 3.2%). I am still looking for a "
"criteria ensuring that the algorithm won't loop. If you discover one, please "
"report it. Ideally, it would be simple to enforce manually so that we can "
"use it during our unplugged activities."
msgstr ""
"We also explored bigger instances of the problem, and unfortunately, we have "
"இல்லை such criteria க்கு them.  With 5 bases, the படிமுறை wrongly வளையங்கள் க்கு "
"24 of the 1824 possible boards where இல்லை player is வீடு (that's 1.31%).  "
"With 6 bases, it fails on 1251 of the 58860 such boards (2.12%). With 7 "
"bases, it fails க்கு 84444 out of 2633940 (that's 3.2%). I am still looking "
"க்கு a criteria ensuring that the படிமுறை won't loop. If you கண்டுபிடி one, "
"please report it. Ideally, it would be simple பெறுநர் enforce manually so "
"that we can use it during our unplugged activities."

#. type: Content of: <ul><li>
#: src/lessons/sort/baseball/Main.html:32
msgid ""
"Other graphical representations could be proposed, such as a linear one (for "
"the existing exercises) or other ones (such as a grid or a tree, if an "
"exercise on this kind of graph proves interesting)."
msgstr ""
"மற்றொன்று graphical representations could be proposed, such அச் a நேரியல் one ("
"for the existing exercises) or மற்றொன்று ones (such அச் a வலைவாய் or a tree, if "
"an exercise on this kind of graph proves interesting)."

#. type: Content of: <ul><li>
#: src/lessons/sort/baseball/Main.html:34
msgid ""
"Other exercises on other algorithms on this variant, or on other variants "
"such as the 15-puzzle."
msgstr ""
"மற்றொன்று exercises on மற்றொன்று algorithms on this variant, or on மற்றொன்று "
"மாறுபாடுகள் such அச் the 15-puzzle."

#. type: Content of: <h3>
#: src/lessons/sort/baseball/short_desc.html:2
msgid "Rainbow baseball"
msgstr "Rainbow baseball"

#. type: Content of: <p>
#: src/lessons/sort/baseball/short_desc.html:4
msgid ""
"This is another funny variation on the sorting problem, adapting the main "
"sorting algorithms on an unusual context."
msgstr ""
"This is another funny variation on the sorting problem, adapting the main "
"sorting algorithms on an unusual context."

#. type: Content of: <h1>
#: src/lessons/sort/baseball/universe/BaseballWorld.html:2
msgid "Rainbow Baseball"
msgstr "Rainbow Baseball"

#. type: Content of: <p>
#: src/lessons/sort/baseball/universe/BaseballWorld.html:3
msgid ""
"The colors are represented by integers, between <code>0</code> and "
"<code>amount of bases -1</code>.  The hole is represented by the special "
"value <code>-1</code>.  The color of each base is its rank. So base "
"<code>1</code> is of color <code>1</code>.  In the graphical interface, the "
"base <code>0</code> is the dark blue one while the base <code>1</code> is "
"the fuscia one."
msgstr ""
"The colors அரே represented by integers, between <code>0</code> and "
"<code>amount of bases -1</code>.  The hole is represented by the special "
"மதிப்பு <code>-1</code>.  The color of each காரம் is its rank. So காரம் "
"<code>1</code> is of color <code>1</code>.  In the graphical interface, the "
"காரம் <code>0</code> is the dark நீலம் one while the காரம் <code>1</code> is the "
"fuscia one."

#. type: Content of: <p>
#: src/lessons/sort/baseball/universe/BaseballWorld.html:9
msgid ""
"Once every players on the field are in their home base, the hole should be "
"in the last base, that is of rank <code>getBasesAmount()-1</code>."
msgstr ""
"Once every players on the புலம் அரே in their வீடு base, the hole should be in "
"the last base, that is of rank <code>getBasesAmount()-1</code>."

#. type: Content of: <h2>
#: src/lessons/sort/baseball/universe/BaseballWorld.html:12
msgid "Functions to retrieve the world's dimensions"
msgstr "செயல்பாடுகள் பெறுநர் retrieve the world's dimensions"

#. type: Content of: <pre>
#: src/lessons/sort/baseball/universe/BaseballWorld.html:14
#, no-wrap
msgid "[!java|c]int [/!]getBasesAmount() [!scala]:Int[/!]"
msgstr "[!java|c]int [/!]getBasesAmount() [!scala]:Int[/!]"

#. type: Content of: outside any tag (error?)
#: src/lessons/sort/baseball/universe/BaseballWorld.html:15
msgid "Returns the amount of bases on this field."
msgstr "Returns the amount of bases on this field."

#. type: Content of: <pre>
#: src/lessons/sort/baseball/universe/BaseballWorld.html:17
#, no-wrap
msgid "[!java|c]int [/!]getPositionsAmount() [!scala]:Int[/!]"
msgstr "[!java|c]int [/!]getPositionsAmount() [!scala]:Int[/!]"

#. type: Content of: outside any tag (error?)
#: src/lessons/sort/baseball/universe/BaseballWorld.html:18
msgid "Returns the amount of player's positions per base on this field."
msgstr "Returns the amount of player's positions per காரம் on this field."

#. type: Content of: <h2>
#: src/lessons/sort/baseball/universe/BaseballWorld.html:20
msgid "Functions to retrieve the world's state"
msgstr "செயல்பாடுகள் பெறுநர் retrieve the world's state"

#. type: Content of: <pre>
#: src/lessons/sort/baseball/universe/BaseballWorld.html:22
#, no-wrap
msgid "[!java|c]int [/!]getHoleBase() [!scala]:Int[/!]"
msgstr "[!java|c]int [/!]getHoleBase() [!scala]:Int[/!]"

#. type: Content of: outside any tag (error?)
#: src/lessons/sort/baseball/universe/BaseballWorld.html:23
msgid "Returns the base in which the hole is located."
msgstr "Returns the காரம் in which the hole is located."

#. type: Content of: <pre>
#: src/lessons/sort/baseball/universe/BaseballWorld.html:25
#, no-wrap
msgid "[!java|c]int [/!]getHolePosition() [!scala]:Int[/!]"
msgstr "[!java|c]int [/!]getHolePosition() [!scala]:Int[/!]"

#. type: Content of: outside any tag (error?)
#: src/lessons/sort/baseball/universe/BaseballWorld.html:26
msgid "Returns the hole position within its base"
msgstr "Returns the hole position within its காரம்"

#. type: Content of: <pre>
#: src/lessons/sort/baseball/universe/BaseballWorld.html:28
#, no-wrap
msgid ""
"[!java|c]int [/!]getPlayerColor([!java|c]int [/!]base[!scala]:Int[/!], "
"[!java|c]int [/!]position[!scala]:Int[/!])  [!scala]:Int[/!]"
msgstr ""
"[!java|c]int [/!]getPlayerColor([!java|c]int [/!]base[!scala]:Int[/!], "
"[!java|c]int [/!]position[!scala]:Int[/!])  [!scala]:Int[/!]"

#. type: Content of: outside any tag (error?)
#: src/lessons/sort/baseball/universe/BaseballWorld.html:29
msgid "Returns the color of the player at a given location."
msgstr "Returns the color of the player at a given location."

#. type: Content of: outside any tag (error?)
#: src/lessons/sort/baseball/universe/BaseballWorld.html:32
msgid "Returns whether all players of the field are at home."
msgstr "Returns whether அனைத்தும் players of the புலம் அரே at home."

#. type: Content of: <pre>
#: src/lessons/sort/baseball/universe/BaseballWorld.html:34
#, no-wrap
msgid ""
"[!java]boolean [/!][!c]int [/!]isBaseSorted([!java|c]int [/!]base)  "
"[!scala]:Boolean[/!]"
msgstr ""
"[!java]boolean [/!][!c]int [/!]isBaseSorted([!java|c]int [/!]base)  [!scala]:"
"Boolean[/!]"

#. type: Content of: outside any tag (error?)
#: src/lessons/sort/baseball/universe/BaseballWorld.html:35
msgid "Returns whether all players of a given base are at home."
msgstr "Returns whether அனைத்தும் players of a given காரம் அரே at home."

#. type: Content of: <h2>
#: src/lessons/sort/baseball/universe/BaseballWorld.html:39
msgid "Functions to change the world"
msgstr "செயல்பாடுகள் பெறுநர் change the world"

#. type: Content of: <pre>
#: src/lessons/sort/baseball/universe/BaseballWorld.html:41
#, no-wrap
msgid ""
"[!java|c]void [/!]move([!java|c]int [/!]base[!scala]:Int[/!], [!java|c]int "
"[/!]position[!scala]:Int[/!])"
msgstr ""
"[!java|c]void [/!]move([!java|c]int [/!]base[!scala]:Int[/!], [!java|c]int "
"[/!]position[!scala]:Int[/!])"

#. type: Content of: outside any tag (error?)
#: src/lessons/sort/baseball/universe/BaseballWorld.html:42
msgid ""
"Moves a given player into the hole. This throws an IllegalArgumentException "
"if the specified player is not near the hole (at most one base away)."
msgstr ""
"Moves a given player into the hole. This throws an IllegalArgumentException "
"if the specified player is not near the hole (at பெரும்பாலானவை one காரம் away)."

#. type: Content of: <h1>
#: src/lessons/sort/baseball/NaiveBaseball.html:2
msgid "Naive Rainbow Baseball"
msgstr "Naive Rainbow Baseball"

#. type: Content of: <p>
#: src/lessons/sort/baseball/NaiveBaseball.html:4
msgid ""
"Today, the buggles decided to play a baseball game, but they are rather out "
"of luck, actually.  First, kinda forgot the rules, and ... well ... they "
"cannot find the ball and bats again.  So they decided to \"adapt a bit\" the "
"rules. As the are no ball, the buggles can only running around the field, "
"what they do happily: for a while, all attending buggle run at full speed in "
"all directions around the field."
msgstr ""
"Today, the buggles decided பெறுநர் play a baseball game, but they அரே rather "
"out of luck, actually.  First, kinda forgot the rules, and ... well ... they "
"cannot கண்டுபிடி the ball and பாட்ச் again.  So they decided பெறுநர் "
"\"adapt a bit\" the rules. அச் the அரே இல்லை ball, the buggles can only "
"running around the field, what they do happily: க்கு a while, அனைத்தும் "
"attending buggle ஓடு at full விரைவு in அனைத்தும் directions around the field."

#. type: Content of: <p>
#: src/lessons/sort/baseball/NaiveBaseball.html:10
msgid ""
"But after a few collisions, they decide to invent new rules to organize a "
"bit the game: They make one team per base and two players per team. One of "
"the teams has only one player so that its base has an empty location. Then, "
"the players are dispatched randomly around the bases, and the game for them "
"is to reach their home base. The whole game stops when all players are "
"home.  There is no winning team: either all players win, or they all "
"lose. Actually, this game is very different from the original baseball. The "
"only rule that remains is that you can only run around the field, from one "
"base to the next one, without crossing middle of the field."
msgstr ""
"But after a few collisions, they decide பெறுநர் invent புதிய rules பெறுநர் "
"organize a துணுக்கு the game: They make one team per காரம் and two players per "
"team. One of the teams has only one player so that its காரம் has an வெறுமை "
"location. Then, the players அரே dispatched randomly around the bases, and "
"the game க்கு them is பெறுநர் reach their வீடு base. The whole game stops when "
"அனைத்தும் players அரே home.  There is இல்லை winning team: either அனைத்தும் "
"players win, or they அனைத்தும் lose. Actually, this game is very different "
"இருந்து the original baseball. The only விதி that remains is that you can "
"only ஓடு around the field, இருந்து one காரம் பெறுநர் the அடுத்தது one, without "
"crossing middle of the field."

#. type: Content of: <p>
#: src/lessons/sort/baseball/NaiveBaseball.html:18
msgid ""
"Now, they are asking you to help them deciding who and when should move so "
"that each player returns to its base. Only one buggle can move at each "
"round, from its position to the empty spot.  The maximal distance that a "
"buggle can cover in one round is of one base."
msgstr ""
"Now, they அரே asking you பெறுநர் உதவி them deciding who and when should move "
"so that each player returns பெறுநர் its base. Only one buggle can move at "
"each round, இருந்து its position பெறுநர் the வெறுமை spot.  The maximal "
"distance that a buggle can cover in one round is of one base."

#. type: Content of: <p>
#: src/lessons/sort/baseball/NaiveBaseball.html:22
msgid ""
"So, at each round, the empty spot is on one base (say <code>B</code>), and "
"you should decide which buggle enters that empty spot. There is four "
"candidates (two from base <code>B-1</code> and two from base "
"<code>B+1</code>). Actually, there is a fifth candidate since the buggle "
"that is on the same base than the empty spot can change its position, but "
"that's not really helping."
msgstr ""
"So, at each round, the வெறுமை spot is on one காரம் (say <code>B</code>), and "
"you should decide which buggle enters that வெறுமை spot. There is நான்கு, நாலடி"
", நான்கடி candidates (two இருந்து காரம் <code>B-1</code> and two இருந்து காரம் "
"<code>B+1</code>). Actually, there is a fifth candidate since the buggle "
"that is on the same காரம் than the வெறுமை spot can change its position, but "
"that's not really helping."

#. type: Content of: <h3>
#: src/lessons/sort/baseball/NaiveBaseball.html:27
msgid "The Naïve algorithm"
msgstr "The Naïve படிமுறை"

#. type: Content of: <p>
#: src/lessons/sort/baseball/NaiveBaseball.html:29
msgid ""
"In this exercise, we will first explore a very simple algorithm. To decide "
"which of the four candidate buggles should enter the empty spot, we first "
"restrict ourselves and decide that buggles can only turn clockwise. Then, "
"from the two remaining candidates, we pick the one that has the largest "
"distance to cover to reach its base (turning clockwise). Click on the demo "
"button: this works rather well in practice."
msgstr ""
"In this exercise, we will first explore a very simple algorithm. பெறுநர் "
"decide which of the நான்கு, நாலடி, நான்கடி candidate buggles should enter the "
"வெறுமை spot, we first restrict ourselves and decide that buggles can only "
"turn clockwise. Then, இருந்து the two remaining candidates, we pick the one "
"that has the largest distance பெறுநர் cover பெறுநர் reach its காரம் (turning "
"clockwise). Click on the demo button: this works rather well in practice."

#. type: Content of: <p>
#: src/lessons/sort/baseball/NaiveBaseball.html:35
msgid ""
"It's hard to find a simpler algorithm for this problem: While it's not "
"sorted, search for the base containing the candidate buggles: if the hole is "
"in base <code>B</code>, it's the base <code>B+1</code>, modulo the amount of "
"bases. Then, compute the distance that each buggle of that base still has to "
"run to reach its base (0 if it's already home). Once you found the buggle "
"that should enter the empty spot, just use the <code>move</code> method on "
"it, and iterate."
msgstr ""
"It's hard பெறுநர் கண்டுபிடி a simpler படிமுறை க்கு this problem: While it's not "
"sorted, தேடல் க்கு the காரம் containing the candidate buggles: if the hole is "
"in காரம் <code>B</code>, it's the காரம் <code>B+1</code>, modulo the amount of "
"bases. Then, compute the distance that each buggle of that காரம் still has "
"பெறுநர் ஓடு பெறுநர் reach its காரம் (0 if it's already home). Once you found "
"the buggle that should enter the வெறுமை spot, just use the <code>move</code> "
"method on it, and iterate."

#. type: Content of: <p>
#: src/lessons/sort/baseball/NaiveBaseball.html:41
msgid ""
"The main difficulty should be to get the few equations right: determining "
"the base next to the hole should be easy, but determining the distance that "
"a player has to cover may reveal a bit more challenging. Don't hesitate to "
"draw pictures on a paper to cover all possible cases. It should not be that "
"difficult either: there is not that many cases after all."
msgstr ""
"The main difficulty should be பெறுநர் get the few equations வலது: determining "
"the காரம் அடுத்தது பெறுநர் the hole should be easy, but determining the "
"distance that a player has பெறுநர் cover சி-வைகாசி reveal a துணுக்கு more "
"challenging. Don't hesitate பெறுநர் draw pictures on a paper பெறுநர் cover "
"அனைத்தும் possible cases. It should not be that difficult either: there is not "
"that many cases after all."

#. type: Content of: <h1>
#: src/lessons/sort/baseball/SelectBaseball.html:2
msgid "Selection Baseball"
msgstr "தேர்வு Baseball"

#. type: Content of: <p>
#: src/lessons/sort/baseball/SelectBaseball.html:4
msgid ""
"The previous algorithm is very pleasant: it's rather simple and rather fast "
"to implement, but unfortunately, it is also rather wrong! In some cases, it "
"never stops, which is obviously bad. If you don't believe it, just copy "
"paste your previous code, and hit the run button. The first world of this "
"exercise is one of these unfortunate situations that drives our previous "
"algorithm crazy."
msgstr ""
"The previous படிமுறை is very pleasant: it's rather simple and rather fast "
"பெறுநர் implement, but unfortunately, it is also rather wrong! In some cases, "
"it ஒருபோதும் stops, which is obviously bad. If you don't believe it, just "
"நகலெடு ஒட்டு your previous code, and hit the ஓடு button. The first world of "
"this exercise is one of these unfortunate situations that drives our "
"previous படிமுறை crazy."

#. type: Content of: <p>
#: src/lessons/sort/baseball/SelectBaseball.html:10
msgid ""
"So we have to find another algorithm, preferably one that works in all "
"cases."
msgstr ""
"So we have பெறுநர் கண்டுபிடி another algorithm, preferably one that works in "
"அனைத்தும் cases."

#. type: Content of: <p>
#: src/lessons/sort/baseball/SelectBaseball.html:12
msgid ""
"For that, the best solution is to start from a well known algorithm instead "
"of trying to invent a new one from scratch as we just did. When you think a "
"bit about this problem, this can is very similar to a sorting problem: Just "
"make sure that the players are sorted by their colors and you're set. And "
"while we are at it, let's generalize the game to allow more that 4 bases."
msgstr ""
"க்கு that, the best நீர்மக்கூழ் is பெறுநர் தொடங்கு இருந்து a well known படிமுறை "
"instead of trying பெறுநர் invent a புதிய one இருந்து scratch அச் we just did. "
"When you think a துணுக்கு பற்றி this problem, this can is very similar பெறுநர் "
"a sorting problem: Just make sure that the players அரே sorted by their "
"colors and you're set. And while we அரே at it, let's generalize the game "
"பெறுநர் allow more that 4 bases."

#. type: Content of: <p>
#: src/lessons/sort/baseball/SelectBaseball.html:18
msgid ""
"Let's adapt the selection sort to our situation. The big lines of the "
"algorithm is then \"for each base, select the players that should occupy "
"this base and make sure that they come to their position\". This way, we "
"will grow an sorted area where all players are already sorted (and never "
"changed) while the unsorted area shrinks."
msgstr ""
"Let's adapt the தேர்வு வரிசைப்படுத்து பெறுநர் our situation. The big வரிகள் of "
"the படிமுறை is then \"for each base, தேர்ந்தெடு the players that should occupy "
"this காரம் and make sure that they come பெறுநர் their position\". This way, we "
"will grow an sorted area where அனைத்தும் players அரே already sorted (and "
"ஒருபோதும் changed) while the unsorted area shrinks."

#. type: Content of: <p>
#: src/lessons/sort/baseball/SelectBaseball.html:24
msgid ""
"Selecting the player should be no problem; Do not hesitate to define some "
"methods such as <code>findPlayer()</code> or "
"<code>findPlayerBase()</code>. This will ensure that your code remains "
"understandable."
msgstr ""
"Selecting the player should be இல்லை problem; Do not hesitate பெறுநர் define "
"some முறைகள் such அச் <code>findPlayer()</code> or <code>findPlayerBase()</"
"code>. This will ensure that your குறியீடு remains understandable."

#. type: Content of: <p>
#: src/lessons/sort/baseball/SelectBaseball.html:28
msgid ""
"The most problematic aspect is to move the selected players into "
"position. For that, you have to move the hole to the position where the "
"player is, and then move both the player and the hole to the base that is "
"next to the player's goal (probably in a loop), and finally put the player "
"in the right position of its target base."
msgstr ""
"The பெரும்பாலானவை problematic aspect is பெறுநர் move the தேர்ந்தெடுக்கப்பட்டது "
"players into position. க்கு that, you have பெறுநர் move the hole பெறுநர் the "
"position where the player is, and then move both the player and the hole "
"பெறுநர் the காரம் that is அடுத்தது பெறுநர் the player's goal (probably in a loop)"
", and finally put the player in the வலது position of its target base."

#. type: Content of: <p>
#: src/lessons/sort/baseball/SelectBaseball.html:33
msgid ""
"As often in programming, the devil is in the details: there is a bunch of "
"corner cases that you should detect and deal with correctly, such as the "
"cases where the player is already in the base (but not in the position that "
"you would like), or when the hole is on the right of the player (probably "
"when you sort the first base). But you will find and hunt these while "
"debugging your code."
msgstr ""
"அச் often in programming, the devil is in the details: there is a bunch of "
"corner cases that you should detect and deal with correctly, such அச் the "
"cases where the player is already in the காரம் (but not in the position that "
"you would like), or when the hole is on the வலது of the player (probably "
"when you வரிசைப்படுத்து the first base). But you will கண்டுபிடி and hunt these "
"while debugging your code."

#. type: Content of: <h1>
#: src/lessons/sort/baseball/InsertBaseball.html:2
msgid "Insertion Baseball"
msgstr "Insertion Baseball"

#. type: Content of: <p>
#: src/lessons/sort/baseball/InsertBaseball.html:4
msgid ""
"The good point of adapting the selection sort to the baseball problem is "
"that we know that it works (provided that our adaptation is correct). That's "
"much better than the first naive algorithm, that was unable to converge to "
"the solution in some situations. But actually, the selection sort is not "
"perfect either as it requires a lot of swaps: we have to bring the hole to "
"the selected player and then both the player and hole in position, and "
"more. We can do better."
msgstr ""
"The good புள்ளியம் of adapting the தேர்வு வரிசைப்படுத்து பெறுநர் the baseball "
"problem is that we know that it works (provided that our adaptation is "
"correct). That's much better than the first naive algorithm, that was unable "
"பெறுநர் converge பெறுநர் the நீர்மக்கூழ் in some situations. But actually, the "
"தேர்வு வரிசைப்படுத்து is not perfect either அச் it requires a நிறைய of swaps: we "
"have பெறுநர் bring the hole பெறுநர் the தேர்ந்தெடுக்கப்பட்டது player and then both "
"the player and hole in position, and more. We can do better."

#. type: Content of: <p>
#: src/lessons/sort/baseball/InsertBaseball.html:10
msgid ""
"For example, each player can run quite a long way from its initial position "
"to its target solution.  Instead, it may be more interesting to split the "
"field in two parts: one on the left where all players are sorted relatively "
"to each others, and one on the right where the players are still at their "
"initial positions. Then, at each iteration, we take the player at the border "
"between the sorted and unsorted areas (that is, the left-most player of the "
"unsorted area) and move it to the left (within the sorted area) until it "
"reaches its position (that is, until the position where it's bigger that its "
"left neighbor). This would at least reduce the travel of players to the "
"sorted area as we use the first one on the border."
msgstr ""
"க்கு example, each player can ஓடு quite a long way இருந்து its initial "
"position பெறுநர் its target solution.  Instead, it சி-வைகாசி be more "
"interesting பெறுநர் split the புலம் in two parts: one on the இடது where அனைத்தும்"
" players அரே sorted relatively பெறுநர் each others, and one on the வலது where "
"the players அரே still at their initial positions. Then, at each iteration, "
"we take the player at the border between the sorted and unsorted areas (that "
"is, the left-most player of the unsorted area) and move it பெறுநர் the இடது ("
"within the sorted area) until it reaches its position (that is, until the "
"position where it's bigger that its இடது neighbor). This would at least "
"reduce the travel of players பெறுநர் the sorted area அச் we use the first one "
"on the border."

#. type: Content of: <p>
#: src/lessons/sort/baseball/InsertBaseball.html:19
msgid ""
"Actually, that's exactly what an insertion sort would do: maintain a sorted "
"area on the left, and put iteratively the player on the border to its "
"position within the sorted area. This is good, as we know that our algorithm "
"is not inherently flawed since we adapt a well known one."
msgstr ""
"Actually, that's exactly what an insertion வரிசைப்படுத்து would do: maintain a "
"sorted area on the left, and put iteratively the player on the border பெறுநர் "
"its position within the sorted area. This is good, அச் we know that our "
"படிமுறை is not inherently flawed since we adapt a well known one."

#. type: Content of: <p>
#: src/lessons/sort/baseball/InsertBaseball.html:23
msgid ""
"The easiest to adapt the insertion sort to the baseball problem is to "
"consider all positions as adjacent and forget about bases. For that, we "
"define the methods <code>getColor[!c]Insert[/!](pos)</code>, "
"<code>move[!c]Insert[/!](pos)</code> and "
"<code>getHole[!c]Insert[/!]()</code> that all use a unique integer to "
"designate a given position. These functions simply convert between the way "
"to specify a position and then call the usual functions to interact with the "
"world. If you have an <code>index</code> and want to convert it into a "
"<code>base,pos</code>, then <code>base=index/2</code> and "
"<code>pos=index%2</code>. To compute the reverse, "
"<code>index=base*2+pos</code> (this works because "
"<code>getPositionsAmount()</code> always returns 2)."
msgstr ""
"The easiest பெறுநர் adapt the insertion வரிசைப்படுத்து பெறுநர் the baseball "
"problem is பெறுநர் consider அனைத்தும் positions அச் adjacent and forget பற்றி "
"bases. க்கு that, we define the முறைகள் <code>getColor[!c]Insert[/!](pos)</"
"code>, <code>move[!c]Insert[/!](pos)</code> and <code>getHole[!c]Insert[/"
"!]()</code> that அனைத்தும் use a unique முழு எண் பெறுநர் designate a given "
"position. These செயல்பாடுகள் simply convert between the way பெறுநர் specify a "
"position and then call the usual செயல்பாடுகள் பெறுநர் interact with the world. "
"If you have an <code>index</code> and want பெறுநர் convert it into a "
"<code>base,pos</code>, then <code>base=index/2</code> and <code>pos=index%2</"
"code>. பெறுநர் compute the reverse, <code>index=base*2+pos</code> (this works "
"because <code>getPositionsAmount()</code> எப்போதும் returns 2)."

#. type: Content of: <p>
#: src/lessons/sort/baseball/InsertBaseball.html:32
msgid ""
"For the algorithm itself, you should first move the hole to the position "
"1. The position 0 is considered to be the sorted area (of size 1 for now) "
"while the area above 2 is the unsorted area.  Then comes an iteration to "
"sort each element of the unsorted area. Since this iteration is a bit "
"complex, you should think of its loop invariant, that is, the condition that "
"is true before and after the loop and which explains that the loop fulfills "
"its goal. Here, the loop invariant is twofold: First, the hole is between "
"the sorted area and the unsorted area, and then, the every elements of the "
"sorted area are ... well sorted relatively to their neighbors."
msgstr ""
"க்கு the படிமுறை itself, you should first move the hole பெறுநர் the position "
"1. The position 0 is considered பெறுநர் be the sorted area (of அளவு 1 க்கு now)"
" while the area above 2 is the unsorted area.  Then comes an மறுசெய்கை பெறுநர் "
"வரிசைப்படுத்து each தனிமம் of the unsorted area. Since this மறுசெய்கை is a "
"துணுக்கு complex, you should think of its loop invariant, that is, the "
"condition that is true before and after the loop and which explains that the "
"loop fulfills its goal. Here, the loop invariant is twofold: First, the hole "
"is between the sorted area and the unsorted area, and then, the every "
"elements of the sorted area அரே ... well sorted relatively பெறுநர் their "
"neighbors."

#. type: Content of: <p>
#: src/lessons/sort/baseball/InsertBaseball.html:40
msgid ""
"Then, the loop body to sort an element should first descend the hole and the "
"elements within the sorted area until the element is larger than the element "
"before in the sorted area (2 moves per position to travel), and then move "
"the hole back to its position between the sorted and unsorted areas (1 move "
"per position)."
msgstr ""
"Then, the loop body பெறுநர் வரிசைப்படுத்து an தனிமம் should first descend the "
"hole and the elements within the sorted area until the தனிமம் is larger than "
"the தனிமம் before in the sorted area (2 moves per position பெறுநர் travel), "
"and then move the hole பின் பெறுநர் its position between the sorted and "
"unsorted areas (1 move per position)."

#. type: Content of: <p>
#: src/lessons/sort/baseball/InsertBaseball.html:44
msgid ""
"Once you insert the last element within the sorted area, your whole set is "
"sorted and you're done.  I preserve the surprise of the border cases that "
"will require some little adjustments to your algorithm to make it work "
"properly :)"
msgstr ""
"Once you செருகவும் the last தனிமம் within the sorted area, your whole கணம் is "
"sorted and you're done.  I preserve the surprise of the border cases that "
"will require some little adjustments பெறுநர் your படிமுறை பெறுநர் make it வேலை "
"properly :)"

#. type: Content of: <h1>
#: src/lessons/sort/baseball/BubbleBaseball.html:2
msgid "Bubble Baseball"
msgstr "Bubble Baseball"

#. type: Content of: <p>
#: src/lessons/sort/baseball/BubbleBaseball.html:4
msgid ""
"Crap, we adapted the insertion sort because our selection sort required too "
"much moves to get the selected players to their position, but the insertion "
"sort requires an inordinate amount of changes to get the border elements to "
"their position within the sorted area without mixing the already sorted "
"elements. At the end of the day, our selection variant was more efficient "
"with at most <code>3*amountOfBase</code> moves to sort one element (1 to get "
"the hole alongside with the player, and 2 to get the hole+player in "
"position) while our insertion variant requires at most "
"<code>3*amountOfPlayers</code> to sort one element (2 to descend the hole "
"and player in position, 1 to get the hole back to its position). That's "
"twice as bad as there is two players per base. It may be possible to improve "
"the insertion sort by moving by more than one element when descending, but "
"it seems uneasy (at least, while not mixing the already sorted elements) and "
"it would probably only ensure that our insertion variant becomes as "
"efficient as our selection variant, not dramatically better."
msgstr ""
"Crap, we adapted the insertion வரிசைப்படுத்து because our தேர்வு வரிசைப்படுத்து "
"required too much moves பெறுநர் get the தேர்ந்தெடுக்கப்பட்டது players பெறுநர் their "
"position, but the insertion வரிசைப்படுத்து requires an inordinate amount of "
"changes பெறுநர் get the border elements பெறுநர் their position within the "
"sorted area without mixing the already sorted elements. At the end of the "
"day, our தேர்வு variant was more efficient with at பெரும்பாலானவை "
"<code>3*amountOfBase</code> moves பெறுநர் வரிசைப்படுத்து one தனிமம் (1 பெறுநர் "
"get the hole alongside with the player, and 2 பெறுநர் get the hole+player in "
"position) while our insertion variant requires at பெரும்பாலானவை "
"<code>3*amountOfPlayers</code> பெறுநர் வரிசைப்படுத்து one தனிமம் (2 பெறுநர் "
"descend the hole and player in position, 1 பெறுநர் get the hole பின் பெறுநர் "
"its position). That's twice அச் bad அச் there is two players per base. It "
"சி-வைகாசி be possible பெறுநர் improve the insertion வரிசைப்படுத்து by moving by "
"more than one தனிமம் when descending, but it seems uneasy (at least, while "
"not mixing the already sorted elements) and it would probably only ensure "
"that our insertion variant becomes அச் efficient அச் our தேர்வு variant, not "
"dramatically better."

#. type: Content of: <p>
#: src/lessons/sort/baseball/BubbleBaseball.html:16
msgid ""
"If we cannot make the sort faster, we can make it easier. If you think about "
"it, it seems rather natural to adapt the bubble sort to this problem: the "
"hole becomes the bubble that moves up and down, sorting a bit the array "
"during each traversal. The big lines are simply: \"while it's not sorted, "
"move the hole down to base 0 (moving the biggest player of each base at each "
"step) and then back to the maximal base (moving the smallest player of each "
"base)\". After a while, <code>isSorted()</code> will return true and your "
"algorithm will stop."
msgstr ""
"If we cannot make the வரிசைப்படுத்து faster, we can make it easier. If you "
"think பற்றி it, it seems rather natural பெறுநர் adapt the bubble வரிசைப்படுத்து "
"பெறுநர் this problem: the hole becomes the bubble that moves மேலே and down, "
"sorting a துணுக்கு the array during each traversal. The big வரிகள் அரே simply: "
"\"while it's not sorted, move the hole down பெறுநர் காரம் 0 (moving the "
"biggest player of each காரம் at each step) and then பின் பெறுநர் the maximal "
"காரம் (moving the smallest player of each base)\". After a while, "
"<code>isSorted()</code> will return true and your படிமுறை will stop."

#. type: Content of: <p>
#: src/lessons/sort/baseball/BubbleBaseball.html:22
msgid ""
"This is so easy that we introduce another variant of the problem, with more "
"than two players per base.  But actually, that shouldn't block you very "
"long, should it?"
msgstr ""
"This is so easy that we introduce another variant of the problem, with more "
"than two players per base.  But actually, that shouldn't block you very "
"long, should it?"

#. type: Content of: <p>
#: src/lessons/sort/baseball/BubbleBaseball.html:25
msgid ""
"Surprisingly, the bubble sort variant requires ways less moves than the "
"other variants. This is astonishing because usually, the bubble sort "
"performs much worse than the others sorts, but it comes from the very good "
"match between its big lines and the baseball universe. It actually happens "
"rather often that a pleasantly written algorithm performs very decently. But "
"this is not an universal rule either, as demonstrated by the naive algorithm "
"of the first exercise, that was nice, simple and wrong ;)"
msgstr ""
"Surprisingly, the bubble வரிசைப்படுத்து variant requires ways less moves than "
"the மற்றொன்று variants. This is astonishing because usually, the bubble "
"வரிசைப்படுத்து performs much worse than the others sorts, but it comes இருந்து "
"the very good match between its big வரிகள் and the baseball universe. It "
"actually happens rather often that a pleasantly written படிமுறை performs "
"very decently. But this is not an universal விதி either, அச் demonstrated by "
"the naive படிமுறை of the first exercise, that was nice, simple and wrong ;)"

#. type: Content of: <h1>
#: src/plm/universe/turtles/TurtleWorld.html:2
msgid "The universe of turtles"
msgstr "The அண்டம் of turtles"

#. type: Content of: <p>
#: src/plm/universe/turtles/TurtleWorld.html:4
msgid "This is an adaptation of LOGO for the Programmer's Learning Machine."
msgstr ""
"This is an adaptation of அடையாளம் க்கு the Programmer's Learning Machine."

#. type: Content of: <p>
#: src/plm/universe/turtles/TurtleWorld.html:6
msgid ""
"It is directly inspired from the work of the mathematician Seymour Papert in "
"the 60's. Inspired from the swiss psycholog Jean Piaget, he came up with a "
"learning method called LOGO to teach programming to young childs. The world "
"is full of turtles which leave a painting where they go and which respond to "
"simple orders."
msgstr ""
"It is directly inspired இருந்து the வேலை of the mathematician Seymour Papert "
"in the 60's. Inspired இருந்து the swiss psycholog Jean Piaget, he came மேலே "
"with a learning method called அடையாளம் பெறுநர் teach programming பெறுநர் young "
"childs. The world is full of turtles which leave a painting where they go "
"and which respond பெறுநர் simple orders."

#. type: Content of: <h2>
#: src/plm/universe/turtles/TurtleWorld.html:12
msgid "Functions to move the turtle"
msgstr "செயல்பாடுகள் பெறுநர் move the turtle"

#. type: Content of: <pre>
#: src/plm/universe/turtles/TurtleWorld.html:14
#, no-wrap
msgid ""
"[!java|c]void [/!]forward([!java|c]double [/!]steps[!scala]:Double[/!])\n"
"[!java|c]void [/!]backward([!java|c]double [/!]steps[!scala]:Double[/!])"
msgstr ""
"[!java|c]void [/!]forward([!java|c]double [/!]steps[!scala]:Double[/!])\n"
"[!java|c]void [/!]backward([!java|c]double [/!]steps[!scala]:Double[/!])"

#. type: Content of: outside any tag (error?)
#: src/plm/universe/turtles/TurtleWorld.html:16
msgid "Moves forward or backward of the requested amount of steps."
msgstr "Moves forward or பின்னோக்கு of the requested amount of steps."

#. type: Content of: <pre>
#: src/plm/universe/turtles/TurtleWorld.html:18
#, no-wrap
msgid ""
"[!java|c]void [/!]right([!java|c]double [/!]angle[!scala]:Double[/!])\n"
"[!java|c]void [/!]left([!java|c]double [/!]angle[!scala]:Double[/!])"
msgstr ""
"[!java|c]void [/!]right([!java|c]double [/!]angle[!scala]:Double[/!])\n"
"[!java|c]void [/!]left([!java|c]double [/!]angle[!scala]:Double[/!])"

#. type: Content of: outside any tag (error?)
#: src/plm/universe/turtles/TurtleWorld.html:20
msgid "Turns left or right of the given angle (in degrees)."
msgstr "Turns இடது or வலது of the given angle (in degrees)."

#. type: Content of: <pre>
#: src/plm/universe/turtles/TurtleWorld.html:22
#: src/lessons/lander/universe/DelegatingLanderWorld.html:10
#, no-wrap
msgid ""
"[!java|c]double [/!]getX()[!scala]:Double[/!]\n"
"[!java|c]double [/!]getY()[!scala]:Double[/!]"
msgstr ""
"[!java|c]double [/!]getX()[!scala]:Double[/!]\n"
"[!java|c]double [/!]getY()[!scala]:Double[/!]"

#. type: Content of: outside any tag (error?)
#: src/plm/universe/turtles/TurtleWorld.html:24
msgid ""
"Returns the current position of the turtle.  Note that the point (0,0) is on "
"the top left corner, as it is often the case in Computer Science."
msgstr ""
"Returns the மின்னோட்ட்ம், ஓட்டம் position of the turtle.  குறிப்பு that the புள்ளியம் "
"(0,0) is on the மேலே இடது corner, அச் it is often the case in கணிப்பொறி, கணிணி "
"Science."

#. type: Content of: <pre>
#: src/plm/universe/turtles/TurtleWorld.html:27
#, no-wrap
msgid ""
"[!java|c]void [/!]setX([!java|c]double [/!]x[!scala]:Double[/!])\n"
"[!java|c]void [/!]setY([!java|c]double [/!]y[!scala]:Double[/!])\n"
"[!java|c]void [/!]setPos([!java|c]double [/!]x[!scala]:Double[/!], "
"[!java|c]double [/!]y[!scala]:Double[/!])"
msgstr ""
"[!java|c]void [/!]setX([!java|c]double [/!]x[!scala]:Double[/!])\n"
"[!java|c]void [/!]setY([!java|c]double [/!]y[!scala]:Double[/!])\n"
"[!java|c]void [/!]setPos([!java|c]double [/!]x[!scala]:Double[/!], [!java|c]"
"double [/!]y[!scala]:Double[/!])"

#. type: Content of: outside any tag (error?)
#: src/plm/universe/turtles/TurtleWorld.html:30
msgid "Teleports the turtle to a new position (without leaving any trace)."
msgstr ""
"Teleports the turtle பெறுநர் a புதிய position (without leaving any trace)."

#. type: Content of: <pre>
#: src/plm/universe/turtles/TurtleWorld.html:32
#, no-wrap
msgid ""
"[!java|c]void [/!]moveTo([!java|c]double [/!]x[!scala]:Double[/!], "
"[!java|c]double [/!]y[!scala]:Double[/!])"
msgstr ""
"[!java|c]void [/!]moveTo([!java|c]double [/!]x[!scala]:Double[/!], [!java|c]"
"double [/!]y[!scala]:Double[/!])"

#. type: Content of: outside any tag (error?)
#: src/plm/universe/turtles/TurtleWorld.html:33
msgid "Moves the turtle to a new position."
msgstr "Moves the turtle பெறுநர் a புதிய position."

#. type: Content of: <pre>
#: src/plm/universe/turtles/TurtleWorld.html:35
#, no-wrap
msgid "[!java|c]void [/!]circle([!java|c]double [/!]radius[!scala]:Double[/!])"
msgstr "[!java|c]void [/!]circle([!java|c]double [/!]radius[!scala]:Double[/!])"

#. type: Content of: outside any tag (error?)
#: src/plm/universe/turtles/TurtleWorld.html:36
msgid "Draw a circle of the specified radius centered on the turtle."
msgstr "Draw a circle of the specified ஆரம் centered on the turtle."

#. type: Content of: <pre>
#: src/plm/universe/turtles/TurtleWorld.html:38
#, no-wrap
msgid "[!java|c]void [/!]hide()"
msgstr "[!java|c]void [/!]hide()"

#. type: Content of: outside any tag (error?)
#: src/plm/universe/turtles/TurtleWorld.html:39
msgid "Hides the turtle."
msgstr "Hides the turtle."

#. type: Content of: <pre>
#: src/plm/universe/turtles/TurtleWorld.html:41
#, no-wrap
msgid "[!java|c]void [/!]show()"
msgstr "[!java|c]void [/!]show()"

#. type: Content of: outside any tag (error?)
#: src/plm/universe/turtles/TurtleWorld.html:42
msgid "Shows the turtle back."
msgstr "Shows the turtle back."

#. type: Content of: <pre>
#: src/plm/universe/turtles/TurtleWorld.html:44
#, no-wrap
msgid "[!java]boolean [/!][!c]int [/!]isVisible()[!scala]:Boolean[/!]"
msgstr "[!java]boolean [/!][!c]int [/!]isVisible()[!scala]:Boolean[/!]"

#. type: Content of: outside any tag (error?)
#: src/plm/universe/turtles/TurtleWorld.html:45
msgid "Returns whether the turtle is currently visible."
msgstr "Returns whether the turtle is currently visible."

#. type: Content of: <pre>
#: src/plm/universe/turtles/TurtleWorld.html:47
#, no-wrap
msgid "[!java|c]void [/!]clear()"
msgstr "[!java|c]void [/!]clear()"

#. type: Content of: outside any tag (error?)
#: src/plm/universe/turtles/TurtleWorld.html:48
msgid "Removes any trail on the sheet."
msgstr "Removes any trail on the sheet."

#. type: Content of: <pre>
#: src/plm/universe/turtles/TurtleWorld.html:50
#, no-wrap
msgid "[!java|c]double [/!]getHeading()[!scala]:Double[/!]"
msgstr "[!java|c]double [/!]getHeading()[!scala]:Double[/!]"

#. type: Content of: outside any tag (error?)
#: src/plm/universe/turtles/TurtleWorld.html:51
msgid "Returns the current heading of the turtle (in degrees)."
msgstr "Returns the மின்னோட்ட்ம், ஓட்டம் heading of the turtle (in degrees)."

#. type: Content of: <pre>
#: src/plm/universe/turtles/TurtleWorld.html:53
#, no-wrap
msgid "[!java|c]void [/!]setHeading([!java|c]double [/!]angle[!scala]:Double[/!])"
msgstr ""
"[!java|c]void [/!]setHeading([!java|c]double [/!]angle[!scala]:Double[/!])"

#. type: Content of: outside any tag (error?)
#: src/plm/universe/turtles/TurtleWorld.html:54
msgid "Sets a new heading to the turtle (in degrees)."
msgstr "Sets a புதிய heading பெறுநர் the turtle (in degrees)."

#. type: Content of: <h2>
#: src/plm/universe/turtles/TurtleWorld.html:56
msgid "Functions about the pen"
msgstr "செயல்பாடுகள் பற்றி the pen"

#. type: Content of: <pre>
#: src/plm/universe/turtles/TurtleWorld.html:58
#, no-wrap
msgid "[!java|c]void [/!]penUp()"
msgstr "[!java|c]void [/!]penUp()"

#. type: Content of: outside any tag (error?)
#: src/plm/universe/turtles/TurtleWorld.html:59
msgid ""
"Moves the pen up (turtles have pens, not brushes as buggles). The turtle "
"will not leave any trace during its subsequent moves."
msgstr ""
"Moves the pen மேலே (turtles have pens, not brushes அச் buggles). The turtle "
"will not leave any trace during its subsequent moves."

#. type: Content of: <pre>
#: src/plm/universe/turtles/TurtleWorld.html:62
#, no-wrap
msgid "[!java|c]void [/!]penDown()"
msgstr "[!java|c]void [/!]penDown()"

#. type: Content of: outside any tag (error?)
#: src/plm/universe/turtles/TurtleWorld.html:63
msgid ""
"Moves the pen down. The turtle will leave a trace during its subsequent "
"moves."
msgstr ""
"Moves the pen down. The turtle will leave a trace during its subsequent "
"moves."

#. type: Content of: <pre>
#: src/plm/universe/turtles/TurtleWorld.html:65
#, no-wrap
msgid "[!java]boolean [/!][!c]int [/!]isPenDown()[!scala]:Boolean[/!]"
msgstr "[!java]boolean [/!][!c]int [/!]isPenDown()[!scala]:Boolean[/!]"

#. type: Content of: outside any tag (error?)
#: src/plm/universe/turtles/TurtleWorld.html:66
msgid "Returns the current pen position as a boolean."
msgstr "Returns the மின்னோட்ட்ம், ஓட்டம் pen position அச் a boolean."

#. type: Content of: <pre>
#: src/plm/universe/turtles/TurtleWorld.html:68
#, no-wrap
msgid "[!java|c]Color [/!]getColor()[!scala]:Color[/!]"
msgstr "[!java|c]Color [/!]getColor()[!scala]:Color[/!]"

#. type: Content of: outside any tag (error?)
#: src/plm/universe/turtles/TurtleWorld.html:69
msgid "Returns the current pen color."
msgstr "Returns the மின்னோட்ட்ம், ஓட்டம் pen color."

#. type: Content of: <pre>
#: src/plm/universe/turtles/TurtleWorld.html:71
#, no-wrap
msgid "[!java|c]void [/!]setColor([!java|c]Color [/!]color[!scala]:Color[/!])"
msgstr "[!java|c]void [/!]setColor([!java|c]Color [/!]color[!scala]:Color[/!])"

#. type: Content of: outside any tag (error?)
#: src/plm/universe/turtles/TurtleWorld.html:72
msgid "Changes the pen color."
msgstr "Changes the pen color."

#. type: Content of: <h2>
#: src/plm/universe/turtles/TurtleWorld.html:74
msgid "Other functions"
msgstr "மற்றொன்று செயல்பாடுகள்"

#. type: Content of: outside any tag (error?)
#: src/plm/universe/turtles/TurtleWorld.html:77
msgid "Returns whether the current turtle is selected in the graphical interface."
msgstr ""
"Returns whether the மின்னோட்ட்ம், ஓட்டம் turtle is தேர்ந்தெடுக்கப்பட்டது in the "
"graphical interface."

#. type: Content of: <table><tr><td>
#: src/plm/universe/turtles/TurtleWorld.html:81
msgid "Name"
msgstr "பெயர்"

#. type: Content of: <h3>
#: src/lessons/turtleart/Main.html:2 src/lessons/turtleart/short_desc.html:2
msgid "Turtle Art"
msgstr "Turtle Art"

#. type: Content of: <p>
#: src/lessons/turtleart/Main.html:4
msgid ""
"Since its inception in the 60's, the LOGO turtle fascinates by its ability "
"to draw nice figures on computer.  This lesson allows you to explore some of "
"the classical figures, and draw your own."
msgstr ""
"Since its inception in the 60's, the அடையாளம் turtle fascinates by its திறமை "
"பெறுநர் draw nice figures on computer.  This பாடம் allows you பெறுநர் explore "
"some of the classical figures, and draw your own."

#. type: Content of: <p>
#: src/lessons/turtleart/Main.html:7
msgid ""
"The language's syntax is absolutely not presented, but if you know a bit of "
"it or if someone tells you, you can take these exercises even if you are an "
"absolute beginner in programming."
msgstr ""
"The language's syntax is absolutely not presented, but if you know a துணுக்கு "
"of it or if someone tells you, you can take these exercises இரட்டை if you அரே "
"an தனி, சார்பிலா beginner in programming."

#. type: Content of: <p>
#: src/lessons/turtleart/Main.html:10
msgid ""
"Please send us your best contributions so that they get added to this "
"gallery to inspire the next ones."
msgstr ""
"Please send us your best contributions so that they get added பெறுநர் this "
"gallery பெறுநர் inspire the அடுத்தது ones."

#. type: Content of: <ul><li>
#: src/lessons/turtleart/Main.html:16
msgid ""
"Other exercises should be added. A whole lot of exercises are available from "
"<a "
"href=\"http://neoparaiso.com/logo/#sect4\">http://neoparaiso.com/logo/#sect4</a> "
"or from <a "
"href=\"http://billkerr2.blogspot.fr/2009/08/40-maths-shapes-challenges.html.\">http://billkerr2.blogspot.fr/2009/08/40-maths-shapes-challenges.html</a>."
msgstr ""
"மற்றொன்று exercises should be added. A whole நிறைய of exercises அரே available "
"இருந்து <a href=\"http://neoparaiso.com/logo/#sect4\">http://neoparaiso.com/"
"logo/#sect4</a> or இருந்து <a href="
"\"http://billkerr2.blogspot.fr/2009/08/40-maths-shapes-challenges.html.\""
">http://billkerr2.blogspot.fr/2009/08/40-maths-shapes-challenges.html</a>."

#. type: Content of: <ul><li>
#: src/lessons/turtleart/Main.html:19
msgid ""
"Missing: the built-ins arc() and arcTo(), that draw an arc, either w/o "
"moving or by moving to the end of the arc."
msgstr ""
"Missing: the built-ins arc() and arcTo(), that draw an arc, either w/o "
"moving or by moving பெறுநர் the end of the arc."

#. type: Content of: <p>
#: src/lessons/turtleart/short_desc.html:3
msgid ""
"Draw beautiful figures with the Logo turtle, and learn programming while "
"playing."
msgstr ""
"Draw beautiful figures with the அடையாளம் turtle, and learn programming while "
"playing."

#. type: Content of: <p>
#: src/lessons/turtleart/short_desc.html:6
msgid ""
"You should know the basic syntax of the programming language you will "
"choose, but no exhaustive programming practice is required to take this "
"lesson."
msgstr ""
"You should know the அடிப்படை syntax of the programming மொழி you will choose, "
"but இல்லை exhaustive programming practice is required பெறுநர் take this lesson."

#. type: Content of: <h1>
#: src/lessons/recursion/cons/universe/ConsWorld.html:2
msgid "ConsWorld"
msgstr "ConsWorld"

#. type: Content of: <p>
#: src/lessons/recursion/cons/universe/ConsWorld.html:4
msgid ""
"This world allows you to experiment with the recursive lists, as they were "
"first introduced in Lisp. It is very similar to the BatWorld, but you are "
"supposed to write recursive functions working on [!python|java]recursive "
"strings. Since [!thelang] does not provide such a construct natively, the "
"ConsWorld defines recursive lists of type <code>RecList</code>.[/!] "
"[!scala]lists of integers (<code>List[Int]</code>).[/!]"
msgstr ""
"This world allows you பெறுநர் experiment with the recursive lists, அச் they "
"were first introduced in Lisp. It is very similar பெறுநர் the BatWorld, but "
"you அரே supposed பெறுநர் write recursive செயல்பாடுகள் working on [!python|java]"
"recursive strings. Since [!thelang] does not provide such a construct "
"natively, the ConsWorld வரையறுக்கிறது recursive lists of வகை "
"<code>RecList</code>.[/!] [!scala]lists of integers (<code>List[Int]</code>)"
".[/!]"

#. type: Content of: <p>
#: src/lessons/recursion/cons/universe/ConsWorld.html:12
msgid ""
"Any given such list is either the empty list (noted "
"<code>[!scala]Nil[/!][!java]null[/!][!python]None[/!]</code>), or an integer "
"followed by a list. If a list is not empty, you can retrieve its first "
"integer with <code>list.head</code> and the list containing its other "
"parameters with <code>list.tail</code>. Of course, the empty list has no "
"head nor the tail, so trying to access these elements will result in an "
"(unpleasant) error message."
msgstr ""
"Any given such பட்டியல் is either the வெறுமை பட்டியல் (noted <code>[!scala]Nil[/"
"!][!java]null[/!][!python]None[/!]</code>), or an முழு எண் followed by a "
"list. If a பட்டியல் is not empty, you can retrieve its first முழு எண் with "
"<code>list.head</code> and the பட்டியல் containing its மற்றொன்று parameters with "
"<code>list.tail</code>. Of course, the வெறுமை பட்டியல் has இல்லை head nor the "
"tail, so trying பெறுநர் access these elements will result in an (unpleasant) "
"பிழை message."

#. type: Content of: <p>
#: src/lessons/recursion/cons/universe/ConsWorld.html:20
msgid ""
"To build your own list, you need to concatenate a head and a tail as "
"follows: [!java|python]<code>cons(head, tail)</code>[/!] "
"[!scala]<code>head::tail</code> Note that <code>::</code> is a generic "
"operator in Scala to build lists.[/!]"
msgstr ""
"பெறுநர் உருவாக்கு your own list, you need பெறுநர் concatenate a head and a tail "
"அச் follows: [!java|python]<code>cons(head, tail)</code>[/!] [!scala]"
"<code>head::tail</code> குறிப்பு that <code>::</code> is a generic operator "
"in Scala பெறுநர் உருவாக்கு lists.[/!]"

#. type: Content of: <p>
#: src/lessons/recursion/cons/universe/ConsWorld.html:26
msgid ""
"So, in summary, you can solve every exercises of this lesson with the "
"following constructs."
msgstr ""
"So, in summary, you can solve every exercises of this பாடம் with the "
"following constructs."

#. type: Content of: <ul><li>
#: src/lessons/recursion/cons/universe/ConsWorld.html:30
msgid "<b>The empty list:</b>"
msgstr "<b>The வெறுமை list:</b>"

#. type: Content of: <ul><li><pre>
#: src/lessons/recursion/cons/universe/ConsWorld.html:30
#, no-wrap
msgid "[!java]null[/!][!scala]Nil[/!][!python]None[/!]"
msgstr "[!java]null[/!][!scala]Nil[/!][!python]None[/!]"

#. type: Content of: <ul><li>
#: src/lessons/recursion/cons/universe/ConsWorld.html:31
msgid "<b>Get the first element of <code>l</code></b>"
msgstr "<b>Get the first தனிமம் of <code>l</code></b>"

#. type: Content of: <ul><li><pre>
#: src/lessons/recursion/cons/universe/ConsWorld.html:31
#, no-wrap
msgid "l.head"
msgstr "l.head"

#. type: Content of: <ul><li>
#: src/lessons/recursion/cons/universe/ConsWorld.html:32
msgid "<b>Get the rest of the list</b>, when the first element is removed:"
msgstr "<b>Get the rest of the list</b>, when the first தனிமம் is removed:"

#. type: Content of: <ul><li><pre>
#: src/lessons/recursion/cons/universe/ConsWorld.html:32
#, no-wrap
msgid "l.tail"
msgstr "l.tail"

#. type: Content of: <ul><li>
#: src/lessons/recursion/cons/universe/ConsWorld.html:33
msgid ""
"<b>Build a list</b> from a <code>value</code> and a <code>list</code>: "
"[!java|python]"
msgstr ""
"<b>Build a list</b> இருந்து a <code>value</code> and a <code>list</code>: "
"[!java|python]"

#. type: Content of: <ul><li><pre>
#: src/lessons/recursion/cons/universe/ConsWorld.html:34
#, no-wrap
msgid "cons(value, list)"
msgstr "cons(value, list)"

#. type: Content of: <ul><li><pre>
#: src/lessons/recursion/cons/universe/ConsWorld.html:35
#, no-wrap
msgid "value::list"
msgstr "value::list"

#. type: Content of: <h1>
#: src/lessons/recursion/cons/Main.html:2
msgid "Recursive Lists"
msgstr "Recursive Lists"

#. type: Content of: <p>
#: src/lessons/recursion/cons/Main.html:3
msgid ""
"This lesson contains a bunch of classical exercises on recursive lists.  It "
"is certainly not the most pleasant lesson to do, but I think that it is the "
"easiest of the PLM lessons dealing with recursion."
msgstr ""
"This பாடம் contains a bunch of classical exercises on recursive lists.  It is "
"certainly not the பெரும்பாலானவை pleasant பாடம் பெறுநர் do, but I think that it "
"is the easiest of the PLM lessons dealing with recursion."

#. type: Content of: <ul><li>
#: src/lessons/recursion/cons/Main.html:10
msgid ""
"New exercises could be proposed, such as "
"http://webloria.loria.fr/~quinson/Teaching/TOP/02-td-recursivite-enonce.pdf "
"If you know some others, please report them as an issue."
msgstr ""
"புதிய exercises could be proposed, such அச் http://webloria.loria.fr/~quinson/"
"Teaching/TOP/02-td-recursivite-enonce.pdf If you know some others, please "
"report them அச் an issue."

#. type: Content of: <ul><li>
#: src/lessons/recursion/cons/Main.html:13
msgid ""
"It would be interesting to check the asymptotic complexity of the student's "
"code, but that does not sound easy to do. In Python and Java (where we "
"provide a hand-made RecList class), we could count the amount of cons per "
"exercise, but it won't be easy to relate this to the right BatTest. For "
"Scala, it sounds even more difficult as we use the classical :: operators of "
"the language. That will be difficult to override to add a counting "
"mechanism. Another solution would be to ensure that the call stack does not "
"pass a given threshold, but that sounds very difficult too. Any idea is "
"welcome."
msgstr ""
"It would be interesting பெறுநர் சரிபார் the asymptotic complexity of the "
"student's code, but that does not sound easy பெறுநர் do. In பைதான் and சாவா ("
"where we provide a hand-made RecList class), we could எண்ணுங்கள் the amount of "
"cons per exercise, but it won't be easy பெறுநர் relate this பெறுநர் the வலது "
"BatTest. க்கு Scala, it sounds இரட்டை more difficult அச் we use the classical ::"
" operators of the language. That will be difficult பெறுநர் override பெறுநர் "
"கூட்டு a counting mechanism. Another நீர்மக்கூழ் would be பெறுநர் ensure that the "
"call stack does not கணவாய் a given threshold, but that sounds very difficult "
"too. Any idea is welcome."

#. type: Content of: <h1>
#: src/lessons/recursion/cons/Length.html:2
msgid "Length"
msgstr "Length"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/cons/Length.html:3
msgid ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!], return its "
"length[!scala] (without using its <code>size</code> method, of course)[/!].  "
"[!java|python]"
msgstr ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!], return its "
"length[!scala] (without using its <code>size</code> method, of course)[/!].  "
"[!java|python]"

#. type: Content of: <p>
#: src/lessons/recursion/cons/Length.html:5
msgid ""
"[!python]Be careful, you are not supposed to use the Python lists, but the "
"specific type defined in this exercise. [/!] Please refer to the world's "
"documentation for more information about recursive lists."
msgstr ""
"[!python]Be careful, you அரே not supposed பெறுநர் use the பைதான் lists, but "
"the specific வகை defined in this exercise. [/!] Please refer பெறுநர் the "
"world's ஆவணப்படுத்துதல் க்கு more செய்தி பற்றி recursive lists."

#. type: Content of: <p>
#: src/lessons/recursion/cons/Length.html:10
#: src/lessons/recursion/cons/IsMember.html:7
#: src/lessons/recursion/cons/Occurrence.html:7
#: src/lessons/recursion/cons/Last.html:6 src/lessons/recursion/cons/Min.html:6
#: src/lessons/recursion/cons/Increasing.html:6
#: src/lessons/recursion/cons/ButLast.html:6
#: src/lessons/recursion/cons/PlusOne.html:5
#: src/lessons/recursion/cons/Remove.html:9
#: src/lessons/recursion/cons/ButNfirst.html:6
msgid "Your solution should be linear in time."
msgstr "Your நீர்மக்கூழ் should be நேரியல் in time."

#. type: Content of: <h1>
#: src/lessons/recursion/cons/IsMember.html:2
msgid "IsMember"
msgstr "IsMember"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/cons/IsMember.html:3
msgid ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!] and an "
"integer, return true if the given integer is one of the elements of the "
"list, or false if it cannot be found."
msgstr ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!] and an "
"integer, return true if the given முழு எண் is one of the elements of the "
"list, or false if it cannot be found."

#. type: Content of: <h1>
#: src/lessons/recursion/cons/Occurrence.html:2
msgid "Occurrences"
msgstr "Occurrences"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/cons/Occurrence.html:3
msgid ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!] and an "
"integer, return the amount of occurrences of the given integer in the "
"list. If the integer is not a member of the list, the function should thus "
"return 0."
msgstr ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!] and an "
"integer, return the amount of occurrences of the given முழு எண் in the list. "
"If the முழு எண் is not a member of the list, the சார்பு should thus return 0."

#. type: Content of: <h1>
#: src/lessons/recursion/cons/Last.html:2
msgid "Last"
msgstr "Last"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/cons/Last.html:3
msgid ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!], return its "
"last element.  You can assume that the list is not empty."
msgstr ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!], return its "
"last element.  You can assume that the பட்டியல் is not empty."

#. type: Content of: <h1>
#: src/lessons/recursion/cons/Min.html:2
msgid "Min"
msgstr "Min"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/cons/Min.html:3
msgid ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!], return the "
"smallest of its values.  You will probably need an extra function, even if "
"you can assume that the list is not empty."
msgstr ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!], return the "
"smallest of its values.  You will probably need an extra function, இரட்டை if "
"you can assume that the பட்டியல் is not empty."

#. type: Content of: <h1>
#: src/lessons/recursion/cons/Increasing.html:2
msgid "Increasing"
msgstr "Increasing"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/cons/Increasing.html:3
msgid ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!], return "
"whether its elements form an increasing sequence (i.e., if the elements are "
"sorted from the smallest to the largest one)."
msgstr ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!], return "
"whether its elements form an increasing வரிசை (i.e., if the elements அரே "
"sorted இருந்து the smallest பெறுநர் the largest one)."

#. type: Content of: <h1>
#: src/lessons/recursion/cons/ButLast.html:2
msgid "But Last"
msgstr "But Last"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/cons/ButLast.html:3
msgid ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!], return the "
"list containing every elements but the last one.  You can assume that the "
"list is not empty."
msgstr ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!], return the "
"பட்டியல் containing every elements but the last one.  You can assume that the "
"பட்டியல் is not empty."

#. type: Content of: <h1>
#: src/lessons/recursion/cons/PlusOne.html:2
msgid "PlusOne"
msgstr "PlusOne"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/cons/PlusOne.html:3
msgid ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!], return a new "
"list containing all elements of your parameter incremented by one."
msgstr ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!], return a புதி"
"ய பட்டியல் containing அனைத்தும் elements of your கூறளவு incremented by one."

#. type: Content of: <h1>
#: src/lessons/recursion/cons/Remove.html:2
msgid "Remove"
msgstr "அகற்று"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/cons/Remove.html:4
msgid ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!] "
"<code>L</code>and an integer, return a new list containing all elements of "
"<code>L</code> that are not equal to the value received as parameter."
msgstr ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!] <code>L</"
"code>and an integer, return a புதிய பட்டியல் containing அனைத்தும் elements of "
"<code>L</code> that அரே not equal பெறுநர் the மதிப்பு received அச் parameter."

#. type: Content of: <h1>
#: src/lessons/recursion/cons/Nth.html:2
msgid "Nth"
msgstr "Nth"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/cons/Nth.html:3
msgid ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!] and an integer "
"<code>N</code>, return the <code>N</code>th element of the list."
msgstr ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!] and an முழு எண் "
"<code>N</code>, return the <code>N</code>th தனிமம் of the list."

#. type: Content of: <p>
#: src/lessons/recursion/cons/Nth.html:6
#: src/lessons/recursion/cons/Nfirst.html:7
msgid ""
"You can assume that the list is long enough, i.e. that there is at least "
"<code>N</code> elements.  Your solution should be linear in time."
msgstr ""
"You can assume that the பட்டியல் is long enough, i.e. that there is at least "
"<code>N</code> elements.  Your நீர்மக்கூழ் should be நேரியல் in time."

#. type: Content of: <h1>
#: src/lessons/recursion/cons/Nfirst.html:2
msgid "Nfirst"
msgstr "Nfirst"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/cons/Nfirst.html:3
msgid ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!] and an integer "
"<code>N</code>, return the list constituted of the first <code>N</code> "
"elements. You can assume that the list is long enough, i.e. that there is at "
"least <code>N</code> elements."
msgstr ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!] and an முழு எண் "
"<code>N</code>, return the பட்டியல் constituted of the first <code>N</code> "
"elements. You can assume that the பட்டியல் is long enough, i.e. that there is "
"at least <code>N</code> elements."

#. type: Content of: <h1>
#: src/lessons/recursion/cons/Nlast.html:2
msgid "Nlast"
msgstr "Nlast"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/cons/Nlast.html:3
msgid ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!] and an integer "
"<code>N</code>, return the list with only the <code>N</code> last elements."
msgstr ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!] and an முழு எண் "
"<code>N</code>, return the பட்டியல் with only the <code>N</code> last elements."

#. type: Content of: <p>
#: src/lessons/recursion/cons/Nlast.html:6
#: src/lessons/recursion/cons/ButNlast.html:6
#: src/lessons/recursion/cons/Concat.html:6
msgid ""
"Your solution should be linear in time, but you will probably need to define "
"several functions to achieve that complexity."
msgstr ""
"Your நீர்மக்கூழ் should be நேரியல் in time, but you will probably need பெறுநர் "
"define several செயல்பாடுகள் பெறுநர் achieve that complexity."

#. type: Attribute 'alt' of: <div>
#: src/lessons/recursion/cons/Nlast.html:8
#: src/lessons/recursion/cons/ButNlast.html:8
#: src/lessons/recursion/cons/Reverse.html:8
#: src/lessons/recursion/cons/Concat.html:8
msgid "I cannot do it in linear time"
msgstr "I cannot do it in நேரியல் time"

#. type: Content of: <div>
#: src/lessons/recursion/cons/Nlast.html:9
#: src/lessons/recursion/cons/ButNlast.html:9
msgid ""
"The trick is to compute only once (and beforehand) how many elements you "
"should keep."
msgstr ""
"The trick is பெறுநர் compute only once (and beforehand) how many elements you "
"should keep."

#. type: Content of: <h1>
#: src/lessons/recursion/cons/ButNfirst.html:2
msgid "But Nfirst"
msgstr "But Nfirst"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/cons/ButNfirst.html:3
msgid ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!] and an integer "
"<code>N</code>, return the list without the <code>N</code> first elements."
msgstr ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!] and an முழு எண் "
"<code>N</code>, return the பட்டியல் without the <code>N</code> first elements."

#. type: Content of: <h1>
#: src/lessons/recursion/cons/ButNlast.html:2
msgid "But Nlast"
msgstr "But Nlast"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/cons/ButNlast.html:3
msgid ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!] and an integer "
"<code>N</code>, return the list without the <code>N</code> last elements."
msgstr ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!] and an முழு எண் "
"<code>N</code>, return the பட்டியல் without the <code>N</code> last elements."

#. type: Content of: <h1>
#: src/lessons/recursion/cons/Reverse.html:2
msgid "Reverse"
msgstr "தலைகீழ்"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/cons/Reverse.html:3
msgid ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!], return a new "
"list with all elements in reverse order."
msgstr ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!], return a புதி"
"ய பட்டியல் with அனைத்தும் elements in தலைகீழ் order."

#. type: Content of: <p>
#: src/lessons/recursion/cons/Reverse.html:5
msgid ""
"This function is very important and you should not pass that challenge.  "
"Your solution should be linear in time, with the help of helper functions."
msgstr ""
"This சார்பு is very important and you should not கணவாய் that challenge.  Your "
"நீர்மக்கூழ் should be நேரியல் in time, with the உதவி of helper functions."

#. type: Content of: <div>
#: src/lessons/recursion/cons/Reverse.html:9
msgid ""
"You need an helper function in which the result is accumulated (built) at "
"each step."
msgstr ""
"You need an helper சார்பு in which the result is accumulated (built) at each "
"step."

#. type: Content of: <h1>
#: src/lessons/recursion/cons/Concat.html:2
msgid "Concat"
msgstr "Concat"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/cons/Concat.html:3
msgid ""
"Given two [!scala]List[Int][/!][!java|python]recursive list[/!] "
"<code>l1</code> and <code>l2</code>, return a new list with all elements of "
"<code>l1</code> followed by the elements of <code>l2</code>."
msgstr ""
"Given two [!scala]List[Int][/!][!java|python]recursive list[/!] <code>l1</"
"code> and <code>l2</code>, return a புதிய பட்டியல் with அனைத்தும் elements of "
"<code>l1</code> followed by the elements of <code>l2</code>."

#. type: Content of: <div>
#: src/lessons/recursion/cons/Concat.html:9
msgid ""
"You need to modify <code>l1</code> beforehand so that the computations at "
"each step of the recursion are in constant time."
msgstr ""
"You need பெறுநர் modify <code>l1</code> beforehand so that the computations "
"at each படி of the recursion அரே in மாறா, மாறிலி time."

#. type: Content of: <h1>
#: src/lessons/recursion/cons/AllDifferent.html:2
msgid "All Different"
msgstr "அனைத்தும் Different"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/cons/AllDifferent.html:3
msgid ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!], return true "
"if any two elements of the list are different (ie, if no element appears "
"more than once in the list)."
msgstr ""
"Given a [!scala]List[Int][/!][!java|python]recursive list[/!], return true "
"if any two elements of the பட்டியல் அரே different (ie, if இல்லை தனிமம் appears "
"more than once in the list)."

#. type: Content of: <p>
#: src/lessons/recursion/cons/AllDifferent.html:6
msgid ""
"The simplest solution is in O(n²), meaning that it runs in quadratic time.  "
"You will probably have to define one extra function for that.  Another much "
"more complex solution runs in O(n log(n))."
msgstr ""
"The simplest நீர்மக்கூழ் is in O(n²), meaning that it runs in quadratic time.  "
"You will probably have பெறுநர் define one extra சார்பு க்கு that.  Another much "
"more அணைவு நீர்மக்கூழ் runs in O(n log(n))."

#. type: Content of: <h1>
#: src/lessons/recursion/lego/Main.html:2
msgid "Recursive algorithms"
msgstr "Recursive algorithms"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/lego/Main.html:3
msgid "This lesson allows to experiment with recursive algorithms."
msgstr "This பாடம் allows பெறுநர் experiment with recursive algorithms."

#. type: Content of: <p>
#: src/lessons/recursion/lego/Main.html:5
msgid ""
"If you need more recursive algorithms, an exercise on recursive sorting "
"algorithms (in particular QuickSort and MergeSort) is planned in the future "
"within the sorting lesson."
msgstr ""
"If you need more recursive algorithms, an exercise on recursive sorting "
"algorithms (in particular QuickSort and MergeSort) is planned in the future "
"within the sorting lesson."

#. type: Content of: <h3>
#: src/lessons/recursion/lego/Main.html:9
msgid "What can I do to improve this lesson?"
msgstr "What can I do பெறுநர் improve this lesson?"

#. type: Content of: <p>
#: src/lessons/recursion/lego/Main.html:11
msgid ""
"As usual, there are several things that could be done in this lesson to "
"improve it further:"
msgstr ""
"அச் usual, there அரே several things that could be முடிந்தது in this பாடம் பெறுநர்"
" improve it further:"

#. type: Content of: <ul><li>
#: src/lessons/recursion/lego/Main.html:13
msgid ""
"The Sierpinski triangle can be drawn using a simpler L-system. See "
"http://jpvallon.free.fr/recursivite.html"
msgstr ""
"The Sierpinski triangle can be drawn using a simpler L-system. See http://"
"jpvallon.free.fr/recursivite.html"

#. type: Content of: <ul><li>
#: src/lessons/recursion/lego/Main.html:14
msgid ""
"The arrowhead curve is also interesting: "
"http://www.mathcurve.com/fractals/sierpinski/sierpinskitriangle.shtml"
msgstr ""
"The arrowhead வளைவு is also interesting: http://www.mathcurve.com/fractals/"
"sierpinski/sierpinskitriangle.shtml"

#. type: Content of: <ul><li>
#: src/lessons/recursion/lego/Main.html:15
msgid ""
"The dragon curve could be explained as a L-system: "
"http://ecademy.agnesscott.edu/~lriddle/ifs/heighway/heighway.htm"
msgstr ""
"The dragon வளைவு could be explained அச் a L-system: http://"
"ecademy.agnesscott.edu/~lriddle/ifs/heighway/heighway.htm"

#. type: Content of: <ul><li>
#: src/lessons/recursion/lego/Main.html:16
msgid ""
"The dragon2 curve is called the twin dragon: "
"http://ecademy.agnesscott.edu/~lriddle/ifs/heighway/twindragon.htm"
msgstr ""
"The dragon2 வளைவு is called the twin dragon: http://ecademy.agnesscott.edu/~"
"lriddle/ifs/heighway/twindragon.htm"

#. type: Content of: <ul><li>
#: src/lessons/recursion/lego/Main.html:17
msgid ""
"The space filling curves could be added (Peano, Hildebert, etc).  See: "
"http://teachout1.net/village/fill.html"
msgstr ""
"The இடைவெளி filling curves could be added (Peano, Hildebert, etc).  See: "
"http://teachout1.net/village/fill.html"

#. type: Content of: <ul><li>
#: src/lessons/recursion/lego/Main.html:19
msgid ""
"We could do another exercise on embeeded polygons: "
"http://www.inrialpes.fr/helix/people/genoud/ENSJAVA/tds/sujets/dessinsReccursifs/actionsrecursives.html"
msgstr ""
"We could do another exercise on embeeded polygons: http://www.inrialpes.fr/"
"helix/people/genoud/ENSJAVA/tds/sujets/dessinsReccursifs/"
"actionsrecursives.html"

#. type: Content of: <h3>
#: src/lessons/recursion/lego/short_desc.html:2
msgid "Bases of recursion"
msgstr "Bases of recursion"

#. type: Content of: <p>
#: src/lessons/recursion/lego/short_desc.html:3
msgid ""
"Discover the recursive way of thinking by drawing trees and other figures "
"with the Logo turtle."
msgstr ""
"கண்டுபிடி the recursive way of சிந்திக்கிறேன் by drawing trees and மற்றொன்று "
"figures with the அடையாளம் turtle."

#. type: Content of: <h2>
#: src/lessons/recursion/lego/square/FourSquare.html:2
msgid "The small cousines of Buggles"
msgstr "The small cousines of Buggles"

#. type: Content of: <p>
#: src/lessons/recursion/lego/square/FourSquare.html:4
msgid ""
"Today, we will meet the small cousines of the buggles: the turtles. In fact, "
"turtles are much olders than the buggles. They were invented in the 70's by "
"a scientific from MIT called Seymour Papert to help teaching programming, "
"and the buggles are a variation on the idea invented by Lyn Turbak from "
"Wellesley College later."
msgstr ""
"Today, we will meet the small cousines of the buggles: the turtles. In fact, "
"turtles அரே much olders than the buggles. They were invented in the 70's by "
"a scientific இருந்து MIT called Seymour Papert பெறுநர் உதவி teaching "
"programming, and the buggles அரே a variation on the idea invented by Lyn "
"Turbak இருந்து Wellesley College later."

#. type: Content of: <p>
#: src/lessons/recursion/lego/square/FourSquare.html:10
msgid ""
"Turtles are thus a bit like buggles, but smaller. Just like buggles, you can "
"order them to move forward, to turn, to move backward, etc. Just like "
"buggles, they leave a line on their path when they move (but the line is "
"much smaller)."
msgstr ""
"Turtles அரே thus a துணுக்கு like buggles, but smaller. Just like buggles, you "
"can order them பெறுநர் move forward, பெறுநர் turn, பெறுநர் move backward, etc. "
"Just like buggles, they leave a வரி on their பாதை when they move (but the வரி"
" is much smaller)."

#. type: Content of: <p>
#: src/lessons/recursion/lego/square/FourSquare.html:15
msgid ""
"The main difference is that where buggles can only move of right angles, "
"turtles can move of any arbitrary angles specified by a real number (a "
"double). This gives them much more liberty in their movings. The buggles can "
"do several other tricks, like reading and writting messages, picking or "
"dropping objects, and there is sometimes walls in their worlds (but all this "
"is completely above the capacities of turtles)."
msgstr ""
"The main வேறுபாடு is that where buggles can only move of வலது angles, "
"turtles can move of any arbitrary angles specified by a real எண் (a double). "
"This gives them much more liberty in their movings. The buggles can do "
"several மற்றொன்று tricks, like படித்தல் and writting messages, picking or "
"dropping objects, and there is sometimes walls in their worlds (but அனைத்தும் "
"this is completely above the capacities of turtles)."

#. type: Content of: <p>
#: src/lessons/recursion/lego/square/FourSquare.html:22
msgid ""
"From a practical point of view, most of the methods you knew about buggles "
"still work with turtles, with some minor adaptations. In particular, the "
"<code>forward()</code> method takes the amount of steps to do not as an "
"integer, but as a [!python]point number[/!][!java|scala|c]double[/!] (see "
"\"About this world\" for more details)."
msgstr ""
"இருந்து a practical புள்ளியம் of view, பெரும்பாலானவை of the முறைகள் you knew பற்றி "
"buggles still வேலை with turtles, with some minor adaptations. In particular, "
"the <code>forward()</code> method takes the amount of படிகள் பெறுநர் do not அச் "
"an integer, but அச் a [!python]point number[/!][!java|scala|c]double[/!] (see "
"\"About this world\" க்கு more details)."

#. type: Content of: <h3>
#: src/lessons/recursion/lego/square/FourSquare.html:29
msgid "Doubles? But what is it?"
msgstr "Doubles? But what is it?"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/lego/square/FourSquare.html:30
msgid "It's simply a point number. Example:"
msgstr "It's simply a புள்ளியம் number. Example:"

#. type: Content of: <pre>
#: src/lessons/recursion/lego/square/FourSquare.html:32
#, no-wrap
msgid ""
"double x = 3.72;\n"
"x + 1.234 // Value = 4.954\n"
"x + 2. // Value = 5.72 (2. means 2.0)\n"
"x + 2 // [!java|c]Value = 5.72 (2 automatically converted to "
"2.0)[/!][!scala]Type error (+ operator don't mix Double and Int); manual "
"conversion mandatory[/!]\n"
"x * 2. // Value = 7.44 \n"
"x / 2. // Value = 1.86 \n"
"[!java|c](int) x[/!][!scala]x.asInstanceOf[Int][/!] // Value = 1 (“casting "
"to int”, converted to integer by truncating)\n"
"Math.round(x) // Value = 2 (1.86 rounded to nearest integer)\n"
"Math.floor(x) // Value = 1 (1.86 rounded toward minus infinity)\n"
"Math.floor(-5.12) // Value = -6 (rounded toward minus infinity)\n"
"Math.ceiling(x) // Value = 2 (1.86 rounded toward plus infinity)\n"
"Math.ceiling(-5.12) // Value = -5 (rounded toward plus infinity)\n"
"[!java|c](double) 17[/!][!scala]17.asInstanceOf[Double][/!] // Value = 17.0 "
"(“casted to double”, converted to double)\n"
msgstr ""
"இரட்டை ஃச் = 3.72;\n"
"x + 1.234 // மதிப்பு = 4.954\n"
"x + 2. // மதிப்பு = 5.72 (2. means 2.0)\n"
"x + 2 // [!java|c]Value = 5.72 (2 automatically converted பெறுநர் 2.0)[/!]"
"[!scala]Type பிழை (+ operator don't mix இரட்டை and Int); manual conversion "
"mandatory[/!]\n"
"x * 2. // மதிப்பு = 7.44 \n"
"x / 2. // மதிப்பு = 1.86 \n"
"[!java|c](int) x[/!][!scala]x.asInstanceOf[Int][/!] // மதிப்பு = 1 (“casting "
"பெறுநர் int”, converted பெறுநர் முழு எண் by truncating)\n"
"Math.round(x) // மதிப்பு = 2 (1.86 rounded பெறுநர் nearest integer)\n"
"Math.floor(x) // மதிப்பு = 1 (1.86 rounded toward minus infinity)\n"
"Math.floor(-5.12) // மதிப்பு = -6 (rounded toward minus infinity)\n"
"Math.ceiling(x) // மதிப்பு = 2 (1.86 rounded toward plus infinity)\n"
"Math.ceiling(-5.12) // மதிப்பு = -5 (rounded toward plus infinity)\n"
"[!java|c](double) 17[/!][!scala]17.asInstanceOf[Double][/!] // மதிப்பு = 17.0 "
"(“casted பெறுநர் double”, converted பெறுநர் double)\n"

#. type: Content of: <p>
#: src/lessons/recursion/lego/square/FourSquare.html:49
msgid ""
"Even if this is the first exercise on the recursivity lesson, the code you "
"have to write is not recursive. The goal is to get familiar with the turtle "
"world before getting on serious matter."
msgstr ""
"இரட்டை if this is the first exercise on the recursivity lesson, the குறியீடு "
"you have பெறுநர் write is not recursive. The goal is பெறுநர் get familiar with "
"the turtle world before getting on serious matter."

#. type: Content of: <p>
#: src/lessons/recursion/lego/square/FourSquare.html:53
msgid ""
"You must reproduce a simple geometrical painting constituted of four 100 "
"steps long squares (see the objective world for more details). It is "
"obviously a good idea to write a method to draw a square, and then use it in "
"your code."
msgstr ""
"You must reproduce a simple geometrical painting constituted of நான்கு, நாலடி"
", நான்கடி 100 படிகள் long squares (see the objective world க்கு more details). "
"It is obviously a good idea பெறுநர் write a method பெறுநர் draw a square, and "
"then use it in your code."

#. type: Content of: <h2>
#: src/lessons/recursion/lego/polygonfractal/PolygonFractal.html:2
msgid "Fractal of polygons"
msgstr "Fractal of polygons"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/lego/polygonfractal/PolygonFractal.html:4
msgid ""
"The fractal we will now draw is formed of a polygon, with little polygons on "
"each corner. The prototype of the method drawing it is the following:"
msgstr ""
"The fractal we will now draw is formed of a polygon, with little polygons on "
"each corner. The prototype of the method drawing it is the following:"

#. type: Content of: <pre>
#: src/lessons/recursion/lego/polygonfractal/PolygonFractal.html:6
#, no-wrap
msgid ""
"[!java|c]void [/!]polygonFractal ([!java|c]int [/!]levels[!scala]:Int[/!], "
"[!java|c]int [/!]sides[!scala]:Int[/!], [!java|c]double "
"[/!]length[!scala]:Double[/!], [!java|c]double "
"[/!]shrink[!scala]:Double[/!])"
msgstr ""
"[!java|c]void [/!]polygonFractal ([!java|c]int [/!]levels[!scala]:Int[/!], "
"[!java|c]int [/!]sides[!scala]:Int[/!], [!java|c]double [/!]length[!scala]:"
"Double[/!], [!java|c]double [/!]shrink[!scala]:Double[/!])"

#. type: Content of: <p>
#: src/lessons/recursion/lego/polygonfractal/PolygonFractal.html:8
#: src/lessons/recursion/lego/dragoncurve/DragonCurve1.html:26
#: src/lessons/recursion/lego/dragoncurve/DragonCurve2.html:45
msgid ""
"Have a look at each world's objective view to understand how to write the "
"function."
msgstr ""
"Have a look at each world's objective பார்வை பெறுநர் understand how பெறுநர் "
"write the function."

#. type: Content of: <h2>
#: src/lessons/recursion/lego/koch/Koch.html:2
msgid "Snow flake"
msgstr "பனி flake"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/lego/koch/Koch.html:4
msgid ""
"We will now draw snow flakes using the Koch fractal. A fractal is a "
"geometric pattern repeated at every scale."
msgstr ""
"We will now draw பனி flakes using the கோச் fractal. A fractal is a geometric "
"pattern repeated at every scale."

#. type: Content of: <p>
#: src/lessons/recursion/lego/koch/Koch.html:7
msgid ""
"The general form is a triangle, with each side given by several recursive "
"calls. Your work is only to write the code of the <code>snowSide</code> "
"method so that it draws one side of the triangle. To make it easier, each "
"sides are represented in a specific color. Just draw the red things (without "
"changing your pen color), and the other colors will be drawn automatically."
msgstr ""
"The பொது form is a triangle, with each பக்கம் given by several recursive "
"calls. Your வேலை is only பெறுநர் write the குறியீடு of the <code>snowSide</"
"code> method so that it draws one பக்கம் of the triangle. பெறுநர் make it "
"easier, each sides அரே represented in a specific color. Just draw the சிவப்பு "
"things (without changing your pen color), and the மற்றொன்று colors will be "
"drawn automatically."

#. type: Content of: <p>
#: src/lessons/recursion/lego/koch/Koch.html:13
msgid ""
"Observe the drawing in each world's objective to understand the pattern's "
"logic, and then reproduce it. At level 0, the Koch curve is just a straight "
"line.  At level 1, the curve is divided in three thirds, and the middle part "
"is replaced by the two sides of an equilateral triangle of the same length "
"as the segment being removed.  At level 2, the process is repeated, whith "
"each segments split in three parts and the middle part being replaced by the "
"two sides of an equilateral triangle."
msgstr ""
"Observe the drawing in each world's objective பெறுநர் understand the "
"pattern's logic, and then reproduce it. At நிலை 0, the கோச் வளைவு is just a "
"straight line.  At நிலை 1, the வளைவு is divided in three thirds, and the "
"middle பகுதி is replaced by the two sides of an equilateral triangle of the "
"same length அச் the segment being removed.  At நிலை 2, the process is "
"repeated, whith each segments split in three பாகங்கள் and the middle பகுதி "
"being replaced by the two sides of an equilateral triangle."

#. type: Content of: <p>
#: src/lessons/recursion/lego/koch/Koch.html:20
msgid "The pseudo-code of the general case is the following:"
msgstr "The pseudo-code of the பொது case is the following:"

#. type: Content of: <pre>
#: src/lessons/recursion/lego/koch/Koch.html:22
#, no-wrap
msgid ""
"  Draw recursively a smaller segment\n"
"  Turn 60 degrees to the left\n"
"  Draw recursively a smaller segment  \n"
"  Turn 120 degrees to the right\n"
"  Draw recursively a smaller segment\n"
"  Turn 60 degrees to the left\n"
"  Draw recursively a smaller segment\n"
msgstr ""
"  Draw recursively a smaller segment\n"
"  Turn 60 degrees பெறுநர் the left\n"
"  Draw recursively a smaller segment  \n"
"  Turn 120 degrees பெறுநர் the right\n"
"  Draw recursively a smaller segment\n"
"  Turn 60 degrees பெறுநர் the left\n"
"  Draw recursively a smaller segment\n"

#. type: Content of: <p>
#: src/lessons/recursion/lego/koch/Koch.html:30
msgid ""
"As you can see, the function forward() is not called from the recursive "
"case, only in the base case when there is no recursive call."
msgstr ""
"அச் you can see, the சார்பு forward() is not called இருந்து the recursive case, "
"only in the காரம் case when there is இல்லை recursive call."

#. type: Attribute 'alt' of: <p><div>
#: src/lessons/recursion/lego/koch/Koch.html:34
msgid "Too much letters. Please picture it."
msgstr "Too much letters. Please picture it."

#. type: Content of: <p><div><p>
#: src/lessons/recursion/lego/koch/Koch.html:35
#: src/lessons/recursion/lego/koch/SquareKoch.html:9
msgid "Here are the results of the first levels of recursion."
msgstr "Here அரே the முடிவுகள் of the first levels of recursion."

#. type: Content of: <p>
#: src/lessons/recursion/lego/koch/Koch.html:39
msgid ""
"You must write the <code>snowSide()</code> method, which is recursive but "
"<b>do not call snowFlake from snowSide</b>, or you will get very strange and "
"unexpected behaviors."
msgstr ""
"You must write the <code>snowSide()</code> method, which is recursive but "
"<b>do not call snowFlake இருந்து snowSide</b>, or you will get very strange "
"and unexpected behaviors."

#. type: Content of: <h2>
#: src/lessons/recursion/lego/koch/SquareKoch.html:2
msgid "Snow square"
msgstr "பனி square"

#. type: Content of: <p>
#: src/lessons/recursion/lego/koch/SquareKoch.html:4
msgid ""
"This exercise is a variation over the snow flake that we saw previously.  "
"The main difference is that we are growing little squares instead of "
"triangles on the sides of the figure."
msgstr ""
"This exercise is a variation வீச்சலகு the பனி flake that we saw previously.  "
"The main வேறுபாடு is that we அரே growing little squares instead of triangles "
"on the sides of the figure."

#. type: Attribute 'alt' of: <p><div>
#: src/lessons/recursion/lego/koch/SquareKoch.html:8
msgid "I don't see it, sorry. Please picture it."
msgstr "I don't see it, sorry. Please picture it."

#. type: Content of: <p>
#: src/lessons/recursion/lego/koch/SquareKoch.html:14
msgid ""
"As previously, your <code>squareSide</code> function should only draw one "
"side of the figure, and the template will call it for all sides "
"automatically (with one color per side)."
msgstr ""
"அச் previously, your <code>squareSide</code> சார்பு should only draw one பக்கம் "
"of the figure, and the template will call it க்கு அனைத்தும் sides automatically "
"(with one color per side)."

#. type: Content of: <h2>
#: src/lessons/recursion/lego/koch/PentaKoch.html:2
msgid "Snow pentagon"
msgstr "பனி ஐங்கோணம்"

#. type: Content of: <p>
#: src/lessons/recursion/lego/koch/PentaKoch.html:4
msgid ""
"Here comes yet another variation of the Koch curve. This time, we grow "
"little pentagons (ie, polygons with five sides each). I'm sure you get it "
"now."
msgstr ""
"Here comes yet another variation of the கோச் curve. This time, we grow little "
"pentagons (ie, polygons with five sides each). I'm sure you get it now."

#. type: Content of: <p>
#: src/lessons/recursion/lego/koch/PentaKoch.html:7
msgid ""
"Another difference with earlier is that the length is not divided by three "
"at each step anymore, but multiplied by 0.4. The curve looks better this way "
":)"
msgstr ""
"Another வேறுபாடு with earlier is that the length is not divided by three at "
"each படி anymore, but multiplied by 0.4. The வளைவு looks better this way :)"

#. type: Content of: <p>
#: src/lessons/recursion/lego/koch/PentaKoch.html:10
msgid ""
"We draw only one side in this exercise so your code will be called only once "
"this time."
msgstr ""
"We draw only one பக்கம் in this exercise so your குறியீடு will be called only "
"once this time."

#. type: Content of: <h2>
#: src/lessons/recursion/lego/koch/HexaKoch.html:2
msgid "Snow hexagon"
msgstr "பனி hexagon"

#. type: Content of: <p>
#: src/lessons/recursion/lego/koch/HexaKoch.html:4
msgid ""
"This time, we will draw the curve that is known as the (6, 0.14)-Koch "
"curve. This means that you have to grow 6-sided polygons on the segments, "
"and that the length should be multiplied by 0.14 at each recursion level."
msgstr ""
"This time, we will draw the வளைவு that is known அச் the (6, 0.14)-Koch curve. "
"This means that you have பெறுநர் grow 6-sided polygons on the segments, and "
"that the length should be multiplied by 0.14 at each recursion level."

#. type: Content of: <p>
#: src/lessons/recursion/lego/koch/HexaKoch.html:8
msgid ""
"For the record, the original Koch curve is the (3, 1/3)-Koch curve, the Snow "
"square would be (4,1/3)-Koch curve while the Snow pentagon is also called "
"the (5, 0.4)-Koch curve. If you want, you can switch to the creative mode in "
"the menu and explore freely other Koch curves. Just change the initial call "
"to hexaKoch to what you want."
msgstr ""
"க்கு the record, the original கோச் வளைவு is the (3, 1/3)-Koch curve, the பனி "
"square would be (4,1/3)-Koch வளைவு while the பனி ஐங்கோணம் is also called the ("
"5, 0.4)-Koch curve. If you want, you can ஆளி, நிலைமாறி பெறுநர் the creative "
"பயன்முறை in the பட்டியல் and explore freely மற்றொன்று கோச் curves. Just change the "
"initial call பெறுநர் hexaKoch பெறுநர் what you want."

#. type: Content of: <p>
#: src/lessons/recursion/lego/koch/HexaKoch.html:13
msgid ""
"For further reference, please see <a "
"href=\"http://ecademy.agnesscott.edu/~lriddle/ifs/kcurve/kcurve.htm\">http://ecademy.agnesscott.edu/~lriddle/ifs/kcurve/kcurve.htm</a>."
msgstr ""
"க்கு further reference, please see <a href="
"\"http://ecademy.agnesscott.edu/~lriddle/ifs/kcurve/kcurve.htm\">http://"
"ecademy.agnesscott.edu/~lriddle/ifs/kcurve/kcurve.htm</a>."

#. type: Content of: <h2>
#: src/lessons/recursion/lego/koch/Crab.html:2
msgid "Fractal Crab"
msgstr "Fractal Crab"

#. type: Content of: <p>
#: src/lessons/recursion/lego/koch/Crab.html:4
msgid ""
"The Crab curve is not exactly a Koch curve, but that's still a fractal and "
"it's built rather similarly.  This time, we grow square triangle on the side "
"of the figure: the angle is 45 degrees, and the length is divided by "
"[!java|scala]Math.sqrt(2)[/!][!python]math.sqrt(2)[/!][!c]sqrt(2);[/!] at "
"each step."
msgstr ""
"The Crab வளைவு is not exactly a கோச் curve, but that's still a fractal and "
"it's built rather similarly.  This time, we grow square triangle on the பக்கம் "
"of the figure: the angle is 45 degrees, and the length is divided by "
"[!java|scala]Math.sqrt(2)[/!][!python]math.sqrt(2)[/!][!c]sqrt(2);[/!] at "
"each step."

#. type: Content of: <p>
#: src/lessons/recursion/lego/koch/Crab.html:8
msgid ""
"Check the figures produced by the first steps of recursion to understand the "
"pattern."
msgstr ""
"சரிபார் the figures produced by the first படிகள் of recursion பெறுநர் "
"understand the pattern."

#. type: Content of: <h3>
#: src/lessons/recursion/lego/koch/Crab.html:10
msgid "Bibliographical note"
msgstr "Bibliographical குறிப்பு"

#. type: Content of: <p>
#: src/lessons/recursion/lego/koch/Crab.html:11
msgid ""
"This curve, also called the Lévy C curve was invented in 1938 by the French "
"mathematician Paul Lévy.  As usual, the wikipedia page is very instructive, "
"and the page provide very good additions: <a "
"href=\"http://www.mathcurve.com/fractals/c/c.shtml\">http://www.mathcurve.com/fractals/c/c.shtml</a>."
msgstr ""
"This curve, also called the Lévy C வளைவு was invented in 1938 by the பிரஞ்சு "
"mathematician பால் Lévy.  அச் usual, the wikipedia page is very instructive, "
"and the page provide very good additions: <a href="
"\"http://www.mathcurve.com/fractals/c/c.shtml\">http://www.mathcurve.com/"
"fractals/c/c.shtml</a>."

#. type: Content of: <h2>
#: src/lessons/recursion/lego/tree/Tree.html:2
msgid "Trees"
msgstr "Trees"

#. type: Content of: <p>
#: src/lessons/recursion/lego/tree/Tree.html:4
msgid ""
"We will now draw trees. For that, we will write a method using double "
"recursion following this prototype"
msgstr ""
"We will now draw trees. க்கு that, we will write a method using இரட்டை "
"recursion following this prototype"

#. type: Content of: <pre>
#: src/lessons/recursion/lego/tree/Tree.html:6
#, no-wrap
msgid ""
"[!java|c]void [/!]tree([!java|c]int [/!]steps[!scala]:Int[/!], "
"[!java|c]double [/!]length[!scala]:Double[/!], [!java|c]double "
"[/!]angle[!scala]:Double[/!], [!java|c]double [/!]shrink[!scala]:Double[/!])"
msgstr ""
"[!java|c]void [/!]tree([!java|c]int [/!]steps[!scala]:Int[/!], [!java|c]"
"double [/!]length[!scala]:Double[/!], [!java|c]double [/!]angle[!scala]:"
"Double[/!], [!java|c]double [/!]shrink[!scala]:Double[/!])"

#. type: Content of: <p>
#: src/lessons/recursion/lego/tree/Tree.html:8
msgid ""
"To draw a tree of four levels, you have to draw a trunk of the given length, "
"turn right of the given angle, draw a tree of level 3, turn left twice of "
"the given angle, draw another tree of level 3, and come back to your initial "
"location. Don't forget to come back to the initial location!"
msgstr ""
"பெறுநர் draw a tree of நான்கு, நாலடி, நான்கடி levels, you have பெறுநர் draw a "
"முண்டம் of the given length, turn வலது of the given angle, draw a tree of நிலை "
"3, turn இடது twice of the given angle, draw another tree of நிலை 3, and come "
"பின் பெறுநர் your initial location. Don't forget பெறுநர் come பின் பெறுநர் the "
"initial location!"

#. type: Content of: <p><p><p>
#: src/lessons/recursion/lego/tree/Tree.html:13
msgid ""
"If a tree's trunk is of length 'len', the trunk of the next level tree will "
"be of length 'len*shrink'."
msgstr ""
"If a tree's முண்டம் is of length 'len', the முண்டம் of the அடுத்தது நிலை tree "
"will be of length 'len*shrink'."

#. type: Content of: <p><p><p><p><p>
#: src/lessons/recursion/lego/tree/Tree.html:16
msgid ""
"At the end, here is the pseudo-code of the general case (you should add the "
"base case yourself):"
msgstr ""
"At the end, here is the pseudo-code of the பொது case (you should கூட்டு the "
"காரம் case yourself):"

#. type: Content of: <p><p><p><p><pre>
#: src/lessons/recursion/lego/tree/Tree.html:18
#, no-wrap
msgid ""
"  Move forward of the desired length\n"
"  Draw (recursively) the right subtree\n"
"  Draw (recursively) the left subtree\n"
"  Move back to your initial position\n"
msgstr ""
"  Move forward of the desired length\n"
"  Draw (recursively) the வலது subtree\n"
"  Draw (recursively) the இடது subtree\n"
"  Move பின் பெறுநர் your initial position\n"

#. type: Content of: <p><p><p><p><p>
#: src/lessons/recursion/lego/tree/Tree.html:23
msgid ""
"Don't forget to add the base case to your code, or your buggle will enter an "
"infinite loop.  Then, drawing the right subtree comes down to turn right and "
"then draw the subtree."
msgstr ""
"Don't forget பெறுநர் கூட்டு the காரம் case பெறுநர் your code, or your buggle "
"will enter an கந்தழி, முடிவிலி loop.  Then, drawing the வலது subtree comes "
"down பெறுநர் turn வலது and then draw the subtree."

#. type: Content of: <p><p><p><p><p>
#: src/lessons/recursion/lego/tree/Tree.html:26
msgid ""
"As you can see, each recursion level is represented by a distinctive "
"color. For that, you have to call the <code>current(step)</code>, passing "
"the current recursion level as a parameter. This will pick the right color "
"for you.  Don't erase your great colors when you move back to your initial "
"location."
msgstr ""
"அச் you can see, each recursion நிலை is represented by a distinctive color. "
"க்கு that, you have பெறுநர் call the <code>current(step)</code>, passing the "
"மின்னோட்ட்ம், ஓட்டம் recursion நிலை அச் a parameter. This will pick the வலது color "
"க்கு you.  Don't erase your great colors when you move பின் பெறுநர் your "
"initial location."

#. type: Content of: <p><p><p><p><p>
#: src/lessons/recursion/lego/tree/Tree.html:30
msgid ""
"If you get your function wrong, this can easily become hairly to debug as "
"your errors will appear at each level of the recursion, completely changing "
"the drawing.  For debugging purpose, you can use the <code>subtree()</code> "
"that will draw a correct subtree. This function is then very similar to the "
"one you are trying to write. The only difference is that "
"<code>subtree()</code> only draws in black. So, you can use it instead of a "
"recursive call to debug your code, but you have to change for a proper "
"recursive call to your own code (once it works)  to get the colors right, "
"and pass the exercise."
msgstr ""
"If you get your சார்பு wrong, this can easily become hairly பெறுநர் debug அச் "
"your errors will appear at each நிலை of the recursion, completely changing "
"the drawing.  க்கு debugging purpose, you can use the <code>subtree()</code> "
"that will draw a சரியான subtree. This சார்பு is then very similar பெறுநர் the "
"one you அரே trying பெறுநர் write. The only வேறுபாடு is that <code>subtree()</"
"code> only draws in black. So, you can use it instead of a recursive call "
"பெறுநர் debug your code, but you have பெறுநர் change க்கு a proper recursive "
"call பெறுநர் your own குறியீடு (once it works)  பெறுநர் get the colors right, "
"and கணவாய் the exercise."

#. type: Content of: <h2>
#: src/lessons/recursion/lego/sierpinski/Sierpinski.html:2
msgid "Sierpinski's Triangle"
msgstr "Sierpinski's Triangle"

#. type: Content of: <p>
#: src/lessons/recursion/lego/sierpinski/Sierpinski.html:4
msgid ""
"The fractal we will now draw is formed of a big triangle inside which "
"several smaller triangles are embedded. The prototype of the function to "
"draw it is the following:"
msgstr ""
"The fractal we will now draw is formed of a big triangle inside which "
"several smaller triangles அரே embedded. The prototype of the சார்பு பெறுநர் "
"draw it is the following:"

#. type: Content of: <pre>
#: src/lessons/recursion/lego/sierpinski/Sierpinski.html:7
#, no-wrap
msgid ""
"[!java|c]void [/!]sierpinski([!java|c]int [/!]level[!scala]:Int[/!], "
"[!java|c]double [/!]length[!scala]:Double[/!])"
msgstr ""
"[!java|c]void [/!]sierpinski([!java|c]int [/!]level[!scala]:Int[/!], "
"[!java|c]double [/!]length[!scala]:Double[/!])"

#. type: Content of: <p>
#: src/lessons/recursion/lego/sierpinski/Sierpinski.html:9
msgid ""
"Have a look at each world's objective view to understand how to write the "
"function.  To draw one side of the triangle, draw a smaller recursive "
"triangle (halve the length) and move forward by the requested length.  "
"Globally, you have to draw 3 such sides and turn by 120 between each side."
msgstr ""
"Have a look at each world's objective பார்வை பெறுநர் understand how பெறுநர் "
"write the function.  பெறுநர் draw one பக்கம் of the triangle, draw a smaller "
"recursive triangle (halve the length) and move forward by the requested "
"length.  Globally, you have பெறுநர் draw 3 such sides and turn by 120 between "
"each side."

#. type: Content of: <h2>
#: src/lessons/recursion/lego/spiral/Spiral.html:2
msgid "Spirals"
msgstr "Spirals"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/lego/spiral/Spiral.html:4
msgid ""
"We will now draw our first recursive function with the turtle. The goal is "
"to draw different kind of spirals with the same function, which prototype is "
"the following:"
msgstr ""
"We will now draw our first recursive சார்பு with the turtle. The goal is "
"பெறுநர் draw different kind of spirals with the same function, which "
"prototype is the following:"

#. type: Content of: <pre>
#: src/lessons/recursion/lego/spiral/Spiral.html:7
#, no-wrap
msgid ""
"[!java|c]void [/!]spiral([!java|c]int [/!]steps[!scala]:Int[/!], "
"[!java|c]int [/!]angle[!scala]:Int[/!], [!java|c]int "
"[/!]length[!scala]:Int[/!], [!java|c]int [/!]increment[!scala]:Int[/!])"
msgstr ""
"[!java|c]void [/!]spiral([!java|c]int [/!]steps[!scala]:Int[/!], [!java|c]"
"int [/!]angle[!scala]:Int[/!], [!java|c]int [/!]length[!scala]:Int[/!], "
"[!java|c]int [/!]increment[!scala]:Int[/!])"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/lego/spiral/Spiral.html:9
msgid ""
"To help you understanding how to write it, here is an example of how the "
"parameters change during one specific call:"
msgstr ""
"பெறுநர் உதவி you understanding how பெறுநர் write it, here is an example of how "
"the parameters change during one specific call:"

#. type: Content of: <pre>
#: src/lessons/recursion/lego/spiral/Spiral.html:12
#, no-wrap
msgid ""
"spiral(5, 90, 0, 3);\n"
"  forward(0);\n"
"  left(90);\n"
"  spiral(4,90,3,3);\n"
"    forward(3);\n"
"    left(90);\n"
"    spiral(3,90,6,3);\n"
"      forward(6);\n"
"      left(90);\n"
"      spiral(2,90,9,3);\n"
"        forward(9);\n"
"        left(90);\n"
"        spiral(1,90,12,3);\n"
"          forward(12);\n"
"          left(90);\n"
"          spiral(0,90,12,3);\n"
msgstr ""
"spiral(5, 90, 0, 3);\n"
"  forward(0);\n"
"  left(90);\n"
"  spiral(4,90,3,3);\n"
"    forward(3);\n"
"    left(90);\n"
"    spiral(3,90,6,3);\n"
"      forward(6);\n"
"      left(90);\n"
"      spiral(2,90,9,3);\n"
"        forward(9);\n"
"        left(90);\n"
"        spiral(1,90,12,3);\n"
"          forward(12);\n"
"          left(90);\n"
"          spiral(0,90,12,3);\n"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/lego/spiral/Spiral.html:30
msgid ""
"Note that you only have to write the function, not the initial call.  Each "
"world will provide a specific set of initial parameters (use the combobox to "
"switch to other worlds). For example, the \"Square Pyramid\" world will call "
"your function as follows:"
msgstr ""
"குறிப்பு that you only have பெறுநர் write the function, not the initial call.  "
"Each world will provide a specific கணம் of initial parameters (use the "
"combobox பெறுநர் ஆளி, நிலைமாறி பெறுநர் மற்றொன்று worlds). க்கு example, the "
"\"Square Pyramid\" world will call your சார்பு அச் follows:"

#. type: Content of: <pre>
#: src/lessons/recursion/lego/spiral/Spiral.html:36
#, no-wrap
msgid "spiral(100, 90, 0, 3);\n"
msgstr "spiral(100, 90, 0, 3);\n"

#. type: Content of: <h2>
#: src/lessons/recursion/lego/spiral/SpiralUse.html:2
msgid "Drawing spirals"
msgstr "Drawing spirals"

#. type: Content of: <p>
#: src/lessons/recursion/lego/spiral/SpiralUse.html:4
msgid ""
"This exercise is not really an exercise in that sense that you just have to "
"click on the Execute button to get the reward: All the needed code is "
"already provided. Instead, you can here explore the possibilities of the "
"code you just wrote by changing the parameters of the call to the "
"<code>spiral</code> function. You can move on to the next exercise if you "
"are short on time, and come back later to play around."
msgstr ""
"This exercise is not really an exercise in that புலன் that you just have "
"பெறுநர் click on the Execute button பெறுநர் get the reward: அனைத்தும் the needed "
"குறியீடு is already provided. Instead, you can here explore the possibilities "
"of the குறியீடு you just wrote by changing the parameters of the call பெறுநர் "
"the <code>spiral</code> function. You can move on பெறுநர் the அடுத்தது "
"exercise if you அரே குறுக்கு on time, and come பின் later பெறுநர் play around."

#. type: Content of: <p>
#: src/lessons/recursion/lego/spiral/SpiralUse.html:10
msgid ""
"Here are some of the figures that you can produce with your "
"<code>Spiral</code> function, provided that you come with the right "
"parameters. You can switch to the creative mode (from the Exercise menu)  to "
"disable the world comparison when you explore with these spirals."
msgstr ""
"Here அரே some of the figures that you can produce with your <code>Spiral</"
"code> function, provided that you come with the வலது parameters. You can ஆளி"
", நிலைமாறி பெறுநர் the creative பயன்முறை (from the Exercise menu)  பெறுநர் "
"முடக்கு the world comparison when you explore with these spirals."

#. type: Content of: <p>
#: src/lessons/recursion/lego/spiral/SpiralUse.html:21
msgid ""
"If you discover a cool figure, don't forget to send your parameters (menu "
"Help/feedback) so that we can add it to the list!"
msgstr ""
"If you கண்டுபிடி a cool figure, don't forget பெறுநர் send your parameters ("
"menu Help/feedback) so that we can கூட்டு it பெறுநர் the list!"

#. type: Content of: <h2>
#: src/lessons/recursion/lego/dragoncurve/DragonCurve1.html:2
msgid "Dragon curve (1)"
msgstr "Dragon வளைவு (1)"

#. type: Content of: <p>
#: src/lessons/recursion/lego/dragoncurve/DragonCurve1.html:4
msgid "The dragon curve is a classical example of recursive method."
msgstr "The dragon வளைவு is a classical example of recursive method."

#. type: Content of: <p>
#: src/lessons/recursion/lego/dragoncurve/DragonCurve1.html:6
msgid "The definition of this curve is the following:"
msgstr "The definition of this வளைவு is the following:"

#. type: Content of: <p>
#: src/lessons/recursion/lego/dragoncurve/DragonCurve1.html:7
msgid "the dragon curve of order 1 is a vector between to arbitrary points P and Q,"
msgstr ""
"the dragon வளைவு of order 1 is a திசையன் between பெறுநர் arbitrary பிரிவகம் P "
"and Q,"

#. type: Content of: <p>
#: src/lessons/recursion/lego/dragoncurve/DragonCurve1.html:8
msgid ""
"the dragon curve of order n is the dragon curve of order n-1 between P and "
"R, followed by the same curve of order n-1 between Q and R, where PRQ is an "
"isosceles triangle with angle R being a right angle, and R being at the "
"right of the PQ vector. Thus, if P and Q coordinates are (x, y)  and (z, t), "
"the coordinate (u, v) of R are given by:"
msgstr ""
"the dragon வளைவு of order n is the dragon வளைவு of order n-1 between P and "
"R, followed by the same வளைவு of order n-1 between Q and R, where PRQ is an "
"isosceles triangle with angle R being a வலது angle, and R being at the வலது "
"of the PQ vector. Thus, if P and Q coordinates அரே (x, y)  and (z, t), the "
"ஆயம் (u, v) of R அரே given by:"

#. type: Content of: <pre>
#: src/lessons/recursion/lego/dragoncurve/DragonCurve1.html:14
#: src/lessons/recursion/lego/dragoncurve/DragonCurve2.html:27
#, no-wrap
msgid ""
"u = (x + z)/2 + (t - y)/2\n"
"v = (y + t)/2 - (z - x)/2\n"
msgstr ""
"உ = (x + z)/2 + (t - y)/2\n"
"v = (y + t)/2 - (z - x)/2\n"

#. type: Content of: <p>
#: src/lessons/recursion/lego/dragoncurve/DragonCurve1.html:18
msgid "The prototype of the method drawing the curve is the following:"
msgstr "The prototype of the method drawing the வளைவு is the following:"

#. type: Content of: <pre>
#: src/lessons/recursion/lego/dragoncurve/DragonCurve1.html:19
#: src/lessons/recursion/lego/dragoncurve/DragonCurve2.html:23
#, no-wrap
msgid ""
"[!java|c]void [/!]dragon([!java|c]int [/!]order[!scala]:Int[/!], "
"[!java|c]double [/!]x[!scala]:Double[/!], [!java|c]double "
"[/!]y[!scala]:Double[/!], [!java|c]double [/!]z[!scala]:Double[/!], "
"[!java|c]double [/!]t[!scala]:Double[/!])"
msgstr ""
"[!java|c]void [/!]dragon([!java|c]int [/!]order[!scala]:Int[/!], [!java|c]"
"double [/!]x[!scala]:Double[/!], [!java|c]double [/!]y[!scala]:Double[/!], "
"[!java|c]double [/!]z[!scala]:Double[/!], [!java|c]double [/!]t[!scala]:"
"Double[/!])"

#. type: Content of: <p>
#: src/lessons/recursion/lego/dragoncurve/DragonCurve1.html:22
msgid ""
"You should use the method <code>setPos(x,y)</code> to put your turtle at "
"coordinates (x,y) and the method <code>moveTo(z,t)</code> to draw a line "
"between the turtle position and the point(z,t)."
msgstr ""
"You should use the method <code>setPos(x,y)</code> பெறுநர் put your turtle at "
"coordinates (x,y) and the method <code>moveTo(z,t)</code> பெறுநர் draw a வரி "
"between the turtle position and the point(z,t)."

#. type: Content of: <h2>
#: src/lessons/recursion/lego/dragoncurve/DragonCurve2.html:2
msgid "The dragon curve (2)"
msgstr "The dragon வளைவு (2)"

#. type: Content of: <p>
#: src/lessons/recursion/lego/dragoncurve/DragonCurve2.html:4
msgid ""
"Previous solution induce that the turtle teleports to other location, or at "
"the very least, that it moves its pen up during the drawing. Indeed, the end "
"of the drawing of the first recursive call does not match the beginning of "
"the second recursive call. That is why we had to use the method "
"<code>setPos()</code>"
msgstr ""
"Previous நீர்மக்கூழ் induce that the turtle teleports பெறுநர் மற்றொன்று location, "
"or at the very least, that it moves its pen மேலே during the drawing. Indeed, "
"the end of the drawing of the first recursive call does not match the "
"beginning of the second recursive call. That is why we had பெறுநர் use the "
"method <code>setPos()</code>"

#. type: Content of: <p>
#: src/lessons/recursion/lego/dragoncurve/DragonCurve2.html:10
msgid ""
"In this lesson, you will write a recursive method allowing to draw the "
"dragon curve without taking the pen up. For that, we need another recursive "
"method drawing the mirror side of the curve."
msgstr ""
"In this lesson, you will write a recursive method allowing பெறுநர் draw the "
"dragon வளைவு without taking the pen up. க்கு that, we need another recursive "
"method drawing the mirror பக்கம் of the curve."

#. type: Content of: <p>
#: src/lessons/recursion/lego/dragoncurve/DragonCurve2.html:14
msgid ""
"The method <code>dragon()</code> is then recursively defined using itself "
"and <code>dragonReverse()</code>. Likewise, the method "
"<code>dragonReverse()</code> is defined recursively using itself and "
"<code>dragon()</code>. This is thus an example of <i>mutual recursion</i>."
msgstr ""
"The method <code>dragon()</code> is then recursively defined using itself "
"and <code>dragonReverse()</code>. Likewise, the method "
"<code>dragonReverse()</code> is defined recursively using itself and "
"<code>dragon()</code>. This is thus an example of <i>mutual recursion</i>."

#. type: Content of: <p>
#: src/lessons/recursion/lego/dragoncurve/DragonCurve2.html:21
msgid ""
"The prototype of the <code>dragon()</code> method remains unchanged from "
"previous exercise:"
msgstr ""
"The prototype of the <code>dragon()</code> method remains unchanged இருந்து "
"previous exercise:"

#. type: Content of: <p>
#: src/lessons/recursion/lego/dragoncurve/DragonCurve2.html:25
msgid ""
"The new point's coordinate (u, v) introduced by the <code>dragon()</code> "
"are:"
msgstr ""
"The புதிய point's ஆயம் (u, v) introduced by the <code>dragon()</code> are:"

#. type: Content of: <p>
#: src/lessons/recursion/lego/dragoncurve/DragonCurve2.html:31
msgid "The prototype of the method <code>dragonReverse</code> is similar:"
msgstr "The prototype of the method <code>dragonReverse</code> is similar:"

#. type: Content of: <pre>
#: src/lessons/recursion/lego/dragoncurve/DragonCurve2.html:32
#, no-wrap
msgid ""
"[!java|c]void [/!]dragonReverse([!java|c]int [/!]order[!scala]:Int[/!], "
"[!java|c]double [/!]x[!scala]:Double[/!], [!java|c]double "
"[/!]y[!scala]:Double[/!], [!java|c]double [/!]z[!scala]:Double[/!], "
"[!java|c]double [/!]t[!scala]:Double[/!])"
msgstr ""
"[!java|c]void [/!]dragonReverse([!java|c]int [/!]order[!scala]:Int[/!], "
"[!java|c]double [/!]x[!scala]:Double[/!], [!java|c]double [/!]y[!scala]:"
"Double[/!], [!java|c]double [/!]z[!scala]:Double[/!], [!java|c]double [/!]t"
"[!scala]:Double[/!])"

#. type: Content of: <p>
#: src/lessons/recursion/lego/dragoncurve/DragonCurve2.html:34
msgid ""
"The new point's coordinate (u, v) introduced by the "
"<code>dragonReverse()</code> are:"
msgstr ""
"The புதிய point's ஆயம் (u, v) introduced by the <code>dragonReverse()</code> "
"are:"

#. type: Content of: <pre>
#: src/lessons/recursion/lego/dragoncurve/DragonCurve2.html:36
#, no-wrap
msgid ""
"u = (x + z)/2 - (t - y)/2\n"
"v = (y + t)/2 + (z - x)/2\n"
msgstr ""
"உ = (x + z)/2 - (t - y)/2\n"
"v = (y + t)/2 + (z - x)/2\n"

#. type: Content of: <p>
#: src/lessons/recursion/lego/dragoncurve/DragonCurve2.html:40
msgid ""
"To make the work of each method recursiv more visible, the line painted by "
"the <code>dragon()</code> must be red (<code>Color.red</code>) while the "
"line painted by the <code>dragonReverse()</code> must be blue "
"(<code>Color.blue</code>)."
msgstr ""
"பெறுநர் make the வேலை of each method recursiv more visible, the வரி painted "
"by the <code>dragon()</code> must be சிவப்பு (<code>Color.red</code>) while "
"the வரி painted by the <code>dragonReverse()</code> must be நீலம் "
"(<code>Color.blue</code>)."

#. type: Content of: <h3>
#: src/lessons/recursion/hanoi/Main.html:2
#: src/lessons/recursion/hanoi/short_desc.html:2
msgid "Hanoi towers"
msgstr "Hanoi towers"

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/Main.html:3
msgid ""
"Here comes the super classical exercise on recursion along with some "
"variations. If you have any other nice variations, please submit them.  At "
"some point, someone should also probably contribute these variations to "
"wikipedia, as only the base problem is nicely described there."
msgstr ""
"Here comes the super classical exercise on recursion along with some "
"variations. If you have any மற்றொன்று nice variations, please submit them.  At "
"some point, someone should also probably பங்களிப்பு these variations பெறுநர் "
"wikipedia, அச் only the காரம் problem is nicely described there."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/Main.html:8
msgid ""
"The Interleaved and Split variations come from the following article: "
"\"Exploring Recursion with Variations on the Towers of Hanoi\", Daniel "
"W. Palmer. Available at "
"http://www.ccscjournal.willmitchell.info/Vol12-96/No2a/Daniel%20W%20Palmer.pdf"
msgstr ""
"The Interleaved and Split variations come இருந்து the following article: "
"\"Exploring Recursion with Variations on the Towers of Hanoi\", Daniel W. "
"Palmer. Available at http://www.ccscjournal.willmitchell.info/Vol12-96/No2a/"
"Daniel%20W%20Palmer.pdf"

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/Main.html:13
msgid ""
"The Linear Hanoi is briefly discussed in the article presenting the Linear "
"Twin Towers of Hanoi: \"The Linear Twin Towers of Hanoi Problem\", Steven "
"Minsker (ACM SIGCSE Bulletin Volume 39 Issue 4, December 2007). This article "
"can only be accessed through the paywall of the editor, sorry."
msgstr ""
"The நேரியல் Hanoi is briefly discussed in the article presenting the நேரியல் "
"Twin Towers of Hanoi: \"The நேரியல் Twin Towers of Hanoi Problem\", Steven "
"Minsker (ACM SIGCSE Bulletin தொகுதி 39 சிக்கல் 4, கா-மார்கழி 2007). This "
"article can only be accessed through the paywall of the editor, sorry."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/Main.html:18
msgid ""
"The 3-colors Towers of Hanoi problem was presented on this web page: "
"http://www.cut-the-knot.org/recurrence/TricolorHanoiAuto.shtml"
msgstr ""
"The 3-colors Towers of Hanoi problem was presented on this விரலிடைத் தோல் page:"
" http://www.cut-the-knot.org/recurrence/TricolorHanoiAuto.shtml"

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/Main.html:21
msgid ""
"The Cyclic Towers of Hanoi was proposed by M.D. Atkinson in an article of "
"1981 titled \"The cyclic towers of Hanoi\" (Information Processing Letters, "
"Volume 13:3).  The article is available at "
"http://www.cs.otago.ac.nz/staffpriv/mike/Papers/Hanoi/CyclicHanoi.pdf."
msgstr ""
"The Cyclic Towers of Hanoi was proposed by M.D. Atkinson in an article of "
"1981 titled \"The cyclic towers of Hanoi\" (Information Processing Letters, "
"தொகுதி 13:3).  The article is available at http://www.cs.otago.ac.nz/"
"staffpriv/mike/Papers/Hanoi/CyclicHanoi.pdf."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/short_desc.html:3
msgid "Here comes the super classical exercise on recursion."
msgstr "Here comes the super classical exercise on recursion."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/short_desc.html:5
msgid ""
"This is an application exercise of recursion, that you should master to take "
"this lesson."
msgstr ""
"This is an application exercise of recursion, that you should master பெறுநர் "
"take this lesson."

#. type: Content of: <h2>
#: src/lessons/recursion/hanoi/HanoiBoard.html:2
msgid "Tower of Hanoi"
msgstr "Tower of Hanoi"

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/HanoiBoard.html:4
msgid ""
"The Tower of Hanoi or Towers of Hanoi, also called the Tower of Brahma or "
"Towers of Brahma, is a mathematical game or puzzle. It consists of three "
"pegs, and a number of disks of different sizes which can slide onto any "
"peg. The puzzle starts with the disks in a neat stack in ascending order of "
"size on one peg, the smallest at the top, thus forming a pyramid."
msgstr ""
"The Tower of Hanoi or Towers of Hanoi, also called the Tower of Brahma or "
"Towers of Brahma, is a mathematical game or puzzle. It consists of three "
"pegs, and a எண் of disks of different sizes which can slide onto any peg. The "
"puzzle starts with the disks in a neat stack in ஏறுதல் order of அளவு on one "
"peg, the smallest at the top, thus forming a pyramid."

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/hanoi/HanoiBoard.html:10
msgid ""
"The objective of the puzzle is to move the entire stack to another peg, "
"obeying the following rules:"
msgstr ""
"The objective of the puzzle is பெறுநர் move the entire stack பெறுநர் another "
"peg, obeying the following rules:"

#. type: Content of: <ul><li>
#: src/lessons/recursion/hanoi/HanoiBoard.html:12
msgid "Only one disk may be moved at a time."
msgstr "Only one disk சி-வைகாசி be moved at a time."

#. type: Content of: <ul><li>
#: src/lessons/recursion/hanoi/HanoiBoard.html:14
msgid ""
"Each move consists of taking the upper disk from one of the pegs and sliding "
"it onto another peg, on top of the other disks that may already be present "
"on that peg."
msgstr ""
"Each move consists of taking the upper disk இருந்து one of the pegs and "
"sliding it onto another peg, on மேலே of the மற்றொன்று disks that சி-வைகாசி "
"already be present on that peg."

#. type: Content of: <ul><li>
#: src/lessons/recursion/hanoi/HanoiBoard.html:18
msgid "No disk may be placed on top of a smaller disk."
msgstr "இல்லை disk சி-வைகாசி be placed on மேலே of a smaller disk."

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/hanoi/HanoiBoard.html:23
msgid ""
"Write the core of the method: <code>[!java|c]void "
"[/!]hanoi[!c]Rec[/!]([!java|c]int [/!]height[!scala]:Int[/!], [!java|c]int "
"[/!]src[!scala]:Int[/!], [!java|c]int [/!]other[!scala]:Int[/!],[!java|c]int "
"[/!]dst[!scala]:Int[/!])</code>"
msgstr ""
"Write the வயிரம் of the method: <code>[!java|c]void [/!]hanoi[!c]Rec[/!]("
"[!java|c]int [/!]height[!scala]:Int[/!], [!java|c]int [/!]src[!scala]:Int[/!]"
", [!java|c]int [/!]other[!scala]:Int[/!],[!java|c]int [/!]dst[!scala]:Int[/"
"!])</code>"

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/HanoiBoard.html:26
msgid ""
"This method will recursively solve the presented problem. The first "
"parameter named <code>height</code> is the height of the tower to move; The "
"second parameter <code>src</code> is the index of the initial tower, the "
"third parameter <code>other</code> is the index of the unused peg while the "
"fourth parameter <code>dst</code> is the index of the expected final tower."
msgstr ""
"This method will recursively solve the presented problem. The first கூறளவு "
"named <code>height</code> is the height of the tower பெறுநர் move; The second "
"கூறளவு <code>src</code> is the குறியெண் of the initial tower, the third கூறளவு"
" <code>other</code> is the குறியெண் of the unused peg while the fourth கூறளவு "
"<code>dst</code> is the குறியெண் of the expected final tower."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/HanoiBoard.html:32
msgid ""
"A key to solving this puzzle is to recognize that it can be solved by "
"breaking the problem down into a collection of smaller problems and further "
"breaking those problems down into even smaller problems until a solution is "
"reached."
msgstr ""
"A key பெறுநர் solving this puzzle is பெறுநர் recognize that it can be solved "
"by breaking the problem down into a collection of smaller problems and "
"further breaking those problems down into இரட்டை smaller problems until a "
"நீர்மக்கூழ் is reached."

#. type: Attribute 'alt' of: <div>
#: src/lessons/recursion/hanoi/HanoiBoard.html:36
msgid "I don't get it, please give me some extra indications"
msgstr "I don't get it, please give me some extra indications"

#. type: Content of: <div>
#: src/lessons/recursion/hanoi/HanoiBoard.html:37
msgid "Here is the pseudo-code of the solution:"
msgstr "Here is the pseudo-code of the solution:"

#. type: Content of: <div><ul><li>
#: src/lessons/recursion/hanoi/HanoiBoard.html:39
msgid "label the pegs A, B, C (these labels may move at different steps)"
msgstr ""
"சிட்டை the pegs A, B, C (these சிட்டைகள் சி-வைகாசி move at different steps)"

#. type: Content of: <div><ul><li>
#: src/lessons/recursion/hanoi/HanoiBoard.html:40
msgid "let n be the total number of discs (the height of the initial tower)"
msgstr "let n be the total எண் of discs (the height of the initial tower)"

#. type: Content of: <div><ul><li>
#: src/lessons/recursion/hanoi/HanoiBoard.html:41
msgid "number the discs from 1 (smallest, topmost) to n (largest, bottommost)"
msgstr ""
"எண் the discs இருந்து 1 (smallest, topmost) பெறுநர் n (largest, bottommost)"

#. type: Content of: <div>
#: src/lessons/recursion/hanoi/HanoiBoard.html:44
msgid "To move n discs from peg A to peg C:"
msgstr "பெறுநர் move n discs இருந்து peg A பெறுநர் peg C:"

#. type: Content of: <div><ul><li>
#: src/lessons/recursion/hanoi/HanoiBoard.html:46
msgid "move n−1 discs from A to B. This leaves disc number n alone on peg A"
msgstr ""
"move n−1 discs இருந்து A பெறுநர் B. This leaves வட்டு எண் n alone on peg A"

#. type: Content of: <div><ul><li>
#: src/lessons/recursion/hanoi/HanoiBoard.html:47
msgid "move disc number n from A to C"
msgstr "move வட்டு எண் n இருந்து A பெறுநர் C"

#. type: Content of: <div><ul><li>
#: src/lessons/recursion/hanoi/HanoiBoard.html:48
msgid "move n−1 discs from B to C so they sit on disc number n"
msgstr "move n−1 discs இருந்து B பெறுநர் C so they sit on வட்டு எண் n"

#. type: Content of: <h2>
#: src/lessons/recursion/hanoi/InterleavedHanoi.html:2
msgid "Interleaved Towers of Hanoi"
msgstr "Interleaved Towers of Hanoi"

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/InterleavedHanoi.html:4
msgid ""
"In this classical variation of the Towers of Hanoi, you are given 4 pegs "
"with 2 stacks, one white and one black. You should mix the two stacks as "
"depicted in the Objective world.  As previously, you cannot move a disk on a "
"smaller disk."
msgstr ""
"In this classical variation of the Towers of Hanoi, you அரே given 4 pegs "
"with 2 stacks, one வெள்ளை and one black. You should mix the two stacks அச் "
"depicted in the Objective world.  அச் previously, you cannot move a disk on a "
"smaller disk."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/InterleavedHanoi.html:8
msgid ""
"You will probably need to reuse the <code>hanoi()</code> method that you "
"wrote in the previous exercise."
msgstr ""
"You will probably need பெறுநர் reuse the <code>hanoi()</code> method that you "
"wrote in the previous exercise."

#. type: Attribute 'alt' of: <div>
#: src/lessons/recursion/hanoi/InterleavedHanoi.html:10
#: src/lessons/recursion/hanoi/SplitHanoi1.html:10
msgid "Please show me an intermediate step"
msgstr "Please காட்டு me an intermediate படி"

#. type: Content of: <div>
#: src/lessons/recursion/hanoi/InterleavedHanoi.html:12
#: src/lessons/recursion/hanoi/SplitHanoi1.html:12
msgid "If your initial situation is as follows:"
msgstr "If your initial situation is அச் follows:"

#. type: Content of: <div>
#: src/lessons/recursion/hanoi/InterleavedHanoi.html:15
#: src/lessons/recursion/hanoi/SplitHanoi1.html:15
msgid "then you have the following situation right before the main recursive call:"
msgstr ""
"then you have the following situation வலது before the main recursive call:"

#. type: Content of: <h2>
#: src/lessons/recursion/hanoi/SplitHanoi1.html:2
msgid "Split Towers of Hanoi"
msgstr "Split Towers of Hanoi"

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/SplitHanoi1.html:4
msgid ""
"Given one interleaved stack (e.g. resulting from the previous exercise), you "
"should build two separate stacks.  In other words, your code should revert "
"the operations done to solve the previous exercise."
msgstr ""
"Given one interleaved stack (e.g. resulting இருந்து the previous exercise), "
"you should உருவாக்கு two separate stacks.  In மற்றொன்று words, your குறியீடு "
"should revert the operations முடிந்தது பெறுநர் solve the previous exercise."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/SplitHanoi1.html:7
msgid ""
"You will need an extra function that can move an interleaved stack of n "
"pairs of disks, without changing the relative positions of disks of the same "
"size."
msgstr ""
"You will need an extra சார்பு that can move an interleaved stack of n pairs "
"of disks, without changing the relative positions of disks of the same size."

#. type: Content of: <h2>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:2
msgid "Better Split Towers of Hanoi"
msgstr "Better Split Towers of Hanoi"

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:4
msgid ""
"Surprisingly, our solution to split the towers generates much more moves "
"than our solution to interleave them. As both problems are symmetric, this "
"should not be."
msgstr ""
"Surprisingly, our நீர்மக்கூழ் பெறுநர் split the towers generates much more moves "
"than our நீர்மக்கூழ் பெறுநர் interleave them. அச் both problems அரே symmetric, "
"this should not be."

#. type: Content of: <br><table><tr><td>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:7
#: src/lessons/recursion/hanoi/SplitHanoi3.html:21
msgid "Disks amount"
msgstr "Disks amount"

#. type: Content of: <br><table><tr><td>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:7
#: src/lessons/recursion/hanoi/SplitHanoi3.html:21
msgid "Interleaved"
msgstr "Interleaved"

#. type: Content of: <table><tr><td>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:7
msgid "Split"
msgstr "Split"

#. type: Content of: <br><table><tr><td>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:8
#: src/lessons/recursion/hanoi/SplitHanoi3.html:22
msgid "5 pairs"
msgstr "5 pairs"

#. type: Content of: <br><table><tr><td>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:8
#: src/lessons/recursion/hanoi/SplitHanoi3.html:22
msgid "62 moves"
msgstr "62 moves"

#. type: Content of: <br><table><tr><td>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:8
#: src/lessons/recursion/hanoi/SplitHanoi3.html:22
msgid "88 moves"
msgstr "88 moves"

#. type: Content of: <br><table><tr><td>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:9
#: src/lessons/recursion/hanoi/SplitHanoi3.html:23
msgid "6 pairs"
msgstr "6 pairs"

#. type: Content of: <br><table><tr><td>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:9
#: src/lessons/recursion/hanoi/SplitHanoi3.html:23
msgid "126 moves"
msgstr "126 moves"

#. type: Content of: <br><table><tr><td>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:9
#: src/lessons/recursion/hanoi/SplitHanoi3.html:23
msgid "183 moves"
msgstr "183 moves"

#. type: Content of: <br><table><tr><td>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:10
#: src/lessons/recursion/hanoi/SplitHanoi3.html:24
msgid "7 pairs"
msgstr "7 pairs"

#. type: Content of: <br><table><tr><td>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:10
#: src/lessons/recursion/hanoi/SplitHanoi3.html:24
msgid "254 moves"
msgstr "254 moves"

#. type: Content of: <br><table><tr><td>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:10
#: src/lessons/recursion/hanoi/SplitHanoi3.html:24
msgid "374 moves"
msgstr "374 moves"

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:13
msgid "Can you make the split tower as efficient as the interleaved one?"
msgstr "Can you make the split tower அச் efficient அச் the interleaved one?"

#. type: Attribute 'alt' of: <div>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:15
msgid "I need a starter hint"
msgstr "I need a starter hint"

#. type: Content of: <div>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:16
msgid ""
"The source of discrepancy is an inefficient problem decomposition.  "
"Satisfied that it merely worked, we looked no futher for a better solution.  "
"Keeping the disks of the interleaved tower in the correct order during every "
"move is unnecessary.  In fact, we can avoid moving the interleaved tower at "
"all.  A better problem decomposition splits the pair of disks into two "
"colored towers as they are removed from the interleaved tower."
msgstr ""
"The மூலம் of discrepancy is an inefficient problem decomposition.  Satisfied "
"that it merely worked, we looked இல்லை futher க்கு a better solution.  Keeping "
"the disks of the interleaved tower in the சரியான order during every move is "
"unnecessary.  In fact, we can avoid moving the interleaved tower at all.  A "
"better problem decomposition splits the பேரிக்காய் of disks into two colored "
"towers அச் they அரே removed இருந்து the interleaved tower."

#. type: Attribute 'alt' of: <br><br><div>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:24
msgid "The starter hint was not enough"
msgstr "The starter hint was not enough"

#. type: Content of: <br><br><div>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:25
msgid ""
"If someone could split the (n-1) pairs of disks beforehand, could you split "
"the remaining pair?"
msgstr ""
"If someone could split the (n-1) pairs of disks beforehand, could you split "
"the remaining pair?"

#. type: Attribute 'alt' of: <br><br><br><br><div>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:30
msgid "You need to be more explicit"
msgstr "You need பெறுநர் be more explicit"

#. type: Content of: <br><br><br><br><div><ul><li>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:32
msgid ""
"First split the first (n-1) pairs of disks from the interleaved stack into a "
"white tower and a black tower (calling recursively your main function)."
msgstr ""
"First split the first (n-1) pairs of disks இருந்து the interleaved stack into "
"a வெள்ளை tower and a கருப்பு tower (calling recursively your main function)."

#. type: Content of: <br><br><br><br><div><ul><li>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:33
msgid "Then move the large white disk on its target pole."
msgstr "Then move the large வெள்ளை disk on its target pole."

#. type: Content of: <br><br><br><br><div><ul><li>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:34
msgid "Then move the (n-1) smaller white disks on top of the large one."
msgstr "Then move the (n-1) smaller வெள்ளை disks on மேலே of the large one."

#. type: Content of: <br><br><br><br><div><ul><li>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:35
msgid "Then move the large black disk on its target pole."
msgstr "Then move the large கருப்பு disk on its target pole."

#. type: Content of: <br><br><br><br><div><ul><li>
#: src/lessons/recursion/hanoi/SplitHanoi2.html:36
msgid "Then move the smaller black disks in position."
msgstr "Then move the smaller கருப்பு disks in position."

#. type: Content of: <h2>
#: src/lessons/recursion/hanoi/SplitHanoi3.html:2
msgid "Fast Split Towers of Hanoi"
msgstr "Fast Split Towers of Hanoi"

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/SplitHanoi3.html:4
msgid ""
"Again, our previous solution is working, but it is far from being optimal.  "
"When moving the towers, we use the algorithm for 3 pegs even if we have 4 "
"pegs.  Of course, movements to the last peg are restricted since it contains "
"the other stack, but we can always store the smallest disk on top of the "
"other stack before moving our stack."
msgstr ""
"Again, our previous நீர்மக்கூழ் is working, but it is far இருந்து being optimal.  "
"When moving the towers, we use the படிமுறை க்கு 3 pegs இரட்டை if we have 4 "
"pegs.  Of course, movements பெறுநர் the last peg அரே restricted since it "
"contains the மற்றொன்று stack, but we can எப்போதும் store the smallest disk on "
"மேலே of the மற்றொன்று stack before moving our stack."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/SplitHanoi3.html:9
msgid ""
"For that, we need to devise a new function <code>hanoi_fast(height, src, "
"free, full, dst)</code> that moves the stack from <code>src</code> to "
"<code>dst</code> using <code>free</code>, but storing the smallest disk onto "
"<code>full</code> beforehand."
msgstr ""
"க்கு that, we need பெறுநர் devise a புதிய சார்பு <code>hanoi_fast(height, src, "
"free, full, dst)</code> that moves the stack இருந்து <code>src</code> பெறுநர் "
"<code>dst</code> using <code>free</code>, but storing the smallest disk onto "
"<code>full</code> beforehand."

#. type: Attribute 'alt' of: <div>
#: src/lessons/recursion/hanoi/SplitHanoi3.html:13
msgid "I'm lost"
msgstr "I'm lost"

#. type: Content of: <div>
#: src/lessons/recursion/hanoi/SplitHanoi3.html:14
msgid ""
"The <code>hanoi_fast(height, src, free, full, dst)</code> function is not "
"recursive.  It moves the first disk and then call the regular "
"<code>hanoi()</code> function."
msgstr ""
"The <code>hanoi_fast(height, src, free, full, dst)</code> சார்பு is not "
"recursive.  It moves the first disk and then call the regular <code>hanoi()</"
"code> function."

#. type: Content of: <br><p>
#: src/lessons/recursion/hanoi/SplitHanoi3.html:18
msgid ""
"This change greatly improve the performance, as you can see below. Of "
"course, this trick could also be used for the interleaved algorithm, leading "
"as expected to the exact same performance."
msgstr ""
"This change greatly improve the performance, அச் you can see below. Of "
"course, this trick could also be used க்கு the interleaved algorithm, leading "
"அச் expected பெறுநர் the exact same performance."

#. type: Content of: <br><table><tr><td>
#: src/lessons/recursion/hanoi/SplitHanoi3.html:21
msgid "Slow Split"
msgstr "Slow Split"

#. type: Content of: <br><table><tr><td>
#: src/lessons/recursion/hanoi/SplitHanoi3.html:21
msgid "Fast Split"
msgstr "Fast Split"

#. type: Content of: <br><table><tr><td>
#: src/lessons/recursion/hanoi/SplitHanoi3.html:22
msgid "46 moves"
msgstr "46 moves"

#. type: Content of: <br><table><tr><td>
#: src/lessons/recursion/hanoi/SplitHanoi3.html:23
msgid "82 moves"
msgstr "82 moves"

#. type: Content of: <br><table><tr><td>
#: src/lessons/recursion/hanoi/SplitHanoi3.html:24
msgid "150 moves"
msgstr "150 moves"

#. type: Content of: <br><p>
#: src/lessons/recursion/hanoi/SplitHanoi3.html:27
msgid ""
"As a conclusion, most of us are satisfied with a working solution and we "
"easily overlook possibilities to improve the problem "
"decomposition. <b>You</b> should not do that ;)"
msgstr ""
"அச் a conclusion, பெரும்பாலானவை of us அரே satisfied with a working நீர்மக்கூழ் and "
"we easily overlook possibilities பெறுநர் improve the problem decomposition. "
"<b>You</b> should not do that ;)"

#. type: Content of: <h2>
#: src/lessons/recursion/hanoi/LinearHanoi.html:2
msgid "Linear Towers of Hanoi"
msgstr "நேரியல் Towers of Hanoi"

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/LinearHanoi.html:4
msgid ""
"This is a classical variation over the Towers of Hanoi where some moves are "
"forbidden.  Specifically, disks cannot move directly between the left-most "
"and the right-most pegs.  The middle peg must be involved in every moves."
msgstr ""
"This is a classical variation வீச்சலகு the Towers of Hanoi where some moves அரே"
" forbidden.  Specifically, disks cannot move directly between the left-most "
"and the right-most pegs.  The middle peg must be involved in every moves."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/LinearHanoi.html:8
msgid ""
"Beside of that extra complexity, the problem remains unchanged: you are "
"requested to move the whole stack of disks from one extremity peg to the "
"other one. You can only move one disk at a time, and a bigger disk cannot be "
"placed over a smaller one."
msgstr ""
"Beside of that extra complexity, the problem remains unchanged: you அரே "
"requested பெறுநர் move the whole stack of disks இருந்து one extremity peg "
"பெறுநர் the மற்றொன்று one. You can only move one disk at a time, and a bigger "
"disk cannot be placed வீச்சலகு a smaller one."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/LinearHanoi.html:12
msgid ""
"As with the classical version, it is much easier to produce a recursive "
"solution, and you are absolutely able to devise this solution if you think "
"hard enough about it."
msgstr ""
"அச் with the classical version, it is much easier பெறுநர் produce a recursive "
"solution, and you அரே absolutely able பெறுநர் devise this நீர்மக்கூழ் if you "
"think hard enough பற்றி it."

#. type: Attribute 'alt' of: <div>
#: src/lessons/recursion/hanoi/LinearHanoi.html:15
msgid "I tried, but I don't get it"
msgstr "I tried, but I don't get it"

#. type: Content of: <div>
#: src/lessons/recursion/hanoi/LinearHanoi.html:16
msgid ""
"The standard recursive algorithm for classical Hanoi is of complexity "
"<i>2^n-1</i> where the standard recursive algorithm for this variation is of "
"complexity <i>3^n-1</i>."
msgstr ""
"The தரநிலை recursive படிமுறை க்கு classical Hanoi is of complexity <i>2^n-1</"
"i> where the தரநிலை recursive படிமுறை க்கு this variation is of complexity "
"<i>3^n-1</i>."

#. type: Attribute 'alt' of: <div>
#: src/lessons/recursion/hanoi/LinearHanoi.html:20
msgid "That first tip was not enough"
msgstr "That first tip was not enough"

#. type: Content of: <div>
#: src/lessons/recursion/hanoi/LinearHanoi.html:21
msgid ""
"The standard recursive algorithm for classical Hanoi involves two recursive "
"calls sandwiching one movement of the largest disk, the standard recursive "
"algorithm for Linear Hanoi involves three recursive calls sandwiched around "
"two movements of the same disk."
msgstr ""
"The தரநிலை recursive படிமுறை க்கு classical Hanoi involves two recursive "
"calls sandwiching one movement of the largest disk, the தரநிலை recursive "
"படிமுறை க்கு நேரியல் Hanoi involves three recursive calls sandwiched around "
"two movements of the same disk."

#. type: Content of: <h2>
#: src/lessons/recursion/hanoi/LinearTwinHanoi.html:2
msgid "Linear Twin Towers of Hanoi"
msgstr "நேரியல் Twin Towers of Hanoi"

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/LinearTwinHanoi.html:4
msgid ""
"This is a mix between both the Split and Interleaved problems, and the "
"linear problem.  We are given two stacks of disks, on three pegs. We are "
"expected to swap the stacks' position while respecting the classical Hanoi "
"movement restrictions (one disk at a time, and no large disk over smaller "
"disks) and the linear movement restriction (no direct exchange between the "
"left-most and right-most pegs)."
msgstr ""
"This is a mix between both the Split and Interleaved problems, and the நேரியல்"
" problem.  We அரே given two stacks of disks, on three pegs. We அரே expected "
"பெறுநர் swap the stacks' position while respecting the classical Hanoi "
"movement restrictions (one disk at a time, and இல்லை large disk வீச்சலகு "
"smaller disks) and the நேரியல் movement restriction (no direct exchange "
"between the left-most and right-most pegs)."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/LinearTwinHanoi.html:10
msgid "You will use three recursive functions:"
msgstr "You will use three recursive functions:"

#. type: Content of: <ul><li>
#: src/lessons/recursion/hanoi/LinearTwinHanoi.html:12
msgid ""
"<b>moveDouble(k,from, to)</b>: moves an interleaved stack of k pairs of "
"disks, without changing the relative positions of disks of the same size. As "
"in the Split Hanoi problem, an interleaved stack alternates white and black "
"disks of each sizes. This function is not completely new: you wrote a "
"version with 4 pegs (but using only 3 of them) for the first version of the "
"Split Hanoi problem."
msgstr ""
"<b>moveDouble(k,from, to)</b>: moves an interleaved stack of k pairs of "
"disks, without changing the relative positions of disks of the same size. அச் "
"in the Split Hanoi problem, an interleaved stack alternates வெள்ளை and கருப்பு "
"disks of each sizes. This சார்பு is not completely new: you wrote a version "
"with 4 pegs (but using only 3 of them) க்கு the first version of the Split "
"Hanoi problem."

#. type: Content of: <ul><li>
#: src/lessons/recursion/hanoi/LinearTwinHanoi.html:17
msgid ""
"<b>gather(k)</b>: from the initial split situation, build on peg #2 an "
"interleaved stack of k pairs of disks. You may parametrize your function so "
"that it can be used to gather the disk on any peg passed as parameter, but "
"in practice, your function will only be used to gather on the last peg."
msgstr ""
"<b>gather(k)</b>: இருந்து the initial split situation, உருவாக்கு on peg #2 an "
"interleaved stack of k pairs of disks. You சி-வைகாசி parametrize your சார்பு "
"so that it can be used பெறுநர் gather the disk on any peg passed அச் "
"parameter, but in practice, your சார்பு will only be used பெறுநர் gather on "
"the last peg."

#. type: Content of: <ul><li>
#: src/lessons/recursion/hanoi/LinearTwinHanoi.html:21
msgid ""
"<b>scatter(k)</b>: from a situation where k pairs of disks are interleaved "
"on peg #0, split it down by moving the white disks to peg #1 and black ones "
"to peg #2."
msgstr ""
"<b>scatter(k)</b>: இருந்து a situation where k pairs of disks அரே interleaved "
"on peg #0, split it down by moving the வெள்ளை disks பெறுநர் peg #1 and கருப்பு "
"ones பெறுநர் peg #2."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/LinearTwinHanoi.html:25
msgid ""
"In <code>gather()</code>, the recursive call comes before two calls to "
"<code>moveDouble()</code> while in <code>scatter()</code>, the calls to "
"<code>moveDouble()</code> come before the recursive call.  The main function "
"that you should write is not recursive, but simply gather almost all disks, "
"moves directly the remaining disks, and then scatters back the small disks."
msgstr ""
"In <code>gather()</code>, the recursive call comes before two calls பெறுநர் "
"<code>moveDouble()</code> while in <code>scatter()</code>, the calls பெறுநர் "
"<code>moveDouble()</code> come before the recursive call.  The main சார்பு "
"that you should write is not recursive, but simply gather almost அனைத்தும் "
"disks, moves directly the remaining disks, and then scatters பின் the small "
"disks."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/LinearTwinHanoi.html:31
msgid ""
"The linearity naturally induces some extra complexity as you have to "
"decompose every move between pegs 0 and 2. I am still confident in your "
"ability to overcome the challenge :)"
msgstr ""
"The linearity naturally induces some extra complexity அச் you have பெறுநர் "
"decompose every move between pegs 0 and 2. I am still confident in your திறமை"
" பெறுநர் overcome the challenge :)"

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/LinearTwinHanoi.html:35
msgid ""
"Note that the requested algorithm was proved optimal for that problem, so "
"you don't need to fiddle the performance this time."
msgstr ""
"குறிப்பு that the requested படிமுறை was proved optimal க்கு that problem, so "
"you don't need பெறுநர் fiddle the performance this time."

#. type: Content of: <h2>
#: src/lessons/recursion/hanoi/TricolorHanoi1.html:2
msgid "Tricolor Hanoi: stack move"
msgstr "Tricolor Hanoi: stack move"

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/TricolorHanoi1.html:4
msgid ""
"In this set of exercises, we will devise an algorithm for the Tricolor Hanoi "
"problem.  There will be 3 stacks on 3 pegs, each stack of a differing color, "
"and the problem is to exchange the stacks' positions under the classical "
"move rules (one disk at a time, and no bigger disk over smaller disk)."
msgstr ""
"In this கணம் of exercises, we will devise an படிமுறை க்கு the Tricolor Hanoi "
"problem.  There will be 3 stacks on 3 pegs, each stack of a differing color, "
"and the problem is பெறுநர் exchange the stacks' positions under the classical "
"move rules (one disk at a time, and இல்லை bigger disk வீச்சலகு smaller disk)."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/TricolorHanoi1.html:9
msgid "As in previous exercises, our solution will use three functions:"
msgstr "அச் in previous exercises, our நீர்மக்கூழ் will use three functions:"

#. type: Content of: <ul><li>
#: src/lessons/recursion/hanoi/TricolorHanoi1.html:11
msgid ""
"<code>move3(n, src, mid, dst)</code>: moves a stack of interleaved disks, ie "
"a stack of (n*3) disks of alternating colors from peg <code>src</code> to "
"peg <code>dst</code>."
msgstr ""
"<code>move3(n, src, mid, dst)</code>: moves a stack of interleaved disks, ie "
"a stack of (n*3) disks of alternating colors இருந்து peg <code>src</code> "
"பெறுநர் peg <code>dst</code>."

#. type: Content of: <ul><li>
#: src/lessons/recursion/hanoi/TricolorHanoi1.html:13
msgid ""
"<code>gather()</code>: builds an interleaved stack from the regular split "
"ones."
msgstr ""
"<code>gather()</code>: builds an interleaved stack இருந்து the regular split "
"ones."

#. type: Content of: <ul><li>
#: src/lessons/recursion/hanoi/TricolorHanoi1.html:14
msgid ""
"<code>scatter()</code>: splits an interleaved stack into several regular "
"ones."
msgstr ""
"<code>scatter()</code>: splits an interleaved stack into several regular "
"ones."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/TricolorHanoi1.html:17
msgid ""
"The goal of this first exercise in the series is to devise the "
"<code>move3()</code> function.  This starter task should not block you for "
"too long, actually. It is ok if your function changes the order of the "
"bottom triplet of disks, but it must preserve the order of the other "
"triplets."
msgstr ""
"The goal of this first exercise in the series is பெறுநர் devise the "
"<code>move3()</code> function.  This starter task should not block you க்கு "
"too long, actually. It is சரி if your சார்பு changes the order of the கீழே "
"triplet of disks, but it must preserve the order of the மற்றொன்று triplets."

#. type: Content of: <h2>
#: src/lessons/recursion/hanoi/TricolorHanoi2.html:2
msgid "Tricolor Hanoi: the Gathering"
msgstr "Tricolor Hanoi: the Gathering"

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/TricolorHanoi2.html:4
msgid ""
"It is now time to write the second function required by the Tricolor Hanoi "
"problem.  <code>gather()</code> builds an interleaved stack from the regular "
"split ones. This function takes four arguments, the last one being the "
"target peg where the interleaved stack must be assembled.  As you can see in "
"the examples, the colors of must be in the same order for each triplet of "
"disks."
msgstr ""
"It is now time பெறுநர் write the second சார்பு required by the Tricolor Hanoi "
"problem.  <code>gather()</code> builds an interleaved stack இருந்து the "
"regular split ones. This சார்பு takes நான்கு, நாலடி, நான்கடி arguments, the "
"last one being the target peg where the interleaved stack must be "
"assembled.  அச் you can see in the examples, the colors of must be in the "
"same order க்கு each triplet of disks."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/TricolorHanoi2.html:9
msgid ""
"That function actually uses the <code>move3()</code> that you wrote just "
"before. Simply copy/paste your code over to reuse it. If you're lost, please "
"refer to the Interleaved Hanoi exercise. Gathering 3 stacks on 3 pegs is "
"rather similar to gathering 2 stacks on 4 pegs. You can find that exercise "
"<a href=\"plm://lessons.recursion.hanoi/InterleavedHanoi\">here</a>."
msgstr ""
"That சார்பு actually uses the <code>move3()</code> that you wrote just "
"before. Simply copy/paste your குறியீடு வீச்சலகு பெறுநர் reuse it. If you're "
"lost, please refer பெறுநர் the Interleaved Hanoi exercise. Gathering 3 stacks "
"on 3 pegs is rather similar பெறுநர் gathering 2 stacks on 4 pegs. You can "
"கண்டுபிடி that exercise <a href="
"\"plm://lessons.recursion.hanoi/InterleavedHanoi\">here</a>."

#. type: Content of: <h2>
#: src/lessons/recursion/hanoi/TricolorHanoi3.html:2
msgid "Tricolor Hanoi: the Final"
msgstr "Tricolor Hanoi: the Final"

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/TricolorHanoi3.html:4
msgid ""
"We are almost ready to write the whole tricolor algorithm. We just need the "
"<code>scatter()</code> function, very inspired from the first one that we "
"wrote for the <a href=\"plm://lessons.recursion.hanoi/SplitHanoi1\">Split "
"Hanoi problem</a>. Assuming that your interleaved stack is placed on the "
"<code>mid</code> peg, spread the disks over all pegs. Make sure to use "
"<code>move3()</code> an even amount of time at each recursive level to "
"ensure that the bottom disks are in the correct order."
msgstr ""
"We அரே almost ready பெறுநர் write the whole tricolor algorithm. We just need "
"the <code>scatter()</code> function, very inspired இருந்து the first one that "
"we wrote க்கு the <a href=\"plm://lessons.recursion.hanoi/SplitHanoi1\">Split "
"Hanoi problem</a>. Assuming that your interleaved stack is placed on the "
"<code>mid</code> peg, spread the disks வீச்சலகு அனைத்தும் pegs. Make sure பெறுநர் "
"use <code>move3()</code> an இரட்டை amount of time at each recursive நிலை "
"பெறுநர் ensure that the கீழே disks அரே in the சரியான order."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/TricolorHanoi3.html:10
msgid ""
"As you can see, the initial situation is not the one expected by "
"<code>scatter()</code>. You first have to apply <code>gather()</code> and "
"<code>move3()</code> (twice to get the bottom triplet in the right "
"order). These few steps plus the new <code>scatter()</code> function are "
"enough to entirely solve the Tricolor Hanoi problem."
msgstr ""
"அச் you can see, the initial situation is not the one expected by "
"<code>scatter()</code>. You first have பெறுநர் இடு <code>gather()</code> and "
"<code>move3()</code> (twice பெறுநர் get the கீழே triplet in the வலது order). "
"These few படிகள் plus the புதிய <code>scatter()</code> சார்பு அரே enough பெறுநர்"
" entirely solve the Tricolor Hanoi problem."

#. type: Content of: <h2>
#: src/lessons/recursion/hanoi/CyclicHanoi.html:2
msgid "Cyclic Towers of Hanoi"
msgstr "Cyclic Towers of Hanoi"

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/CyclicHanoi.html:4
msgid ""
"This variation of the Towers of Hanoi is very similar to the regular "
"problem: you are given one stack of disks and three pegs, and you cannot "
"move a larger disk over a smaller one.  The change is that you can only move "
"disks clockwise: 0->1 or 1->2 or 2->0, but never in the other direction."
msgstr ""
"This variation of the Towers of Hanoi is very similar பெறுநர் the regular "
"problem: you அரே given one stack of disks and three pegs, and you cannot "
"move a larger disk வீச்சலகு a smaller one.  The change is that you can only "
"move disks clockwise: 0->1 or 1->2 or 2->0, but ஒருபோதும் in the மற்றொன்று "
"direction."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/CyclicHanoi.html:8
msgid ""
"Obviously, the movements are not symmetric anymore. Moves from A to B are "
"now very different from moves to B to A.  As a result, you need two "
"recursive functions depending on whether you are moving the stack clockwise "
"or counterclockwise."
msgstr ""
"Obviously, the movements அரே not சமச்சீர் anymore. Moves இருந்து A பெறுநர் B அரே "
"now very different இருந்து moves பெறுநர் B பெறுநர் A.  அச் a result, you need "
"two recursive செயல்பாடுகள் depending on whether you அரே moving the stack "
"clockwise or counterclockwise."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/CyclicHanoi.html:11
msgid ""
"That being said, the problem decomposition is very similar to the classical "
"Hanoi. The twist is that each function call the other one, constituting a "
"nice example of mutual recursion."
msgstr ""
"That being said, the problem decomposition is very similar பெறுநர் the "
"classical Hanoi. The twist is that each சார்பு call the மற்றொன்று one, "
"constituting a nice example of mutual recursion."

#. type: Content of: <h2>
#: src/lessons/recursion/hanoi/IterativeHanoi.html:2
msgid "Iterative Towers of Hanoi"
msgstr "Iterative Towers of Hanoi"

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/IterativeHanoi.html:4
msgid ""
"In this last exercise of the series, we will implement an iterative "
"algorithm for the base problem of the Towers of Hanoi (one stack, 3 pegs, no "
"extra movement restriction)."
msgstr ""
"In this last exercise of the series, we will implement an iterative படிமுறை "
"க்கு the காரம் problem of the Towers of Hanoi (one stack, 3 pegs, இல்லை extra "
"movement restriction)."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/IterativeHanoi.html:8
msgid ""
"This algorithm is actually very simple: On odd moves, the smallest disk is "
"moved in a given direction (either increasing 0-&gt;1-&gt;2-&gt;0 or "
"decreasing 2-&lt;1-&lt;0-&lt;2) while on even moves, the only possible move "
"that does not imply the smallest disk is made. You stop as soon as the stack "
"is rebuilt on another location."
msgstr ""
"This படிமுறை is actually very simple: On ஒற்றைப் படை moves, the smallest disk "
"is moved in a given direction (either increasing 0-&gt;1-&gt;2-&gt;0 or "
"decreasing 2-&lt;1-&lt;0-&lt;2) while on இரட்டை moves, the only possible move "
"that does not imply the smallest disk is made. You நிறுத்து அச் soon அச் the "
"stack is rebuilt on another location."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/IterativeHanoi.html:13
msgid ""
"The function that you now need to write takes two parameters: the initial "
"position of the smallest disk (i.e., the peg initially containing the stack) "
"and a boolean indicating whether the smallest disk should move in the "
"increasing order or not."
msgstr ""
"The சார்பு that you now need பெறுநர் write takes two parameters: the initial "
"position of the smallest disk (i.e., the peg initially containing the stack) "
"and a boolean indicating whether the smallest disk should move in the "
"increasing order or not."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/IterativeHanoi.html:17
msgid ""
"The simplicity of this algorithm is actually almost deceiving. One could "
"wonder on the interest of the recursive algorithms when such a simple "
"iterative algorithm exists. My personal feeling is that this solution is "
"nice to execute, but almost impossible to devise in the first place (I even "
"suspect that the authors built this iterative solution from observations of "
"the recursive execution)..."
msgstr ""
"The simplicity of this படிமுறை is actually almost deceiving. One could "
"wonder on the interest of the recursive algorithms when such a simple "
"iterative படிமுறை exists. My personal feeling is that this நீர்மக்கூழ் is nice "
"பெறுநர் execute, but almost impossible பெறுநர் devise in the first place (I "
"இரட்டை suspect that the ஆசிரியர்கள் built this iterative நீர்மக்கூழ் இருந்து "
"observations of the recursive execution)..."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/IterativeHanoi.html:23
msgid ""
"Predicting the effect of this function is also difficult: When the small "
"disk moves in the increasing order, the stack is reconstructed on the right "
"peg with 5 disks but on the left with 6 disks."
msgstr ""
"Predicting the விளைவு of this சார்பு is also difficult: When the small disk "
"moves in the increasing order, the stack is reconstructed on the வலது peg "
"with 5 disks but on the இடது with 6 disks."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/IterativeHanoi.html:27
msgid ""
"An interesting question is whether such simple iterative algorithms exist "
"for the other variation of the problem. Some were given in the literature "
"(e.g. for the cyclic variation). I would happily integrate your solutions to "
"the PLM, especially if you can hint (without spoiling) the solution to guide "
"the next ones."
msgstr ""
"An interesting கேள்வி is whether such simple iterative algorithms exist க்கு "
"the மற்றொன்று variation of the problem. Some were given in the literature ("
"e.g. க்கு the cyclic variation). I would happily integrate your solutions "
"பெறுநர் the PLM, especially if you can hint (without spoiling) the நீர்மக்கூழ் "
"பெறுநர் guide the அடுத்தது ones."

#. type: Content of: <h1>
#: src/lessons/recursion/hanoi/universe/HanoiWorld.html:2
msgid "HanoiWorld"
msgstr "HanoiWorld"

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/universe/HanoiWorld.html:5
msgid ""
"This world implements the ultra-classical Hanoi problem. You are asked to "
"move the disk pile from the stick where they are to the target stick (given "
"as second parameter in the world's name -- number 1 for the default "
"world). There is some extra constraint: you can only move one disk at a "
"time, and you cannot move a big disk over a smaller one."
msgstr ""
"This world implements the ultra-classical Hanoi problem. You அரே asked பெறுநர்"
" move the disk pile இருந்து the stick where they அரே பெறுநர் the target stick ("
"given அச் second கூறளவு in the world's பெயர் -- எண் 1 க்கு the இயல்புநிலை world). "
"There is some extra constraint: you can only move one disk at a time, and "
"you cannot move a big disk வீச்சலகு a smaller one."

#. type: Content of: <p>
#: src/lessons/recursion/hanoi/universe/HanoiWorld.html:12
msgid "Only 4 functions are provided:"
msgstr "Only 4 செயல்பாடுகள் அரே provided:"

#. type: Content of: <pre>
#: src/lessons/recursion/hanoi/universe/HanoiWorld.html:14
#, no-wrap
msgid "[!java|c]void [/!]move([!java|c]int [/!]src, [!java|c]int [/!]dst)"
msgstr "[!java|c]void [/!]move([!java|c]int [/!]src, [!java|c]int [/!]dst)"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/hanoi/universe/HanoiWorld.html:16
msgid ""
"Moves one disk from the stick <code>src</code> onto the stick "
"<code>dst</code>. If you try to do an invalid move (like laying a disk over "
"a smaller one), an IllegalArgumentException is thrown."
msgstr ""
"Moves one disk இருந்து the stick <code>src</code> onto the stick <code>dst</"
"code>. If you try பெறுநர் do an செல்லுபடியாகாத move (like laying a disk வீச்சலகு "
"a smaller one), an IllegalArgumentException is thrown."

#. type: Content of: <pre>
#: src/lessons/recursion/hanoi/universe/HanoiWorld.html:20
#, no-wrap
msgid "[!java|c]int [/!]getSlotSize([!java|c]int [/!]slot)[!scala]:Int[/!]"
msgstr "[!java|c]int [/!]getSlotSize([!java|c]int [/!]slot)[!scala]:Int[/!]"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/hanoi/universe/HanoiWorld.html:21
msgid ""
"Returns the amount of disks placed on the specified slot. This is mainly "
"used to initialize the recursion and set the amount of recursive call to "
"execute."
msgstr ""
"Returns the amount of disks placed on the specified slot. This is mainly "
"used பெறுநர் initialize the recursion and கணம் the amount of recursive call "
"பெறுநர் execute."

#. type: Content of: <pre>
#: src/lessons/recursion/hanoi/universe/HanoiWorld.html:24
#, no-wrap
msgid "[!java|c]int [/!]getSlotRadius([!java|c]int [/!]slot)[!scala]:Int[/!]"
msgstr "[!java|c]int [/!]getSlotRadius([!java|c]int [/!]slot)[!scala]:Int[/!]"

#. type: Content of: outside any tag (error?)
#: src/lessons/recursion/hanoi/universe/HanoiWorld.html:25
msgid "Returns the radius of the top-most disk of the specified slot."
msgstr "Returns the ஆரம் of the top-most disk of the specified slot."

#. type: Content of: <h3>
#: src/lessons/maze/Main.html:2 src/lessons/maze/short_desc.html:2
msgid "Labyrinths"
msgstr "Labyrinths"

#. type: Content of: <p>
#: src/lessons/maze/Main.html:4 src/lessons/maze/short_desc.html:4
msgid "This lesson proposes several exercises about labyrinths in the buggle world."
msgstr ""
"This பாடம் proposes several exercises பற்றி labyrinths in the buggle world."

#. type: Content of: <h2>
#: src/lessons/maze/randommouse/RandomMouseMaze.html:2
msgid "The crazy mouse"
msgstr "The crazy mouse"

#. type: Content of: <p>
#: src/lessons/maze/randommouse/RandomMouseMaze.html:4
msgid ""
"The day of your buggle starts badly. Out of luck, it got trapped into a "
"maze. Help it finding its path out of there."
msgstr ""
"The நாள் of your buggle starts badly. Out of luck, it got trapped into a "
"maze. உதவி it finding its பாதை out of there."

#. type: Content of: <p>
#: src/lessons/maze/randommouse/RandomMouseMaze.html:9
msgid ""
"The exit is represented by a baggle and you need to pick this baggle in "
"order to exit the maze."
msgstr ""
"The exit is represented by a baggle and you need பெறுநர் pick this baggle in "
"order பெறுநர் exit the maze."

#. type: Content of: <p>
#: src/lessons/maze/randommouse/RandomMouseMaze.html:14
msgid ""
"Since the maze is so small, we can write the dumbest possible algorithm to "
"do so. It relies on randomness and proves quite inefficient."
msgstr ""
"Since the maze is so small, we can write the dumbest possible படிமுறை பெறுநர் "
"do so. It relies on randomness and proves quite inefficient."

#. type: Content of: <p>
#: src/lessons/maze/randommouse/RandomMouseMaze.html:19
msgid ""
"While the buggle didn't find the path to the escape, it must proceed the "
"following way: pick a random integer between 0 and 2 by using the provided "
"<code>random3()</code> method and make one of the following actions: moving "
"forward if possible, turn left or turn right."
msgstr ""
"While the buggle didn't கண்டுபிடி the பாதை பெறுநர் the escape, it must proceed "
"the following way: pick a சீரற்ற முழு எண் between 0 and 2 by using the provided "
"<code>random3()</code> method and make one of the following actions: moving "
"forward if possible, turn இடது or turn right."

#. type: Content of: <p>
#: src/lessons/maze/randommouse/RandomMouseMaze.html:25
msgid ""
"You don't believe that it could work? Well, give it a try, you will see...  "
"Don't forget to pick up the baggle once you've reached it."
msgstr ""
"You don't believe that it could work? Well, give it a try, you will see...  "
"Don't forget பெறுநர் pick மேலே the baggle once you've reached it."

#. type: Content of: <h2>
#: src/lessons/maze/wallfollower/WallFollowerMaze.html:2
msgid "Following the walls"
msgstr "Following the walls"

#. type: Content of: <p>
#: src/lessons/maze/wallfollower/WallFollowerMaze.html:4
msgid ""
"This time, the maze is a bit more complicated. Random won't be enough, we "
"ough to be smart!"
msgstr ""
"This time, the maze is a துணுக்கு more complicated. சீரற்ற won't be enough, we "
"ough பெறுநர் be smart!"

#. type: Content of: <p>
#: src/lessons/maze/wallfollower/WallFollowerMaze.html:7
msgid ""
"The good news is that this maze is simpler that it seems at the first "
"glance: every wall are connected to each other. To get out of this kind of "
"maze, the buggle only have to follow a wall (the one on its left or the one "
"on its right, it doesn't matter).  While keeping a paw on the wall, the "
"buggle must move forward until it finds the maze exit and this biscuit it "
"loves so much."
msgstr ""
"The good செய்தி is that this maze is simpler that it seems at the first "
"glance: every wall அரே connected பெறுநர் each other. பெறுநர் get out of this "
"kind of maze, the buggle only have பெறுநர் follow a wall (the one on its இடது "
"or the one on its right, it doesn't matter).  While keeping a paw on the "
"wall, the buggle must move forward until it finds the maze exit and this "
"biscuit it loves so much."

#. type: Content of: <p>
#: src/lessons/maze/wallfollower/WallFollowerMaze.html:14
msgid ""
"This works here because there is no island of isolated walls, so our buggle "
"cannot loop around for ever without encountering its baggle."
msgstr ""
"This works here because there is இல்லை island of தனித்த walls, so our buggle "
"cannot loop around க்கு ever without encountering its baggle."

#. type: Content of: outside any tag (error?)
#: src/lessons/maze/wallfollower/WallFollowerMaze.html:18
msgid ""
"The goal of this exercise is to write an algorithm allowing the buggle to "
"get out of this maze."
msgstr ""
"The goal of this exercise is பெறுநர் write an படிமுறை allowing the buggle "
"பெறுநர் get out of this maze."

#. type: Content of: <p>
#: src/lessons/maze/wallfollower/WallFollowerMaze.html:21
msgid ""
"As said earlier, it does not matter whether you decide to follow the left "
"wall or the right one. Simply, the demo follows the left one, so you should "
"do the same in your solution to ease the comparison of your solution and the "
"demo."
msgstr ""
"அச் said earlier, it does not பொருண்மை, பருப்பொருள் whether you decide பெறுநர் "
"follow the இடது wall or the வலது one. Simply, the demo follows the இடது one, "
"so you should do the same in your நீர்மக்கூழ் பெறுநர் ease the comparison of your "
"நீர்மக்கூழ் and the demo."

#. type: Content of: <p>
#: src/lessons/maze/wallfollower/WallFollowerMaze.html:26
msgid ""
"Write a method <code>keepHandOnSideWall()</code> which lets the buggle move "
"one step forward while keeping the paw on the wall of the selected side. You "
"must ensure that the buggle always keep the paw on the wall, but also that "
"it won't crash into a wall. You can check the tip for more info on this, but "
"only do so if you're stuck. Try to do it without the tip first."
msgstr ""
"Write a method <code>keepHandOnSideWall()</code> which lets the buggle move "
"one படி forward while keeping the paw on the wall of the தேர்ந்தெடுக்கப்பட்டது "
"side. You must ensure that the buggle எப்போதும் keep the paw on the wall, but "
"also that it won't crash into a wall. You can சரிபார் the tip க்கு more செய்தி "
"on this, but only do so if you're stuck. Try பெறுநர் do it without the tip "
"first."

#. type: Content of: <p>
#: src/lessons/maze/wallfollower/WallFollowerMaze.html:33
msgid ""
"Then, write the whole algorithm to traverse the maze step by step (using "
"<code>keepHandOnSideWall()</code>) until it finds the biscuit and the "
"exit. Don't forget to pick the baggle up once you've found it."
msgstr ""
"Then, write the whole படிமுறை பெறுநர் traverse the maze படி by படி (using "
"<code>keepHandOnSideWall()</code>) until it finds the biscuit and the exit. "
"Don't forget பெறுநர் pick the baggle மேலே once you've found it."

#. type: Attribute 'alt' of: <div>
#: src/lessons/maze/wallfollower/WallFollowerMaze.html:38
msgid "I'm lost, please give me some extra indications"
msgstr "I'm lost, please give me some extra indications"

#. type: Content of: <div><p>
#: src/lessons/maze/wallfollower/WallFollowerMaze.html:39
msgid ""
"When your buggle has a wall on the left, there is three situations to "
"consider, depending on the surrounding walls. The following table depicts "
"each initial situation, and where you should let your buggle end after one "
"step."
msgstr ""
"When your buggle has a wall on the left, there is three situations பெறுநர் "
"consider, depending on the surrounding walls. The following table depicts "
"each initial situation, and where you should let your buggle end after one "
"step."

#. type: Content of: <div><table><tr><td>
#: src/lessons/maze/wallfollower/WallFollowerMaze.html:46
msgid "Case 1"
msgstr "Case 1"

#. type: Content of: <div><table><tr><td>
#: src/lessons/maze/wallfollower/WallFollowerMaze.html:47
msgid "Case 2"
msgstr "Case 2"

#. type: Content of: <div><table><tr><td>
#: src/lessons/maze/wallfollower/WallFollowerMaze.html:48
msgid "Case 3"
msgstr "Case 3"

#. type: Content of: <div><table><tr><td>
#: src/lessons/maze/wallfollower/WallFollowerMaze.html:50
msgid "Initial situation"
msgstr "Initial situation"

#. type: Content of: <div><table><tr><td>
#: src/lessons/maze/wallfollower/WallFollowerMaze.html:55
msgid "Where is the next step"
msgstr "Where is the அடுத்தது படி"

#. type: Content of: <div><p>
#: src/lessons/maze/wallfollower/WallFollowerMaze.html:61
msgid ""
"If you do a <code>right()</code> in any case at the end of your function, "
"it's possible to write it in 3 lines with a <code>while</code> loop."
msgstr ""
"If you do a <code>right()</code> in any case at the end of your function, "
"it's possible பெறுநர் write it in 3 வரிகள் with a <code>while</code> loop."

#. type: Content of: <h2>
#: src/lessons/maze/pledge/PledgeMaze.html:2
msgid "Pledge algorithm"
msgstr "Pledge படிமுறை"

#. type: Content of: <p>
#: src/lessons/maze/pledge/PledgeMaze.html:4
msgid ""
"Once again, you thought that your algorithm were good enough to escape the "
"maze, and once again, you buggle is now in a maze where your previous "
"algorithm fails. Just give it a try: copy/paste your code and hit the "
"\"Run\" button and see your creation fail. The trap is shaped like an upper "
"case \"G\". The buggle enters the trap and follows the inner border. At some "
"point, it finds the north direction free, run into that direction, and falls "
"again in the trap."
msgstr ""
"Once again, you thought that your படிமுறை were good enough பெறுநர் escape the "
"maze, and once again, you buggle is now in a maze where your previous படிமுறை"
" fails. Just give it a try: copy/paste your குறியீடு and hit the \"Run\" "
"button and see your creation fail. The trap is shaped like an upper case "
"\"G\". The buggle enters the trap and follows the inner border. At some "
"point, it finds the வடக்கு direction free, ஓடு into that direction, and falls "
"again in the trap."

#. type: Content of: <p>
#: src/lessons/maze/pledge/PledgeMaze.html:14
msgid ""
"The Pledge's algorithm (named after Jon Pledge of Exeter) can solve this "
"maze."
msgstr ""
"The Pledge's படிமுறை (named after Jon Pledge of Exeter) can solve this maze."

#. type: Content of: <p>
#: src/lessons/maze/pledge/PledgeMaze.html:17
msgid ""
"This algorithm is a modification of the previous one thought to avoid "
"obstacles. It randomly picks a heading and let the buggle move in that "
"direction. When it encounters an obstacle, a paw (for example the left one)  "
"is kept on the wall following the obstacle while counting the turns. When "
"the buggle is back to its original heading and when the sum of the turns is "
"0, the buggle leaves the obstacle and continues keeping its original "
"heading."
msgstr ""
"This படிமுறை is a modification of the previous one thought பெறுநர் avoid "
"obstacles. It randomly picks a heading and let the buggle move in that "
"direction. When it encounters an obstacle, a paw (for example the இடது one)  "
"is kept on the wall following the obstacle while counting the turns. When "
"the buggle is பின் பெறுநர் its original heading and when the sum of the turns "
"is 0, the buggle leaves the obstacle and continues keeping its original "
"heading."

#. type: Content of: <p>
#: src/lessons/maze/pledge/PledgeMaze.html:25
msgid ""
"Note that the use of \"total turning\" rather than just the \"current "
"direction\" allows the algorithm to avoid G-shapped traps. If one proceeds "
"left into the trap, one gets turned around a full 360 degrees by the "
"walls. As we said before, the naive \"current direction\" algorithm gets "
"into a limit cycle as it leaves the lower rightmost wall heading left and "
"runs into the curved section on the left again."
msgstr ""
"குறிப்பு that the use of \"total turning\" rather than just the "
"\"current direction\" allows the படிமுறை பெறுநர் avoid G-shapped traps. If "
"one proceeds இடது into the trap, one gets turned around a full 360 degrees "
"by the walls. அச் we said before, the naive \"current direction\" படிமுறை "
"gets into a limit cycle அச் it leaves the lower rightmost wall heading இடது "
"and runs into the curved பிரிவு on the இடது again."

#. type: Content of: <p>
#: src/lessons/maze/pledge/PledgeMaze.html:32
msgid ""
"The Pledge's algorithm does not leave the rightmost wall due to the total "
"turning not being zero at that point. It follows the wall all the way "
"around, finally leaving it heading left on the bottom outside"
msgstr ""
"The Pledge's படிமுறை does not leave the rightmost wall due பெறுநர் the total "
"turning not being சுழிமம் at that point. It follows the wall அனைத்தும் the way "
"around, finally leaving it heading இடது on the கீழே outside"

#. type: Content of: <p>
#: src/lessons/maze/pledge/PledgeMaze.html:39
msgid ""
"<a name=\"Objective\"/>You now have to modify your solution to implement the "
"Pledge algorithm to escape this maze."
msgstr ""
"<a name=\"Objective\"/>You now have பெறுநர் modify your நீர்மக்கூழ் பெறுநர் "
"implement the Pledge படிமுறை பெறுநர் escape this maze."

#. type: Content of: <p>
#: src/lessons/maze/pledge/PledgeMaze.html:42
msgid ""
"Change your <code>keepHandOnSideWall()</code> method to count the amount of "
"turns done by the buggle (+1 when it turns left, and -1 when it turns "
"right). This counting may require the addition of an <code>angleSum</code> "
"integer value in your program."
msgstr ""
"Change your <code>keepHandOnSideWall()</code> method பெறுநர் எண்ணுங்கள் the "
"amount of turns முடிந்தது by the buggle (+1 when it turns left, and -1 when "
"it turns right). This counting சி-வைகாசி require the கூட்டல் of an "
"<code>angleSum</code> முழு எண் மதிப்பு in your program."

#. type: Content of: <p>
#: src/lessons/maze/pledge/PledgeMaze.html:47
msgid ""
"Write a boolean method <code>isDirectionFree(dir)</code> indicating if the "
"provided direction is free, ie, if you can move in that direction (Note that "
"the demo uses the NORTH direction for that).  You can retrieve the current "
"direction of the buggle using the method <code>getDirection()</code>. You "
"can change your direction (without moving) using "
"<code>setDirection(dir)</code>. Don't forget to store the previous direction "
"of your buggle (in a dedicated variable) before checking if your favorite "
"direction is free in order to restore your state afterward."
msgstr ""
"Write a boolean method <code>isDirectionFree(dir)</code> indicating if the "
"provided direction is free, ie, if you can move in that direction (Note that "
"the demo uses the வடக்கு direction க்கு that).  You can retrieve the மின்னோட்ட்ம், "
"ஓட்டம் direction of the buggle using the method <code>getDirection()</code>. "
"You can change your direction (without moving) using "
"<code>setDirection(dir)</code>. Don't forget பெறுநர் store the previous "
"direction of your buggle (in a dedicated variable) before checking if your "
"favorite direction is free in order பெறுநர் restore your state afterward."

#. type: Content of: <p>
#: src/lessons/maze/pledge/PledgeMaze.html:56
msgid ""
"You may have to change the rest of your code also, but these changes should "
"remain limited."
msgstr ""
"You சி-வைகாசி have பெறுநர் change the rest of your குறியீடு also, but these "
"changes should remain limited."

#. type: Content of: <p>
#: src/lessons/maze/pledge/PledgeMaze.html:59
msgid ""
"Don't forget that if you have a method modifying a global variable (such as "
"angleSum), you should ensure that it declares this variable as "
"global. Without it, the method creates a new variable of the same name, and "
"the global never gets modified."
msgstr ""
"Don't forget that if you have a method modifying a உலகளாவிய variable (such அச்"
" angleSum), you should ensure that it declares this variable அச் global. "
"Without it, the method creates a புதிய variable of the same name, and the "
"உலகளாவிய ஒருபோதும் gets modified."

#. type: Content of: <pre>
#: src/lessons/maze/pledge/PledgeMaze.html:63
#, no-wrap
msgid ""
"def myMethod():\n"
"  global angleSum\n"
"  ...\n"
"  angleSum = angleSum + 1\n"
msgstr ""
"def myMethod():\n"
"  உலகளாவிய angleSum\n"
"  ...\n"
"  angleSum = angleSum + 1\n"

#. type: Attribute 'alt' of: <div>
#: src/lessons/maze/pledge/PledgeMaze.html:70
msgid "Show an additional tip"
msgstr "காட்டு an additional tip"

#. type: Content of: <div>
#: src/lessons/maze/pledge/PledgeMaze.html:71
msgid ""
"You should set your direction to your favorite one (NORTH is advised). Then, "
"you should write the algorithm main loop. In other words, while your buggle "
"did not find its biscuit, you have to move forward until next obstacle in "
"the favorite direction. Then, put a paw on a wall (using "
"<code>keepHandOnSideWall()</code>) while the sum of turns is not null and "
"the favorite direction is not free. Do that until you find your baggle."
msgstr ""
"You should கணம் your direction பெறுநர் your favorite one (NORTH is advised). "
"Then, you should write the படிமுறை main loop. In மற்றொன்று words, while your "
"buggle did not கண்டுபிடி its biscuit, you have பெறுநர் move forward until "
"அடுத்தது obstacle in the favorite direction. Then, put a paw on a wall (using "
"<code>keepHandOnSideWall()</code>) while the sum of turns is not null and "
"the favorite direction is not free. Do that until you கண்டுபிடி your baggle."

#. type: Content of: <h2>
#: src/lessons/maze/island/IslandMaze.html:2
msgid "Lost between islands"
msgstr "Lost between islands"

#. type: Content of: <p>
#: src/lessons/maze/island/IslandMaze.html:4
msgid ""
"You thought that your algorithm was enough to escape mazes? Well, not every "
"mazes..."
msgstr ""
"You thought that your படிமுறை was enough பெறுநர் escape mazes? Well, not "
"every mazes..."

#. type: Content of: <p>
#: src/lessons/maze/island/IslandMaze.html:8
msgid ""
"The <i>wall follower algorithm</i> we used so far only works if the entry "
"and the exit are placed near to walls connected to the external wall. But if "
"the buggle begins in the middle of the maze, it may exist wall sections "
"disconnected from the external wall."
msgstr ""
"The <i>wall follower algorithm</i> we used so far only works if the நுழைவு "
"and the exit அரே placed near பெறுநர் walls connected பெறுநர் the external "
"wall. But if the buggle begins in the middle of the maze, it சி-வைகாசி exist "
"wall பிரிவுகள் disconnected இருந்து the external wall."

#. type: Content of: <p><p>
#: src/lessons/maze/island/IslandMaze.html:13
msgid ""
"That is why the previous strategy would let the buggle round around for "
"ever. Indeed, the maze you should now escape from contains islands, and the "
"buggle does not start along one of the external walls. Just give it a try if "
"you want: copy your code over, push the run button and see your previous "
"solution failing miserabily."
msgstr ""
"That is why the previous strategy would let the buggle round around க்கு "
"ever. Indeed, the maze you should now escape இருந்து contains islands, and "
"the buggle does not தொடங்கு along one of the external walls. Just give it a "
"try if you want: நகலெடு your குறியீடு over, push the ஓடு button and see your "
"previous நீர்மக்கூழ் failing miserabily."

#. type: Content of: <p><p>
#: src/lessons/maze/island/IslandMaze.html:19
msgid ""
"The method of following a wall is still good and allow to escape very "
"efficiently some sections of the maze, so we do not want to remove it "
"entierely. Instead, we want to stop following the wall under some "
"conditions. Notice that the baggle lays near to the external border of the "
"maze. So, we want to reach the border and then follow that wall. We need for "
"example to search for the north wall before following it to the baggle."
msgstr ""
"The method of following a wall is still good and allow பெறுநர் escape very "
"efficiently some பிரிவுகள் of the maze, so we do not want பெறுநர் அகற்று it "
"entierely. Instead, we want பெறுநர் நிறுத்து following the wall under some "
"conditions. Notice that the baggle lays near பெறுநர் the external border of "
"the maze. So, we want பெறுநர் reach the border and then follow that wall. We "
"need க்கு example பெறுநர் தேடல் க்கு the வடக்கு wall before following it பெறுநர் "
"the baggle."

#. type: Content of: <p><p><p>
#: src/lessons/maze/island/IslandMaze.html:27
msgid ""
"To find the north wall, you simply run to the north as long as it's "
"possible, and when facing an obstacle, you avoid it (using previous method)."
msgstr ""
"பெறுநர் கண்டுபிடி the வடக்கு wall, you simply ஓடு பெறுநர் the வடக்கு அச் long அச் "
"it's possible, and when facing an obstacle, you avoid it (using previous "
"method)."

#. type: Attribute 'alt' of: <p><p><div>
#: src/lessons/maze/island/IslandMaze.html:31
msgid "I'm lost now, please give me some extra indications"
msgstr "I'm lost now, please give me some extra indications"

#. type: Content of: <p><p><div>
#: src/lessons/maze/island/IslandMaze.html:32
msgid ""
"Our new run() method will consist in two modes: our buggle will alternate "
"between the \"north runner mode\" and the \"left follower mode\". You begin "
"in \"north runner mode\", and switch to \"left follower\" when you have a "
"wall at the north (do not forget to make sure you have a wall at your left "
"before switching to \"left follower\" mode). You switch to \"north runner\" "
"as soon as your buggle is facing north and is not in front of a wall during "
"its trip around its left wall. The easiest way to write such a state machine "
"is something like"
msgstr ""
"Our புதிய run() method will consist in two modes: our buggle will alternate "
"between the \"north runner mode\" and the \"left follower mode\". You begin "
"in \"north runner mode\", and ஆளி, நிலைமாறி பெறுநர் \"left follower\" when "
"you have a wall at the வடக்கு (do not forget பெறுநர் make sure you have a wall "
"at your இடது before switching பெறுநர் \"left follower\" mode). You ஆளி, "
"நிலைமாறி பெறுநர் \"north runner\" அச் soon அச் your buggle is facing வடக்கு and "
"is not in front of a wall during its trip around its இடது wall. The easiest "
"way பெறுநர் write such a state machine is something like"

#. type: Content of: <p><p><div><pre>
#: src/lessons/maze/island/IslandMaze.html:40
#, no-wrap
msgid ""
"[!scala]var state=0;\n"
"state match  {\n"
"  case 0 => // North runner\n"
"     ...\n"
"     state = 1;\n"
"  case 1 => // Left follower\n"
"     ...\n"
"     state = 0;\n"
"  case _ => println(\"This case should not happen. Please fix me\")\n"
"}[/!][!java|c]int state=0;\n"
"switch (state) {\n"
"  case 0: // North runner\n"
"     ...\n"
"     state = 1;\n"
"     break;\n"
"  case 1: // Left follower\n"
"     ...\n"
"     state = 0;\n"
"     break;\n"
"}[/!][!python]northRunner = True\n"
"if northRunner:\n"
"     ...\n"
"     northRunner = False\n"
"else: # left follower\n"
"     ...\n"
"     northRunner = True[/!]"
msgstr ""
"[!scala]var state=0;\n"
"state match  {\n"
"  case 0 => // வடக்கு runner\n"
"     ...\n"
"     state = 1;\n"
"  case 1 => // இடது follower\n"
"     ...\n"
"     state = 0;\n"
"  case _ => println(\"This case should not happen. Please fix me\")\n"
"}[/!][!java|c]int state=0;\n"
"switch (state) {\n"
"  case 0: // வடக்கு runner\n"
"     ...\n"
"     state = 1;\n"
"     break;\n"
"  case 1: // இடது follower\n"
"     ...\n"
"     state = 0;\n"
"     break;\n"
"}[/!][!python]northRunner = True\n"
"if northRunner:\n"
"     ...\n"
"     northRunner = False\n"
"else: # இடது follower\n"
"     ...\n"
"     northRunner = True[/!]"

#. type: Content of: <p><p><div>
#: src/lessons/maze/island/IslandMaze.html:67
msgid ""
"Don't forget the default case (matching _), or scala will issue an error "
"since your matching would be incomplete.[/!]"
msgstr ""
"Don't forget the இயல்புநிலை case (matching _), or scala will சிக்கல் an பிழை "
"since your matching would be incomplete.[/!]"

#. type: Content of: <p><p><p>
#: src/lessons/maze/island/IslandMaze.html:70
msgid "Don't forget to let the buggle pick the baggle at the end of your code."
msgstr ""
"Don't forget பெறுநர் let the buggle pick the baggle at the end of your code."

#. type: Content of: <p><p><p>
#: src/lessons/maze/island/IslandMaze.html:73
msgid ""
"You're up. That should be enough for you to figure out how to escape this "
"maze, but if not, you can always request for the tip. But you do not need "
"any more help, do you?"
msgstr ""
"You're up. That should be enough க்கு you பெறுநர் figure out how பெறுநர் escape "
"this maze, but if not, you can எப்போதும் request க்கு the tip. But you do not "
"need any more help, do you?"

#. type: Content of: <h2>
#: src/lessons/maze/shortestpath/ShortestPathMaze.html:2
msgid "Basic Shortest Path algorithm"
msgstr "அடிப்படை Shortest பாதை படிமுறை"

#. type: Content of: <p>
#: src/lessons/maze/shortestpath/ShortestPathMaze.html:4
msgid ""
"To conclude with this introductory lesson to maze solving algorithms, we "
"will investigate another way to find the exit. The buggle in this lesson is "
"a special buggle: he is a jedi. He can feel the Force. This means he is able "
"to feel his environment."
msgstr ""
"பெறுநர் conclude with this introductory பாடம் பெறுநர் maze solving algorithms, "
"we will investigate another way பெறுநர் கண்டுபிடி the exit. The buggle in this "
"பாடம் is a special buggle: he is a jedi. He can feel the Force. This means he "
"is able பெறுநர் feel his environment."

#. type: Content of: <p>
#: src/lessons/maze/shortestpath/ShortestPathMaze.html:8
msgid ""
"Without even leaving his position, he can retrieve information about the "
"world he is leaving in, with the following functions:"
msgstr ""
"Without இரட்டை leaving his position, he can retrieve செய்தி பற்றி the world he "
"is leaving in, with the following functions:"

#. type: Content of: <ul><li>
#: src/lessons/maze/shortestpath/ShortestPathMaze.html:10
msgid "<code>getWorldWidth()</code> gives the width of its world."
msgstr "<code>getWorldWidth()</code> gives the width of its world."

#. type: Content of: <ul><li>
#: src/lessons/maze/shortestpath/ShortestPathMaze.html:11
msgid "<code>getWorldHeight()</code> gives the height of its world."
msgstr "<code>getWorldHeight()</code> gives the height of its world."

#. type: Content of: <ul><li>
#: src/lessons/maze/shortestpath/ShortestPathMaze.html:12
msgid ""
"<code>hasTopWall(x,y)</code> tells whether the cell (x,y) of this world has "
"a wall on top."
msgstr ""
"<code>hasTopWall(x,y)</code> tells whether the கலன் (x,y) of this world has a "
"wall on top."

#. type: Content of: <ul><li>
#: src/lessons/maze/shortestpath/ShortestPathMaze.html:13
msgid ""
"<code>hasLeftWall(x,y)</code> tells whether the cell (x,y) of this world has "
"a wall on the left."
msgstr ""
"<code>hasLeftWall(x,y)</code> tells whether the கலன் (x,y) of this world has "
"a wall on the left."

#. type: Content of: <ul><li>
#: src/lessons/maze/shortestpath/ShortestPathMaze.html:14
msgid ""
"<code>hasBaggle(x,y)</code> tells whether the cell (x,y) of this world has a "
"baggle."
msgstr ""
"<code>hasBaggle(x,y)</code> tells whether the கலன் (x,y) of this world has a "
"baggle."

#. type: Content of: <ul><li>
#: src/lessons/maze/shortestpath/ShortestPathMaze.html:15
msgid ""
"<code>setIndication(x,y,i)</code> adds the integer indication <code>i</code> "
"to the cell (x,y)."
msgstr ""
"<code>setIndication(x,y,i)</code> adds the முழு எண் indication <code>i</code> "
"பெறுநர் the கலன் (x,y)."

#. type: Content of: <ul><li>
#: src/lessons/maze/shortestpath/ShortestPathMaze.html:16
msgid ""
"<code>getIndication(x,y,i)</code> retrieves the integer indication of the "
"cell (x,y) (or 9999 if there is no indication)."
msgstr ""
"<code>getIndication(x,y,i)</code> retrieves the முழு எண் indication of the கலன்"
" (x,y) (or 9999 if there is இல்லை indication)."

#. type: Content of: <p>
#: src/lessons/maze/shortestpath/ShortestPathMaze.html:19
msgid ""
"It has to be noted that it is not possible to build a wall on the bottom "
"edge or on the right edge of a cell.  Therefore when such wall exists, it "
"means it was built on a sibling cells -- as a top (respectively left) wall "
"on the cell that is located below (respectively at the right of) the current "
"cell."
msgstr ""
"It has பெறுநர் be noted that it is not possible பெறுநர் உருவாக்கு a wall on the "
"கீழே edge or on the வலது edge of a cell.  Therefore when such wall exists, it "
"means it was built on a sibling cells -- அச் a மேலே (respectively left) wall "
"on the கலன் that is located below (respectively at the வலது of) the மின்னோட்ட்ம், "
"ஓட்டம் cell."

#. type: Content of: <p>
#: src/lessons/maze/shortestpath/ShortestPathMaze.html:25
msgid ""
"Your buggle should first write the distance to the exit on each cell (or at "
"least the useful ones)."
msgstr ""
"Your buggle should first write the distance பெறுநர் the exit on each கலன் (or "
"at least the useful ones)."

#. type: Content of: <p>
#: src/lessons/maze/shortestpath/ShortestPathMaze.html:26
msgid ""
"For that, find the exit and write 0 there.  Then, write 1 on every "
"neighboring cells that is not separated from the exit with a wall.  And then "
"mark every cells from which you can reach the exit in 2 steps, and iterate "
"for all cells until all cells are marked."
msgstr ""
"க்கு that, கண்டுபிடி the exit and write 0 there.  Then, write 1 on every "
"neighboring cells that is not separated இருந்து the exit with a wall.  And "
"then mark every cells இருந்து which you can reach the exit in 2 steps, and "
"iterate க்கு அனைத்தும் cells until அனைத்தும் cells அரே marked."

#. type: Content of: <p>
#: src/lessons/maze/shortestpath/ShortestPathMaze.html:31
msgid ""
"Once the cells are marked, get your jedi buggle to follow the shortest "
"path.  Basically the buggle has only to walk on each case with the lesser "
"distance from the exit. You can use the method "
"<code>setDirection(direction)</code> to make your buggle look at the "
"specific direction such as "
"<code>[!scala|java|python]Direction.[/!]NORTH</code> or "
"<code>[!scala|java|python]Direction.[/!]EAST</code>."
msgstr ""
"Once the cells அரே marked, get your jedi buggle பெறுநர் follow the shortest "
"path.  Basically the buggle has only பெறுநர் walk on each case with the "
"lesser distance இருந்து the exit. You can use the method "
"<code>setDirection(direction)</code> பெறுநர் make your buggle look at the "
"specific direction such அச் <code>[!scala|java|python]Direction.[/!]NORTH</"
"code> or <code>[!scala|java|python]Direction.[/!]EAST</code>."

#. type: Attribute 'alt' of: <div>
#: src/lessons/maze/shortestpath/ShortestPathMaze.html:36
msgid "I'm lost now. Please give me some extra indications."
msgstr "I'm lost now. Please give me some extra indications."

#. type: Content of: <div>
#: src/lessons/maze/shortestpath/ShortestPathMaze.html:37
msgid "Use the Force, Luke!"
msgstr "Use the Force, Luke!"

#. type: Content of: <h2>
#: src/lessons/maze/wallfindfollow/WallFindFollowMaze.html:2
msgid "Finding the walls to follow"
msgstr "Finding the walls பெறுநர் follow"

#. type: Content of: <p>
#: src/lessons/maze/wallfindfollow/WallFindFollowMaze.html:4
msgid ""
"This is exactly the same maze than before, but the buggle does not start at "
"the same location. In particular, it does not have any wall to its left at "
"the beginning."
msgstr ""
"This is exactly the same maze than before, but the buggle does not தொடங்கு at "
"the same location. In particular, it does not have any wall பெறுநர் its இடது "
"at the beginning."

#. type: Content of: <p>
#: src/lessons/maze/wallfindfollow/WallFindFollowMaze.html:8
msgid ""
"As a result, the method you wrote for the previous exercise probably don't "
"work for this one. If you use it here with no modification, your buggle "
"probably start looping over the four free cells around its start position "
"(if that's not the case, well, you didn't really stick to the mission on "
"previous exercise. Feel lucky and proceed to the next :)"
msgstr ""
"அச் a result, the method you wrote க்கு the previous exercise probably don't "
"வேலை க்கு this one. If you use it here with இல்லை modification, your buggle "
"probably தொடங்கு looping வீச்சலகு the நான்கு, நாலடி, நான்கடி free cells around "
"its தொடங்கு position (if that's not the case, well, you didn't really stick "
"பெறுநர் the mission on previous exercise. Feel lucky and proceed பெறுநர் the "
"அடுத்தது :)"

#. type: Content of: <p>
#: src/lessons/maze/wallfindfollow/WallFindFollowMaze.html:15
msgid ""
"This is because your <code>keepHandOnSideWall()</code> method has an "
"implicit <b>pre-condition</b>: it works well if and only if the buggle has a "
"wall to its left when you call it. Such pre-condition are very heavily used "
"when programming. Specifying them explicitly helps understanding the code "
"written by other, and they even allow sometimes to prove that the code works "
"correctly."
msgstr ""
"This is because your <code>keepHandOnSideWall()</code> method has an "
"implicit <b>pre-condition</b>: it works well if and only if the buggle has a "
"wall பெறுநர் its இடது when you call it. Such pre-condition அரே very heavily "
"used when programming. Specifying them explicitly helps understanding the "
"குறியீடு written by other, and they இரட்டை allow sometimes பெறுநர் prove that "
"the குறியீடு works correctly."

#. type: Content of: <p>
#: src/lessons/maze/wallfindfollow/WallFindFollowMaze.html:25
msgid ""
"Fixing the problem should be very easy. Simply make sure that the "
"pre-condition of <code>keepHandOnSideWall()</code> is verified before "
"calling it. For that, update your code to first look for a wall on its left "
"before the big <code>while</code> loop."
msgstr ""
"Fixing the problem should be very easy. Simply make sure that the pre-"
"condition of <code>keepHandOnSideWall()</code> is verified before calling "
"it. க்கு that, புதுப்பிப்பு your குறியீடு பெறுநர் first look க்கு a wall on its "
"இடது before the big <code>while</code> loop."

#. type: Content of: <h3>
#: src/lessons/lightbot/universe/LightBotWorld.html:2
#: src/lessons/lightbot/Main.html:2 src/lessons/lightbot/short_desc.html:2
msgid "LightBot"
msgstr "LightBot"

#. type: Content of: outside any tag (error?)
#: src/lessons/lightbot/universe/LightBotWorld.html:4
msgid ""
"This universe introduces a little programming puzzle which can somehow be "
"used to introduce programmation to non-reading kids since it is programmed "
"graphically.  The goal of each board is to light up all the lights. Your "
"robot understands the following orders:"
msgstr ""
"This அண்டம் introduces a little programming puzzle which can somehow be used "
"பெறுநர் introduce programmation பெறுநர் non-reading kids since it is "
"programmed graphically.  The goal of each board is பெறுநர் light மேலே அனைத்தும் "
"the lights. Your robot understands the following orders:"

#. type: Content of: <table><tr><td>
#: src/lessons/lightbot/universe/LightBotWorld.html:8
msgid "<b>Order</b>"
msgstr "<b>Order</b>"

#. type: Content of: <table><tr><td>
#: src/lessons/lightbot/universe/LightBotWorld.html:8
msgid "<b>Meaning</b>"
msgstr "<b>Meaning</b>"

#. type: Content of: <table><tr><td>
#: src/lessons/lightbot/universe/LightBotWorld.html:9
msgid "<b>Move forward</b>"
msgstr "<b>Move forward</b>"

#. type: Content of: <table><tr><td>
#: src/lessons/lightbot/universe/LightBotWorld.html:9
msgid "Cannot be done if the destination cell is of another height than source cell"
msgstr ""
"Cannot be முடிந்தது if the destination கலன் is of another height than மூலம் கலன்"

#. type: Content of: <table><tr><td>
#: src/lessons/lightbot/universe/LightBotWorld.html:10
msgid "<b>Jump forward</b>"
msgstr "<b>Jump forward</b>"

#. type: Content of: <table><tr><td>
#: src/lessons/lightbot/universe/LightBotWorld.html:10
msgid ""
"Can only be done if the destination cell is one step higher than source "
"cell, or if destination is lower than source. Cannot be used for plain "
"moves."
msgstr ""
"Can only be முடிந்தது if the destination கலன் is one படி higher than மூலம் "
"cell, or if destination is lower than source. Cannot be used க்கு plain moves."

#. type: Content of: <table><tr><td>
#: src/lessons/lightbot/universe/LightBotWorld.html:11
msgid "<b>Turn left</b>."
msgstr "<b>Turn left</b>."

#. type: Content of: <table><tr><td>
#: src/lessons/lightbot/universe/LightBotWorld.html:12
msgid "<b>Turn right</b>."
msgstr "<b>Turn right</b>."

#. type: Content of: <table><tr><td>
#: src/lessons/lightbot/universe/LightBotWorld.html:13
msgid "<b>Switch the light</b>."
msgstr "<b>Switch the light</b>."

#. type: Content of: <table><tr><td>
#: src/lessons/lightbot/universe/LightBotWorld.html:13
msgid ""
"Turn it on if it was off, and off if it was on. No effect if the cell does "
"not contain any light."
msgstr ""
"Turn it on if it was off, and அணை if it was on. இல்லை விளைவு if the கலன் does "
"not contain any light."

#. type: Content of: <table><tr><td>
#: src/lessons/lightbot/universe/LightBotWorld.html:14
msgid "<b>Call function 1</b>."
msgstr "<b>Call சார்பு 1</b>."

#. type: Content of: <table><tr><td>
#: src/lessons/lightbot/universe/LightBotWorld.html:15
msgid "<b>Call function 2</b>."
msgstr "<b>Call சார்பு 2</b>."

#. type: Content of: <p>
#: src/lessons/lightbot/universe/LightBotWorld.html:18
msgid ""
"Please note that this world is not completely suited to small kids since the "
"main difficulty comes from the fact that your are highly limited in the "
"amount of instructions you can give to your robot. Advanced levels thus "
"require to write sound functions, and are often above the capacities of "
"small kids."
msgstr ""
"Please குறிப்பு that this world is not completely suited பெறுநர் small kids "
"since the main difficulty comes இருந்து the fact that your அரே highly limited "
"in the amount of instructions you can give பெறுநர் your robot. மேம்பட்ட levels "
"thus require பெறுநர் write sound functions, and அரே often above the "
"capacities of small kids."

#. type: Content of: <p>
#: src/lessons/lightbot/universe/LightBotWorld.html:20
msgid ""
"This game is heavily inspirated from a flash game of the same name, which "
"can for example be played on kongregate.com. It was written by Danny "
"Yaroslavski (Coolio-Niato), the original idea being of Matt Chase."
msgstr ""
"This game is heavily inspirated இருந்து a flash game of the same name, which "
"can க்கு example be played on kongregate.com. It was written by Danny "
"Yaroslavski (Coolio-Niato), the original idea being of Matt Chase."

#. type: Content of: outside any tag (error?)
#: src/lessons/lightbot/Main.html:3
msgid ""
"This lesson introduces a little programming puzzle inspired from a flash "
"game."
msgstr ""
"This பாடம் introduces a little programming puzzle inspired இருந்து a flash "
"game."

#. type: Content of: <p>
#: src/lessons/lightbot/Main.html:5
msgid "See the <i>About this world</i> dialog for more details."
msgstr "See the <i>About this world</i> dialog க்கு more details."

#. type: Content of: <p>
#: src/lessons/lightbot/short_desc.html:4
msgid ""
"This lesson constitutes a little brain teaser for programmers. You have to "
"instruct your robot to turn off all lights. The trick is that you program "
"your robot graphically, and that you are limited in the amount of "
"instructions."
msgstr ""
"This பாடம் constitutes a little brain teaser க்கு programmers. You have பெறுநர் "
"instruct your robot பெறுநர் turn அணை அனைத்தும் lights. The trick is that you "
"திட்டம் your robot graphically, and that you அரே limited in the amount of "
"instructions."

#. type: Content of: <p>
#: src/lessons/lightbot/short_desc.html:9
msgid "No previous experience is expected to take this lesson."
msgstr "இல்லை previous experience is expected பெறுநர் take this lesson."

#. type: Content of: <h1>
#: src/lessons/lightbot/Board01TwoSteps.html:2
msgid "Welcome"
msgstr "Welcome"

#. type: Content of: <p>
#: src/lessons/lightbot/Board01TwoSteps.html:4
msgid ""
"Welcome to the lightbot world. This is merely a programmer puzzle rather "
"than a real lesson (although some use it to teach programming).  The robot "
"is not programmed in Java, but rather graphically. You can see the existing "
"orders in the documentation using the <i>About this world</i> menu."
msgstr ""
"Welcome பெறுநர் the lightbot world. This is merely a நிரலி (device), நிரலர் "
"(person) puzzle rather than a real பாடம் (although some use it பெறுநர் teach "
"programming).  The robot is not programmed in Java, but rather graphically. "
"You can see the existing orders in the ஆவணப்படுத்துதல் using the <i>About this "
"world</i> menu."

#. type: Content of: <p><</p><p>
#: src/lessons/lightbot/Board01TwoSteps.html:7
msgid ""
"The goal of each board is simply to switch on every lights of the board "
"using your little robot."
msgstr ""
"The goal of each board is simply பெறுநர் ஆளி, நிலைமாறி on every lights of the "
"board using your little robot."

#. type: Content of: <p><</p><p>
#: src/lessons/lightbot/Board01TwoSteps.html:9
msgid ""
"This is a introduction exercise, which should be solvable by only moving "
"forward and switching the light, using respectively"
msgstr ""
"This is a அறிமுகம் exercise, which should be solvable by only moving forward "
"and switching the light, using respectively"

#. type: Content of: <p>
#: src/lessons/lightbot/Board01TwoSteps.html:11
#: src/lessons/lightbot/Board02Turn.html:5
#: src/lessons/lightbot/Board06Func.html:4
msgid "and"
msgstr "and"

#. type: Content of: <p><</p><p>
#: src/lessons/lightbot/Board01TwoSteps.html:11
msgid "."
msgstr "."

#. type: Content of: <h1>
#: src/lessons/lightbot/Board02Turn.html:2
msgid "Turn around"
msgstr "Turn around"

#. type: Content of: <p>
#: src/lessons/lightbot/Board02Turn.html:4
msgid "Now, you probably need to turn in addition (using"
msgstr "Now, you probably need பெறுநர் turn in கூட்டல் (using"

#. type: Content of: <p>
#: src/lessons/lightbot/Board02Turn.html:5
msgid ")."
msgstr ")."

#. type: Content of: <h1>
#: src/lessons/lightbot/Board03Jump.html:2
msgid "Jump"
msgstr "தாவு"

#. type: Content of: <p>
#: src/lessons/lightbot/Board03Jump.html:4
msgid "You can also jump using"
msgstr "You can also தாவு using"

#. type: Content of: <p>
#: src/lessons/lightbot/Board03Jump.html:4
msgid ""
"to pass obstacles. You can either jump one level up or any amount of levels "
"down, but you cannot jump to go on a cell of the same height."
msgstr ""
"பெறுநர் கணவாய் obstacles. You can either தாவு one நிலை மேலே or any amount of "
"levels down, but you cannot தாவு பெறுநர் go on a கலன் of the same height."

#. type: Content of: <h1>
#: src/lessons/lightbot/Board04Stairs.html:2
msgid "Stairs"
msgstr "Stairs"

#. type: Content of: <p>
#: src/lessons/lightbot/Board04Stairs.html:4
msgid "Can you pass these stairs?"
msgstr "Can you கணவாய் these stairs?"

#. type: Content of: <h1>
#: src/lessons/lightbot/Board05Higher.html:2
msgid "Higher"
msgstr "Higher"

#. type: Content of: <p>
#: src/lessons/lightbot/Board05Higher.html:4
msgid "Let's go higher"
msgstr "Let's go higher"

#. type: Content of: <p>
#: src/lessons/lightbot/Board06Func.html:4
msgid "You can use"
msgstr "You can use"

#. type: Content of: <p>
#: src/lessons/lightbot/Board06Func.html:4
msgid ""
"to call respectively the first and second functions. Define their code in "
"their own tab."
msgstr ""
"பெறுநர் call respectively the first and second functions. Define their குறியீடு"
" in their own tab."

#. type: Content of: <p><p>
#: src/lessons/lightbot/Board06Func.html:6
msgid "This is great if you get out of space in your main function"
msgstr "This is great if you get out of இடைவெளி in your main சார்பு"

#. type: Content of: <h1>
#: src/lessons/lightbot/Board07Repeat.html:2
msgid "Repetitive tasks"
msgstr "Repetitive பணிகள்"

#. type: Content of: <p>
#: src/lessons/lightbot/Board07Repeat.html:4
msgid "Functions are also of great use for repetitive tasks"
msgstr "செயல்பாடுகள் அரே also of great use க்கு repetitive பணிகள்"

#. type: Content of: <h1>
#: src/lessons/lightbot/Board08Rec.html:2
msgid "Calling functions from functions"
msgstr "Calling செயல்பாடுகள் இருந்து செயல்பாடுகள்"

#. type: Content of: <p>
#: src/lessons/lightbot/Board08Rec.html:4
msgid "It is perfectly okay to call a function from within a function!"
msgstr "It is perfectly okay பெறுநர் call a சார்பு இருந்து within a function!"

#. type: Content of: <h1>
#: src/lessons/lightbot/Board09Castle.html:2
msgid "Castle"
msgstr "Castle"

#. type: Content of: <p>
#: src/lessons/lightbot/Board09Castle.html:4
msgid "You're getting good at this..."
msgstr "You're getting good at this..."

#. type: Content of: <h1>
#: src/lessons/lightbot/Board10Wall.html:2
msgid "Wall"
msgstr "Wall"

#. type: Content of: <p>
#: src/lessons/lightbot/Board10Wall.html:4
msgid "Ready to climb the wall?"
msgstr "Ready பெறுநர் climb the wall?"

#. type: Content of: <h1>
#: src/lessons/lightbot/Board11Sea.html:2
msgid "Sea"
msgstr "Sea"

#. type: Content of: <p>
#: src/lessons/lightbot/Board11Sea.html:4
msgid "You now have to surf these waves of lamps."
msgstr "You now have பெறுநர் surf these waves of lamps."

#. type: Content of: <h1>
#: src/lessons/lightbot/Board12Escher.html:2
msgid "Escher Castle"
msgstr "Escher Castle"

#. type: Content of: <p>
#: src/lessons/lightbot/Board12Escher.html:4
msgid "This one aint easy."
msgstr "This one aint easy."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool1/Close10.html:2
msgid "Close to 10"
msgstr "மூடு பெறுநர் 10"

#. type: Content of: <p>
#: src/lessons/welcome/bat/bool1/Close10.html:3
msgid ""
"Given 2 int values, return whichever value is nearest to the value 10, or "
"return 0 in the event of a tie.  [!java|scala]Note that Math.abs(n) returns "
"the absolute value of a number.[/!] [!python]Note that math.fabs(n) returns "
"the absolute value of a number.  This function can only be used if you "
"imported the math module.[/!]"
msgstr ""
"Given 2 int values, return whichever மதிப்பு is nearest பெறுநர் the மதிப்பு 10, "
"or return 0 in the event of a tie.  [!java|scala]Note that Math.abs(n) "
"returns the தனி, சார்பிலா மதிப்பு of a number.[/!] [!python]Note that "
"math.fabs(n) returns the தனி, சார்பிலா மதிப்பு of a number.  This சார்பு can "
"only be used if you imported the math module.[/!]"

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool1/CountTeen.html:2
msgid "Count Teen"
msgstr "எண்ணுங்கள் Teen"

#. type: Content of: <p>
#: src/lessons/welcome/bat/bool1/CountTeen.html:3
msgid ""
"We'll say that a number is \"teen\" if it is in the range 13..19 "
"inclusive. Given 4 int values, return the amount of teen ones."
msgstr ""
"We'll say that a எண் is \"teen\" if it is in the வீச்சு 13..19 inclusive. Given "
"4 int values, return the amount of teen ones."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool1/Diff21.html:2
msgid "Diff 21"
msgstr "Diff 21"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool1/Diff21.html:3
msgid ""
"Given an int n, return the absolute difference between n and 21, except "
"return double the absolute difference if n is over 21."
msgstr ""
"Given an int n, return the தனி, சார்பிலா வேறுபாடு between n and 21, except "
"return இரட்டை the தனி, சார்பிலா வேறுபாடு if n is வீச்சலகு 21."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool1/HasTeen.html:2
msgid "Has Teen"
msgstr "Has Teen"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool1/HasTeen.html:3
msgid ""
"We'll say that a number is \"teen\" if it is in the range 13..19 "
"inclusive. Given 3 int values, return true if 1 or more of them are teen."
msgstr ""
"We'll say that a எண் is \"teen\" if it is in the வீச்சு 13..19 inclusive. Given "
"3 int values, return true if 1 or more of them அரே teen."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool1/IcyHot.html:2
msgid "Icy Hot"
msgstr "Icy Hot"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool1/IcyHot.html:3
msgid ""
"Given two temperatures, return true if one is less than 0 and the other is "
"greater than 100."
msgstr ""
"Given two temperatures, return true if one is less than 0 and the மற்றொன்று is "
"greater than 100."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool1/In1020.html:2
msgid "In [10;20]"
msgstr "In [10;20]"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool1/In1020.html:3
msgid ""
"Given 2 int values, return true if either of them is in the range 10..20 "
"inclusive."
msgstr ""
"Given 2 int values, return true if either of them is in the வீச்சு 10..20 "
"inclusive."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool1/In3050.html:2
msgid "In [30;50]"
msgstr "In [30;50]"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool1/In3050.html:3
msgid ""
"Given 2 int values, return true if they are both in the range 30..40 "
"inclusive, or they are both in the range 40..50 inclusive."
msgstr ""
"Given 2 int values, return true if they அரே both in the வீச்சு 30..40 "
"inclusive, or they அரே both in the வீச்சு 40..50 inclusive."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool1/LastDigit.html:2
msgid "LastDigit"
msgstr "LastDigit"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool1/LastDigit.html:3
msgid ""
"Given two non-negative int values, return true if they have the same last "
"digit, such as with 27 and 57. Note that the % \"mod\" operator computes "
"remainders, so 17 % 10 is 7."
msgstr ""
"Given two non-negative int values, return true if they have the same last "
"digit, such அச் with 27 and 57. குறிப்பு that the % \"mod\" operator computes "
"remainders, so 17 % 10 is 7."

#. type: Content of: <p>
#: src/lessons/welcome/bat/bool1/LastDigit.html:10
#: src/lessons/welcome/bat/bool2/ShareDigit.html:10
msgid ""
"This exercise was converted to PLM from the excellent exercising site "
"http://javabat.com/"
msgstr ""
"This exercise was converted பெறுநர் PLM இருந்து the excellent exercising site "
"http://javabat.com/"

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool1/LoneTeen.html:2
msgid "Lone Teen"
msgstr "Lone Teen"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool1/LoneTeen.html:3
msgid ""
"We'll say that a number is \"teen\" if it is in the range 13..19 "
"inclusive. Given 2 int values, return true if one or the other is teen, but "
"not both."
msgstr ""
"We'll say that a எண் is \"teen\" if it is in the வீச்சு 13..19 inclusive. Given "
"2 int values, return true if one or the மற்றொன்று is teen, but not both."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool1/Main.html:2
msgid "Boolean fun"
msgstr "Boolean fun"

#. type: Content of: <p>
#: src/lessons/welcome/bat/bool1/Main.html:4
msgid ""
"Boolean operations are one of the very basic task in programming.  As long "
"as you cannot write a not so simple boolean test under the minute, you "
"probably will have a very bad time writing a real program."
msgstr ""
"Boolean operations அரே one of the very அடிப்படை task in programming.  அச் long "
"அச் you cannot write a not so simple boolean தேர்வு under the minute, you "
"probably will have a very bad time writing a real program."

#. type: Content of: <p>
#: src/lessons/welcome/bat/bool1/Main.html:9
msgid ""
"That is why this lesson provides you a bunch of such exercises, so that you "
"can get trained in this."
msgstr ""
"That is why this பாடம் provides you a bunch of such exercises, so that you "
"can get trained in this."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool1/Makes10.html:2
msgid "Makes 10"
msgstr "Makes 10"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool1/Makes10.html:3
msgid ""
"Given 2 ints, a and b, return true if one of them is 10 or if their sum is "
"10."
msgstr ""
"Given 2 ints, a and b, return true if one of them is 10 or if their sum is "
"10."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool1/Max1020.html:2
msgid "Max1020"
msgstr "Max1020"

#. type: Content of: <p>
#: src/lessons/welcome/bat/bool1/Max1020.html:3
msgid ""
"Given 2 positive int values, return the larger value that is in the range "
"10..20 inclusive, or return 0 if neither is in that range."
msgstr ""
"Given 2 நேரமம் int values, return the larger மதிப்பு that is in the வீச்சு "
"10..20 inclusive, or return 0 if neither is in that range."

#. type: Content of: <p>
#: src/lessons/welcome/bat/bool1/Max1020.html:6
msgid ""
"Note that Math.max(Int,Int):Int and Math.min(Int,Int):Int return the maximum "
"and minimum of two integers"
msgstr ""
"குறிப்பு that Math.max(Int,Int):Int and Math.min(Int,Int):Int return the "
"பெருமம் and சிறுமம் of two integers"

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool1/MonkeyTrouble.html:2
msgid "MonkeyTrouble"
msgstr "MonkeyTrouble"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool1/MonkeyTrouble.html:4
msgid ""
"We have two monkeys, a and b, and the parameters aSmile and bSmile indicate "
"if each is smiling.  We are in trouble if they are both smiling or if "
"neither of them is smiling.  Return true if we are in trouble."
msgstr ""
"We have two monkeys, a and b, and the parameters aSmile and bSmile indicate "
"if each is smiling.  We அரே in trouble if they அரே both smiling or if "
"neither of them is smiling.  Return true if we அரே in trouble."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool1/NearHundred.html:2
msgid "Near Hundred"
msgstr "Near Hundred"

#. type: Content of: <p>
#: src/lessons/welcome/bat/bool1/NearHundred.html:3
msgid ""
"Given an int n, return true if it is within 10 of 100 or 200.  "
"[!java|scala]Note that Math.abs(n) returns the absolute value of a "
"number.[/!] [!python]Note that math.fabs(n) returns the absolute value of a "
"number.  This function can only be used if you imported the math module.[/!]"
msgstr ""
"Given an int n, return true if it is within 10 of 100 or 200.  [!java|scala]"
"Note that Math.abs(n) returns the தனி, சார்பிலா மதிப்பு of a number.[/!] "
"[!python]Note that math.fabs(n) returns the தனி, சார்பிலா மதிப்பு of a "
"number.  This சார்பு can only be used if you imported the math module.[/!]"

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool1/ParotTrouble.html:2
msgid "Parot Trouble"
msgstr "Parot Trouble"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool1/ParotTrouble.html:4
msgid ""
"We have a loud talking parrot. The \"hour\" parameter is the current hour "
"time in the range 0..23. We are in trouble if the parrot is talking and the "
"hour is before 7 or after 20. Return true if we are in trouble."
msgstr ""
"We have a loud talking parrot. The \"hour\" கூறளவு is the மின்னோட்ட்ம், ஓட்டம் "
"hour time in the வீச்சு 0..23. We அரே in trouble if the parrot is talking and "
"the hour is before 7 or after 20. Return true if we அரே in trouble."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool1/PosNeg.html:2
msgid "Positive Negative"
msgstr "நேரமம் எதிர்மம்"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool1/PosNeg.html:3
msgid ""
"Given 2 int values, return true if one is negative and one is "
"positive. Unless negative is true, then they both must be negative."
msgstr ""
"Given 2 int values, return true if one is எதிர்மம் and one is positive. Unless "
"எதிர்மம் is true, then they both must be negative."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool1/SleepIn.html:2
msgid "SleepDay"
msgstr "SleepDay"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool1/SleepIn.html:4
msgid ""
"The parameter weekday is true if it is a weekday, and the parameter vacation "
"is true if we are on vacation. We sleep in if it is not a weekday or we're "
"on vacation. Return true if we sleep in."
msgstr ""
"The கூறளவு weekday is true if it is a weekday, and the கூறளவு vacation is "
"true if we அரே on vacation. We sleep in if it is not a weekday or we're on "
"vacation. Return true if we sleep in."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool1/SumDouble.html:2
msgid "Sum Double"
msgstr "Sum இரட்டை"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool1/SumDouble.html:3
msgid ""
"Given two int values, return their sum. Unless the two values are the same, "
"then return double their sum."
msgstr ""
"Given two int values, return their sum. Unless the two values அரே the same, "
"then return இரட்டை their sum."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool2/AlarmClock.html:2
msgid "AlarmClock"
msgstr "AlarmClock"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool2/AlarmClock.html:3
msgid ""
"Given a day of the week encoded as 0=Sun, 1=Mon, 2=Tue, ...6=Sat, and a "
"boolean indicating if we are on vacation, return a string of the form "
"\"7:00\" indicating when the alarm clock should ring. Weekdays, the alarm "
"should be \"7:00\" and on the weekend it should be \"10:00\". Unless we are "
"on vacation -- then on weekdays it should be \"10:00\" and weekends it "
"should be \"off\"."
msgstr ""
"Given a நாள் of the week encoded அச் 0=Sun, 1=Mon, 2=Tue, ...6=Sat, and a "
"boolean indicating if we அரே on vacation, return a சரம் of the form \"7:00\" "
"indicating when the alarm கடிகை should ring. Weekdays, the alarm should be "
"\"7:00\" and on the weekend it should be \"10:00\". Unless we அரே on "
"vacation -- then on weekdays it should be \"10:00\" and weekends it should "
"be \"off\"."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool2/AnswerCell.html:2
msgid "AnswerCell"
msgstr "AnswerCell"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool2/AnswerCell.html:3
msgid ""
"Your cell phone rings. Return true if you should answer it. Normally you "
"answer, except in the morning you only answer if it is your mom calling. In "
"all cases, if you are asleep, you do not answer."
msgstr ""
"Your கலன் phone rings. Return true if you should பதில் it. Normally you "
"answer, except in the morning you only பதில் if it is your mom calling. In "
"அனைத்தும் cases, if you அரே asleep, you do not answer."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool2/BlueTicket.html:2
msgid "BlueTicket"
msgstr "BlueTicket"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool2/BlueTicket.html:3
msgid ""
"You have a blue lottery ticket, with ints a, b, and c on it. This makes "
"three pairs, which we'll call ab, bc, and ac. Consider the sum of the "
"numbers in each pair. If any pair sums to exactly 10, the result is 10.  "
"Otherwise if the ab sum is exactly 10 more than either bc or ac sums, the "
"result is 5. Otherwise the result is 0."
msgstr ""
"You have a நீலம் lottery ticket, with ints a, b, and c on it. This makes three "
"pairs, which we'll call ab, bc, and ac. Consider the sum of the numbers in "
"each pair. If any பேரிக்காய் sums பெறுநர் exactly 10, the result is 10.  "
"Otherwise if the ab sum is exactly 10 more than either bc or ac sums, the "
"result is 5. Otherwise the result is 0."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool2/CaughtSpeeding.html:2
msgid "CaughtSpeeding"
msgstr "CaughtSpeeding"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool2/CaughtSpeeding.html:3
msgid ""
"You are driving a little too fast, and a police officer stops you. Write "
"code to compute the result, encoded as an int value: 0=no ticket, 1=small "
"ticket, 2=big ticket. If speed is 60 or less, the result is 0. If speed is "
"between 61 and 80 inclusive, the result is 1. If speed is 81 or more, the "
"result is 2. Unless it is your birthday -- on that day, your speed can be 5 "
"higher in all cases."
msgstr ""
"You அரே driving a little too fast, and a police officer stops you. Write "
"குறியீடு பெறுநர் compute the result, encoded அச் an int value: 0=no ticket, "
"1=small ticket, 2=big ticket. If விரைவு is 60 or less, the result is 0. If "
"விரைவு is between 61 and 80 inclusive, the result is 1. If விரைவு is 81 or "
"more, the result is 2. Unless it is your birthday -- on that day, your விரைவு"
" can be 5 higher in அனைத்தும் cases."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool2/CigarParty.html:2
msgid "CigarParty"
msgstr "CigarParty"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool2/CigarParty.html:3
msgid ""
"When squirrels get together for a party, they like to have cigars. A "
"squirrel party is successful when the number of cigars is between 40 and 60, "
"inclusive. Unless it is the weekend, in which case there is no upper bound "
"on the number of cigars. Return true if the party was successful."
msgstr ""
"When squirrels get together க்கு a party, they like பெறுநர் have cigars. A அணில்"
" party is successful when the எண் of cigars is between 40 and 60, inclusive. "
"Unless it is the weekend, in which case there is இல்லை upper bound on the எண் "
"of cigars. Return true if the party was successful."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool2/DateFashion.html:2
msgid "DateFashion"
msgstr "DateFashion"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool2/DateFashion.html:3
msgid ""
"You and your date are trying to get a table at a restaurant. The parameter "
"\"you\" is the stylishness of your clothes, in the range 0..10, and \"date\" "
"is the stylishness of your date's clothes. The result getting the table is "
"encoded as an int value with 0=no, 1=maybe, 2=yes. If either of you is very "
"stylish, 8 or more, then the result is 2 (yes). With the exception that if "
"either of you has style of 2 or less, then the result is 0 (no). Otherwise "
"the result is 1 (maybe)."
msgstr ""
"You and your திகதி அரே trying பெறுநர் get a table at a restaurant. The கூறளவு "
"\"you\" is the stylishness of your clothes, in the வீச்சு 0..10, and \"date\" "
"is the stylishness of your date's clothes. The result getting the table is "
"encoded அச் an int மதிப்பு with 0=no, 1=maybe, 2=yes. If either of you is very "
"stylish, 8 or more, then the result is 2 (yes). With the exception that if "
"either of you has சூல் தண்டு of 2 or less, then the result is 0 (no). "
"Otherwise the result is 1 (maybe)."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool2/FizzBuzz.html:2
msgid "Fizz Buzz"
msgstr "Fizz Buzz"

#. type: Content of: <p>
#: src/lessons/welcome/bat/bool2/FizzBuzz.html:3
msgid ""
"According to Wikipedia, Fizz buzz is a group word game for children to teach "
"them about division.  Players take turns to count incrementally, replacing "
"any number divisible by three with the word \"Fizz\", and any number "
"divisible by five with the word \"Buzz\". Any number that is divisible by "
"both three and five is replaced with the string \"Fizz Buzz\"."
msgstr ""
"According பெறுநர் Wikipedia, Fizz buzz is a குழு சொல் game க்கு children பெறுநர் "
"teach them பற்றி division.  Players take turns பெறுநர் எண்ணுங்கள் incrementally, "
"replacing any எண் divisible by three with the சொல் \"Fizz\", and any எண் "
"divisible by five with the சொல் \"Buzz\". Any எண் that is divisible by both "
"three and five is replaced with the சரம் \"Fizz Buzz\"."

#. type: Content of: <p>
#: src/lessons/welcome/bat/bool2/FizzBuzz.html:8
msgid ""
"Unchanged numbers are simply returned as a string.  [!java|scala]The easiest "
"for that is to use that [!thelang] idiomatic: <code>\"\"+a</code>[/!] "
"[!python]The function <code>str(a)</code> changes an integer <code>a</code> "
"into a string.[/!]"
msgstr ""
"Unchanged numbers அரே simply returned அச் a string.  [!java|scala]The easiest "
"க்கு that is பெறுநர் use that [!thelang] idiomatic: <code>\"\"+a</code>[/!] "
"[!python]The சார்பு <code>str(a)</code> changes an முழு எண் <code>a</code> "
"into a string.[/!]"

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool2/GreenTicket.html:2
msgid "GreenTicket"
msgstr "GreenTicket"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool2/GreenTicket.html:3
msgid ""
"You have a green lottery ticket, with ints a, b, and c on it. If the numbers "
"are all different from each other, the result is 0. If all of the numbers "
"are the same, the result is 20. If two of the numbers are the same, the "
"result is 10."
msgstr ""
"You have a பச்சை lottery ticket, with ints a, b, and c on it. If the numbers "
"அரே அனைத்தும் different இருந்து each other, the result is 0. If அனைத்தும் of the "
"numbers அரே the same, the result is 20. If two of the numbers அரே the same, "
"the result is 10."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool2/In1To10.html:2
msgid "In1To10"
msgstr "In1To10"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool2/In1To10.html:3
msgid ""
"Given a number n, return true if n is in the range 1..10, inclusive. Unless "
"\"outsideMode\" is true, in which case return true if the number is less or "
"equal to 1, or greater or equal to 10."
msgstr ""
"Given a எண் n, return true if n is in the வீச்சு 1..10, inclusive. Unless "
"\"outsideMode\" is true, in which case return true if the எண் is less or "
"equal பெறுநர் 1, or greater or equal பெறுநர் 10."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool2/InOrderEqual.html:2
msgid "InOrderEqual"
msgstr "InOrderEqual"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool2/InOrderEqual.html:3
msgid ""
"Given three ints, a b c, return true if they are in strict increasing order, "
"such as 2 5 11, or 5 6 7, but not 6 5 7 or 5 5 7. However, with the "
"exception that if \"equalOk\" is true, equality is allowed, such as 5 5 7 or "
"5 5 5."
msgstr ""
"Given three ints, a b c, return true if they அரே in strict increasing order, "
"such அச் 2 5 11, or 5 6 7, but not 6 5 7 or 5 5 7. However, with the "
"exception that if \"equalOk\" is true, equality is allowed, such அச் 5 5 7 or "
"5 5 5."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool2/InOrder.html:2
msgid "InOrder"
msgstr "InOrder"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool2/InOrder.html:3
msgid ""
"Given three ints, a b c, return true if b is greater than a, and c is "
"greater than b. However, with the exception that if \"bOk\" is true, b does "
"not need to be greater than a."
msgstr ""
"Given three ints, a b c, return true if b is greater than a, and c is "
"greater than b. However, with the exception that if \"bOk\" is true, b does "
"not need பெறுநர் be greater than a."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool2/LastDigit2.html:2
msgid "LastDigit 2"
msgstr "LastDigit 2"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool2/LastDigit2.html:3
msgid ""
"Given three ints, a b c, return true if two or more of them have the same "
"rightmost digit. The ints are non-negative. Note: the % \"mod\" operator "
"computes the remainder, e.g. 17 % 10 is 7."
msgstr ""
"Given three ints, a b c, return true if two or more of them have the same "
"rightmost digit. The ints அரே non-negative. குறிப்பு: the % \"mod\" operator "
"computes the remainder, e.g. 17 % 10 is 7."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool2/LessBy10.html:2
msgid "LessBy10"
msgstr "LessBy10"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool2/LessBy10.html:3
msgid ""
"Given three ints, a b c, return true if one of them is 10 or more less than "
"one of the others."
msgstr ""
"Given three ints, a b c, return true if one of them is 10 or more less than "
"one of the others."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool2/Main.html:2
msgid "Boolean (even more) fun"
msgstr "Boolean (even more) fun"

#. type: Content of: <p>
#: src/lessons/welcome/bat/bool2/Main.html:4
msgid ""
"A very good introduction to this type is available here: "
"http://codingbat.com/doc/java-if-boolean-logic.html"
msgstr ""
"A very good அறிமுகம் பெறுநர் this வகை is available here: http://codingbat.com/"
"doc/java-if-boolean-logic.html"

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool2/MaxMod5.html:2
msgid "MaxMod5"
msgstr "MaxMod5"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool2/MaxMod5.html:3
msgid ""
"Given two int values, return whichever value is larger. However if the two "
"values have the same remainder when divided by 5, then the return the "
"smaller value. However, in all cases, if the two values are the same, return "
"0.  Note: the % \"mod\" operator computes the remainder, e.g. 7 % 5 is 2."
msgstr ""
"Given two int values, return whichever மதிப்பு is larger. However if the two "
"values have the same remainder when divided by 5, then the return the "
"smaller value. However, in அனைத்தும் cases, if the two values அரே the same, "
"return 0.  குறிப்பு: the % \"mod\" operator computes the remainder, e.g. 7 % "
"5 is 2."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool2/NearTen.html:2
msgid "NearTen"
msgstr "NearTen"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool2/NearTen.html:3
msgid ""
"Given a non-negative number \"num\", return true if num is within 2 of a "
"multiple of 10. Note: (a % b) is the remainder of dividing a by b, so (7 % "
"5) is 2."
msgstr ""
"Given a non-negative எண் \"num\", return true if num is within 2 of a "
"multiple of 10. குறிப்பு: (a % b) is the remainder of dividing a by b, so (7 "
"% 5) is 2."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool2/RedTicket.html:2
msgid "RedTicket"
msgstr "RedTicket"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool2/RedTicket.html:3
msgid ""
"You have a red lottery ticket showing ints a, b, and c, each of which is 0, "
"1, or 2. If they are all the value 2, the result is 10. Otherwise if they "
"are all the same, the result is 5. Otherwise so long as both b and c are "
"different from a, the result is 1. Otherwise the result is 0."
msgstr ""
"You have a சிவப்பு lottery ticket showing ints a, b, and c, each of which is "
"0, 1, or 2. If they அரே அனைத்தும் the மதிப்பு 2, the result is 10. Otherwise if "
"they அரே அனைத்தும் the same, the result is 5. Otherwise so long அச் both b and "
"c அரே different இருந்து a, the result is 1. Otherwise the result is 0."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool2/ShareDigit.html:2
msgid "ShareDigit"
msgstr "ShareDigit"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool2/ShareDigit.html:3
msgid ""
"Given two ints, each in the range 10..99, return true if there is a digit "
"that appears in both numbers, such as the 2 in 12 and 23. (Note: division, "
"e.g. n/10, gives the left digit while the % \"mod\" n%10 gives the right "
"digit.)"
msgstr ""
"Given two ints, each in the வீச்சு 10..99, return true if there is a digit "
"that appears in both numbers, such அச் the 2 in 12 and 23. (Note: division, "
"e.g. n/10, gives the இடது digit while the % \"mod\" n%10 gives the வலது "
"digit.)"

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool2/SortaSum.html:2
msgid "SortaSum"
msgstr "SortaSum"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool2/SortaSum.html:3
msgid ""
"Given 2 ints, a and b, return their sum. However, sums in the range 10..19 "
"inclusive, are forbidden, so in that case just return 20."
msgstr ""
"Given 2 ints, a and b, return their sum. However, sums in the வீச்சு 10..19 "
"inclusive, அரே forbidden, so in that case just return 20."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool2/SquirrelPlay.html:2
msgid "SquirrelPlay"
msgstr "SquirrelPlay"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool2/SquirrelPlay.html:3
msgid ""
"The squirrels in Palo Alto spend most of the day playing. In particular, "
"they play if the temperature is between 60 and 90 (inclusive). Unless it is "
"summer, then the upper limit is 100 instead of 90. Given an int temperature "
"and a boolean isSummer, return true if the squirrels play and false "
"otherwise."
msgstr ""
"The squirrels in Palo Alto spend பெரும்பாலானவை of the நாள் playing. In "
"particular, they play if the temperature is between 60 and 90 (inclusive). "
"Unless it is summer, then the upper limit is 100 instead of 90. Given an int "
"temperature and a boolean isSummer, return true if the squirrels play and "
"false otherwise."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool2/TeaParty.html:2
msgid "TeaParty"
msgstr "TeaParty"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool2/TeaParty.html:3
msgid ""
"We are having a party with amounts of tea and candy. Return the int outcome "
"of the party encoded as 0=bad, 1=good, or 2=great. A party is good (1) if "
"both tea and candy are at least 5. However, if either tea or candy is at "
"least double the amount of the other one, the party is great (2).  However, "
"in all cases, if either tea or candy is less than 5, the party is always bad "
"(0)."
msgstr ""
"We அரே having a party with amounts of tea and candy. Return the int outcome "
"of the party encoded அச் 0=bad, 1=good, or 2=great. A party is good (1) if "
"both tea and candy அரே at least 5. However, if either tea or candy is at "
"least இரட்டை the amount of the மற்றொன்று one, the party is great (2).  However, "
"in அனைத்தும் cases, if either tea or candy is less than 5, the party is எப்போதும்"
" bad (0)."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool2/TeenSum.html:2
msgid "TeenSum"
msgstr "TeenSum"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool2/TeenSum.html:3
msgid ""
"Given 2 ints, a and b, return their sum. However, \"teen\" values in the "
"range 13..19 inclusive, are extra lucky. So if either value is a teen, just "
"return 19."
msgstr ""
"Given 2 ints, a and b, return their sum. However, \"teen\" values in the வீச்சு"
" 13..19 inclusive, அரே extra lucky. So if either மதிப்பு is a teen, just "
"return 19."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool2/TwoAsOne.html:2
msgid "TwoAsOne"
msgstr "TwoAsOne"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool2/TwoAsOne.html:3
msgid ""
"Given three ints, a b c, return true if it is possible to add two of the "
"ints to get the third."
msgstr ""
"Given three ints, a b c, return true if it is possible பெறுநர் கூட்டு two of "
"the ints பெறுநர் get the third."

#. type: Content of: <h1>
#: src/lessons/welcome/bat/bool2/WithoutDoubles.html:2
msgid "WithoutDoubles"
msgstr "WithoutDoubles"

#. type: Content of: outside any tag (error?)
#: src/lessons/welcome/bat/bool2/WithoutDoubles.html:3
msgid ""
"Return the sum of two 6-sided dice rolls, each in the range 1..6. However, "
"if noDoubles is true, if the two dice show the same value, increment one die "
"to the next value, wrapping around to 1 if its value was 6."
msgstr ""
"Return the sum of two 6-sided dice rolls, each in the வீச்சு 1..6. However, if "
"noDoubles is true, if the two dice காட்டு the same value, increment one பகடை "
"பெறுநர் the அடுத்தது value, wrapping around பெறுநர் 1 if its மதிப்பு was 6."

#. type: Content of: <h1>
#: src/lessons/bat/string1/Main.html:2
msgid "String fun"
msgstr "சரம் fun"

#. type: Content of: <p>
#: src/lessons/bat/string1/Main.html:4
msgid ""
"Strings are the simplest of the complex data types :) They provide several "
"operations, such as getting the length of the string, or a substring of it."
msgstr ""
"சரங்கள் அரே the simplest of the அணைவு தகவல்கள் வகைகள் :) They provide several "
"operations, such அச் getting the length of the string, or a substring of it."

#. type: Content of: <p>
#: src/lessons/bat/string1/Main.html:8
msgid ""
"A very good introduction to this type is available here: "
"http://codingbat.com/doc/java-string-introduction.html"
msgstr ""
"A very good அறிமுகம் பெறுநர் this வகை is available here: http://codingbat.com/"
"doc/java-string-introduction.html"

#. type: Content of: <h3>
#: src/lessons/bat/string1/short_desc.html:2
msgid "Small exercises about strings"
msgstr "Small exercises பற்றி சரங்கள்"

#. type: Content of: <p>
#: src/lessons/bat/string1/short_desc.html:4
msgid ""
"These are some training exercises around strings. But unfortunately, its "
"integration within PLM is still ongoing."
msgstr ""
"These அரே some training exercises around strings. But unfortunately, its "
"ஒருங்கிணைப்பு within PLM is still ongoing."

#. type: Content of: <p>
#: src/lessons/bat/string1/short_desc.html:7
msgid "Please be patient with us."
msgstr "Please be patient with us."

#. type: Content of: <h1>
#: src/lessons/bat/string1/AltPairs.html:2
msgid "AltPairs"
msgstr "AltPairs"

#. type: Content of: outside any tag (error?)
#: src/lessons/bat/string1/AltPairs.html:3
msgid ""
"Given a string, return a string made of the chars at indexes 0,1, 4,5, 8,9 "
"... so \"kittens\" yields \"kien\"."
msgstr ""
"Given a string, return a சரம் made of the chars at குறியீடுகள் 0,1, 4,5, 8,9 "
"... so \"kittens\" yields \"kien\"."

#. type: Content of: <h1>
#: src/lessons/bat/string1/FrontTimes.html:2
msgid "FrontTimes"
msgstr "FrontTimes"

#. type: Content of: outside any tag (error?)
#: src/lessons/bat/string1/FrontTimes.html:3
msgid ""
"Given a string and a non-negative int n, we'll say that the front of the "
"string is the first 3 chars, or whatever is there if the string is less than "
"length 3. Return n copies of the front;"
msgstr ""
"Given a சரம் and a non-negative int n, we'll say that the front of the சரம் is "
"the first 3 chars, or whatever is there if the சரம் is less than length 3. "
"Return n நகல்கள் of the front;"

#. type: Content of: <h1>
#: src/lessons/bat/string1/Last2.html:2
msgid "Last2"
msgstr "Last2"

#. type: Content of: <p>
#: src/lessons/bat/string1/Last2.html:4
msgid ""
"Given a string, return the amount of times that the two last letters appear "
"as a substring of the string. So \"hixxxhi\" yields 1 (we won't count the "
"end substring) while \"aaaNaa\" yields 2 (substrings may overlap)."
msgstr ""
"Given a string, return the amount of பெருக்கல் that the two last letters "
"appear அச் a substring of the string. So \"hixxxhi\" yields 1 (we won't "
"எண்ணுங்கள் the end substring) while \"aaaNaa\" yields 2 (substrings சி-வைகாசி "
"overlap)."

#. type: Content of: <h1>
#: src/lessons/bat/string1/StringBits.html:2
msgid "StringBits"
msgstr "StringBits"

#. type: Content of: outside any tag (error?)
#: src/lessons/bat/string1/StringBits.html:3
msgid ""
"Given a string, return a new string made of every other char starting with "
"the first, so \"Hello\" yields \"Hlo\"."
msgstr ""
"Given a string, return a புதிய சரம் made of every மற்றொன்று char starting with "
"the first, so \"Hello\" yields \"Hlo\"."

#. type: Content of: <h1>
#: src/lessons/bat/string1/StringMatch.html:2
msgid "StringMatch"
msgstr "StringMatch"

#. type: Content of: outside any tag (error?)
#: src/lessons/bat/string1/StringMatch.html:3
msgid ""
"Given 2 strings, a and b, return the number of the positions where they "
"contain the same length 2 substring. So \"xxcaazz\" and \"xxbaaz\" yields 3, "
"since the \"xx\", \"aa\", and \"az\" substrings appear in the same place in "
"both strings."
msgstr ""
"Given 2 strings, a and b, return the எண் of the positions where they contain "
"the same length 2 substring. So \"xxcaazz\" and \"xxbaaz\" yields 3, since "
"the \"xx\", \"aa\", and \"az\" substrings appear in the same place in both "
"strings."

#. type: Content of: <h1>
#: src/lessons/bat/string1/StringSplosion.html:2
msgid "StringSplosion"
msgstr "StringSplosion"

#. type: Content of: outside any tag (error?)
#: src/lessons/bat/string1/StringSplosion.html:3
msgid "Given a non-empty string like \"Code\" return a string like \"CCoCodCode\"."
msgstr "Given a non-empty சரம் like \"Code\" return a சரம் like \"CCoCodCode\"."

#. type: Content of: <h1>
#: src/lessons/bat/string1/StringTimes.html:2
msgid "StringTimes"
msgstr "StringTimes"

#. type: Content of: outside any tag (error?)
#: src/lessons/bat/string1/StringTimes.html:3
msgid ""
"Given a string and a non-negative int n, return a larger string that is n "
"copies of the original string."
msgstr ""
"Given a சரம் and a non-negative int n, return a larger சரம் that is n நகல்கள் of "
"the original string."

#. type: Content of: <h1>
#: src/lessons/bat/string1/StringX.html:2
msgid "StringX"
msgstr "StringX"

#. type: Content of: outside any tag (error?)
#: src/lessons/bat/string1/StringX.html:3
msgid ""
"Given a string, return a version where all the \"x\" have been "
"removed. Except an \"x\" at the very start or end should not be removed."
msgstr ""
"Given a string, return a version where அனைத்தும் the \"ஃச்\" have been removed. "
"Except an \"ஃச்\" at the very தொடங்கு or end should not be removed."

#. type: Content of: <h1>
#: src/lessons/bat/string1/StringYak.html:2
msgid "StringYak"
msgstr "StringYak"

#. type: Content of: outside any tag (error?)
#: src/lessons/bat/string1/StringYak.html:3
msgid ""
"Suppose the string \"yak\" is unlucky. Given a string, return a version "
"where all the \"yak\" are removed, but the \"a\" can be any char. The "
"\"yak\" strings will not overlap."
msgstr ""
"Suppose the சரம் \"yak\" is unlucky. Given a string, return a version where "
"அனைத்தும் the \"yak\" அரே removed, but the \"a\" can be any char. The \"yak\" "
"சரங்கள் will not overlap."

#. type: Content of: <h2>
#: src/lessons/lander/Main.html:2 src/lessons/lander/short_desc.html:2
#: src/lessons/lander/universe/DelegatingLanderWorld.html:2
msgid "Lunar Lander"
msgstr "Lunar Lander"

#. type: Content of: <p>
#: src/lessons/lander/Main.html:4 src/lessons/lander/short_desc.html:4
msgid ""
"In this lesson you pilot a lunar landing module in increasingly complex "
"situations."
msgstr ""
"In this பாடம் you pilot a lunar தரையிறக்கம் தொகுதி in increasingly அணைவு "
"situations."

#. type: Content of: <p>
#: src/lessons/lander/Main.html:7
msgid ""
"At each step of the simulation, the player issues a command controlling how "
"much the angle and thrust of the lander should change"
msgstr ""
"At each படி of the simulation, the player issues a கட்டளை controlling how "
"much the angle and thrust of the lander should change"

#. type: Content of: <p>
#: src/lessons/lander/Main.html:10
msgid "Ideas concerning the progression of exercises:"
msgstr "Ideas concerning the progression of exercises:"

#. type: Content of: <ul><li>
#: src/lessons/lander/Main.html:12
msgid ""
"A lander in vertical position above flat ground, the player can only control "
"thrust (done)"
msgstr ""
"A lander in vertical position above கிடைவளைவு ground, the player can only "
"control thrust (done)"

#. type: Content of: <ul><li>
#: src/lessons/lander/Main.html:14
msgid ""
"A lander in vertical position not above flat ground, the player control "
"thrust and angle (done)"
msgstr ""
"A lander in vertical position not above கிடைவளைவு ground, the player control "
"thrust and angle (done)"

#. type: Content of: <ul><li>
#: src/lessons/lander/Main.html:16
msgid ""
"A lander with difficult angle and speed not above flat ground, the player "
"control thrust and angle"
msgstr ""
"A lander with difficult angle and விரைவு not above கிடைவளைவு ground, the "
"player control thrust and angle"

#. type: Content of: <ul><li>
#: src/lessons/lander/Main.html:18
msgid ""
"A lander with difficult angle and speed not above flat ground, with "
"difficult ground, the player control thrust and angle"
msgstr ""
"A lander with difficult angle and விரைவு not above கிடைவளைவு ground, with "
"difficult ground, the player control thrust and angle"

#. type: Content of: <ul><li>
#: src/lessons/lander/Main.html:20
msgid "Same with wind?"
msgstr "Same with wind?"

#. type: Content of: <p>
#: src/lessons/lander/short_desc.html:7
msgid "This lesson assumes some basic programming and physics skills."
msgstr "This பாடம் assumes some அடிப்படை programming and physics skills."

#. type: Content of: <p>
#: src/lessons/lander/universe/DelegatingLanderWorld.html:4
msgid ""
"In this universe you pilot a lunar lander. At each simulation step you're "
"given the lander's position, speed, angle and thrust and must issue a "
"command adjusting its angle and thrust."
msgstr ""
"In this அண்டம் you pilot a lunar lander. At each பாவனை படி you're given the "
"lander's position, speed, angle and thrust and must சிக்கல் a கட்டளை adjusting "
"its angle and thrust."

#. type: Content of: outside any tag (error?)
#: src/lessons/lander/universe/DelegatingLanderWorld.html:12
msgid "Get the X and Y position of the lander."
msgstr "Get the ஃச் and ஒய் position of the lander."

#. type: Content of: <pre>
#: src/lessons/lander/universe/DelegatingLanderWorld.html:13
#, no-wrap
msgid ""
"[!java|c]double [/!]getSpeedX()[!scala]:Double[/!]\n"
"[!java|c]double [/!]getSpeedY()[!scala]:Double[/!]"
msgstr ""
"[!java|c]double [/!]getSpeedX()[!scala]:Double[/!]\n"
"[!java|c]double [/!]getSpeedY()[!scala]:Double[/!]"

#. type: Content of: outside any tag (error?)
#: src/lessons/lander/universe/DelegatingLanderWorld.html:15
msgid "Get the horizontal and vertical speed of the lander."
msgstr "Get the horizontal and vertical விரைவு of the lander."

#. type: Content of: <pre>
#: src/lessons/lander/universe/DelegatingLanderWorld.html:17
#, no-wrap
msgid ""
"[!java|c]double [/!]getAngle()[!scala]:Double[/!]\n"
"[!java|c]void [/!]setDesiredAngle([!java|c]double "
"[/!]desiredAngle[!scala]:Double[/!])"
msgstr ""
"[!java|c]double [/!]getAngle()[!scala]:Double[/!]\n"
"[!java|c]void [/!]setDesiredAngle([!java|c]double [/!]desiredAngle[!scala]:"
"Double[/!])"

#. type: Content of: outside any tag (error?)
#: src/lessons/lander/universe/DelegatingLanderWorld.html:19
msgid "Get or set the angle of the lander."
msgstr "Get or கணம் the angle of the lander."

#. type: Content of: outside any tag (error?)
#: src/lessons/lander/universe/DelegatingLanderWorld.html:20
msgid ""
"An angle of 0° denotes a vertical position where the \"head\" of the lander "
"points up.  This is the angle you must land with. A positive angle denotes a "
"left-leaning lander, a negative angle a right-leaning one. You cannot lean "
"more than by ±90°, and the angle can vary by at most ±5° in one step."
msgstr ""
"An angle of 0° denotes a vertical position where the \"head\" of the lander "
"பிரிவகம் up.  This is the angle you must land with. A நேரமம் angle denotes a "
"left-leaning lander, a எதிர்மம் angle a right-leaning one. You cannot lean "
"more than by ±90°, and the angle can vary by at பெரும்பாலானவை ±5° in one step."

#. type: Content of: <pre>
#: src/lessons/lander/universe/DelegatingLanderWorld.html:25
#, no-wrap
msgid ""
"[!java|c]int [/!]getThrust()[!scala]:Int[/!]\n"
"[!java|c]void [/!]setDesiredThrust([!java|c]int [/!]thrust[!scala]:Int[/!])"
msgstr ""
"[!java|c]int [/!]getThrust()[!scala]:Int[/!]\n"
"[!java|c]void [/!]setDesiredThrust([!java|c]int [/!]thrust[!scala]:Int[/!])"

#. type: Content of: outside any tag (error?)
#: src/lessons/lander/universe/DelegatingLanderWorld.html:27
msgid "Get or set the thrust of the lander."
msgstr "Get or கணம் the thrust of the lander."

#. type: Content of: outside any tag (error?)
#: src/lessons/lander/universe/DelegatingLanderWorld.html:27
msgid ""
"You can only increment or decrement the thrust by 1 between two simulation "
"steps, so if the current thrust is 2 and you ask for 4, you'll only get 3 in "
"the next step. If you ask for less than 0 (resp. more than 4), everything "
"will be as if you had asked for 0 (resp. 4)."
msgstr ""
"You can only increment or decrement the thrust by 1 between two பாவனை steps, "
"so if the மின்னோட்ட்ம், ஓட்டம் thrust is 2 and you ask க்கு 4, you'll only get 3 in "
"the அடுத்தது step. If you ask க்கு less than 0 (resp. more than 4), everything "
"will be அச் if you had asked க்கு 0 (resp. 4)."

#. type: Content of: <pre>
#: src/lessons/lander/universe/DelegatingLanderWorld.html:33
#, no-wrap
msgid "[!java|c]int [/!]getFuel()[!scala]:Int[/!]"
msgstr "[!java|c]int [/!]getFuel()[!scala]:Int[/!]"

#. type: Content of: outside any tag (error?)
#: src/lessons/lander/universe/DelegatingLanderWorld.html:34
msgid ""
"Get the remaining fuel in the lander.  At each step of the simulation the "
"lander consumes as many fuel units as the current thrust. Once you run out "
"of fuel you're in free fall so beware!"
msgstr ""
"Get the remaining எரிபொருள் in the lander.  At each படி of the பாவனை the "
"lander consumes அச் many எரிபொருள் units அச் the மின்னோட்ட்ம், ஓட்டம் thrust. Once "
"you ஓடு out of எரிபொருள் you're in free fall so beware!"

#. type: Content of: <pre>
#: src/lessons/lander/universe/DelegatingLanderWorld.html:38
#, no-wrap
msgid "[!java]List&lt;Point&gt; [/!]getGround() [!scala]:List[Point][/!]"
msgstr "[!java]List&lt;Point&gt; [/!]getGround() [!scala]:List[Point][/!]"

#. type: Content of: outside any tag (error?)
#: src/lessons/lander/universe/DelegatingLanderWorld.html:39
msgid ""
"Get the vertices of the ground's profile from left to right.  "
"[!java|scala]You can retrieve the X and Y coordinates of each point with the "
"corresponding methods of your point: <code>p.x()</code> and "
"<code>p.y()</code>.[/!] [!python]Each point is an array of two integers "
"denoting respectively the X and Y coordinates of that point.[/!]"
msgstr ""
"Get the vertices of the ground's சுயவிவரம் இருந்து இடது பெறுநர் right.  "
"[!java|scala]You can retrieve the ஃச் and ஒய் coordinates of each புள்ளியம் with "
"the corresponding முறைகள் of your point: <code>p.x()</code> and "
"<code>p.y()</code>.[/!] [!python]Each புள்ளியம் is an array of two integers "
"denoting respectively the ஃச் and ஒய் coordinates of that point.[/!]"

#. type: Content of: <h1>
#: src/lessons/lander/lvl1_lander_101/Lander101.html:2
msgid "Lander 101"
msgstr "Lander 101"

#. type: Content of: <p>
#: src/lessons/lander/lvl1_lander_101/Lander101.html:4
msgid ""
"Congratulations! You won a (one-way) trip to Mars in a cereal box. NASA was "
"kind enough to donate the Lunar Excursion Module for this mission, so that's "
"what you'll be flying."
msgstr ""
"Congratulations! You வோன் a (one-way) trip பெறுநர் Mars in a cereal box. NASA "
"was kind enough பெறுநர் நன்கொடை the Lunar Excursion தொகுதி க்கு this mission, "
"so that's what you'll be flying."

#. type: Content of: <p>
#: src/lessons/lander/lvl1_lander_101/Lander101.html:8
msgid ""
"Before you take off, you must go through some basic landing simulation. You "
"shouldn't have to fly the lander if all goes as planned but, as they say, "
"\"better safe than sorry\"."
msgstr ""
"Before you take off, you must go through some அடிப்படை தரையிறக்கம் simulation. "
"You shouldn't have பெறுநர் fly the lander if அனைத்தும் goes அச் planned but, அச் "
"they say, \"better safe than sorry\"."

#. type: Content of: <p>
#: src/lessons/lander/lvl1_lander_101/Lander101.html:12
msgid ""
"Your mission is to <b>land the lander with a vertical speed of at most 10 "
"m/s.</b> There are two ways you can influence the lander's course: by "
"adjusting its angle or by adjusting its thrust. In this simulation we only "
"care about adjusting the thrust, expressed in m/s²."
msgstr ""
"Your mission is பெறுநர் <b>land the lander with a vertical விரைவு of at "
"பெரும்பாலானவை 10 m/s.</b> There அரே two ways you can influence the lander's "
"course: by adjusting its angle or by adjusting its thrust. In this பாவனை we "
"only care பற்றி adjusting the thrust, expressed in m/s²."

#. type: Content of: <p>
#: src/lessons/lander/lvl1_lander_101/Lander101.html:17
msgid ""
"The [!python]<code>step()</code> function[/!][!scala|java|c]code[/!] that "
"you should write now will be called every 0.1 second during the "
"simulation. Make sure that your code does not last too long, with no while "
"loop! It should only set the desired thrust of the next simulation step, by "
"calling <code>[!java]void [/!]setDesiredThrust([!java]int "
"[/!]desiredThrust[!scala]:Integer[/!])</code> where "
"<code>desiredThrust</code> is some integer between 0 and 4 (that is, a "
"thrust between 0 m/s² and 4 m/s²). You can only increment or decrement the "
"thrust by 1 between two simulation steps, so if the current thrust is 2 and "
"you ask for 4, you'll only get 3 in the next step. If you ask for less than "
"0 (resp. more than 4), everything will be as if you had asked for 0 "
"(resp. 4)."
msgstr ""
"The [!python]<code>step()</code> function[/!][!scala|java|c]code[/!] that "
"you should write now will be called every 0.1 second during the simulation. "
"Make sure that your குறியீடு does not last too long, with இல்லை while loop! It "
"should only கணம் the desired thrust of the அடுத்தது பாவனை step, by calling "
"<code>[!java]void [/!]setDesiredThrust([!java]int [/!]desiredThrust[!scala]:"
"Integer[/!])</code> where <code>desiredThrust</code> is some முழு எண் between "
"0 and 4 (that is, a thrust between 0 m/s² and 4 m/s²). You can only "
"increment or decrement the thrust by 1 between two பாவனை steps, so if the "
"மின்னோட்ட்ம், ஓட்டம் thrust is 2 and you ask க்கு 4, you'll only get 3 in the "
"அடுத்தது step. If you ask க்கு less than 0 (resp. more than 4), everything "
"will be அச் if you had asked க்கு 0 (resp. 4)."

#. type: Content of: <p>
#: src/lessons/lander/lvl1_lander_101/Lander101.html:28
msgid ""
"In order to take informed decisions, you can query the lander's state. In "
"this simulation you'll probably be interested in its vertical position: "
"<code>[!java]double [/!]getY()[!scala]:Double[/!]</code>, and its vertical "
"speed: <code>[!java]double [/!]getSpeedY()[!scala]:Double[/!]</code>. You "
"can also ask for the thrust via <code>[!java]int "
"[/!]getThrust()[!scala]:Integer[/!]</code> in case you don't remember what "
"you asked for. Remember that Mars' gravity is 3.711 m/s², it might come in "
"handy."
msgstr ""
"In order பெறுநர் take informed decisions, you can query the lander's state. "
"In this பாவனை you'll probably be interested in its vertical நிலை: <code>"
"[!java]double [/!]getY()[!scala]:Double[/!]</code>, and its vertical speed: "
"<code>[!java]double [/!]getSpeedY()[!scala]:Double[/!]</code>. You can also "
"ask க்கு the thrust வழிமம் <code>[!java]int [/!]getThrust()[!scala]:Integer[/"
"!]</code> in case you don't remember what you asked for. Remember that Mars' "
"gravity is 3.711 m/s², it might come in handy."

#. type: Content of: <p>
#: src/lessons/lander/lvl1_lander_101/Lander101.html:36
msgid ""
"One last thing: the lander is pretty small so you don't have much fuel. At "
"each step of the simulation the lander consumes as many fuel units as the "
"current thrust. Once you run out of fuel you're in free fall so beware! You "
"can consult the remaining amount of available fuel units using "
"<code>[!java]int [/!]getFuel()[!scala]:Integer[/!]</code>."
msgstr ""
"One last thing: the lander is pretty small so you don't have much fuel. At "
"each படி of the பாவனை the lander consumes அச் many எரிபொருள் units அச் the "
"மின்னோட்ட்ம், ஓட்டம் thrust. Once you ஓடு out of எரிபொருள் you're in free fall so "
"beware! You can consult the remaining amount of available எரிபொருள் units "
"using <code>[!java]int [/!]getFuel()[!scala]:Integer[/!]</code>."

#. type: Content of: <h2>
#: src/lessons/lander/lvl2_locate_landing_zone/LocateLandingZone.html:2
msgid "Locate a Landing Zone"
msgstr "Locate a தரையிறக்கம் மண்டலம்"

#. type: Content of: <p>
#: src/lessons/lander/lvl2_locate_landing_zone/LocateLandingZone.html:4
msgid ""
"After 200 days of traveling space and eating cereals you finally reach "
"Mars. Time to land at last!"
msgstr ""
"After 200 days of traveling இடைவெளி and eating cereals you finally reach "
"Mars. Time பெறுநர் land at last!"

#. type: Content of: <p>
#: src/lessons/lander/lvl2_locate_landing_zone/LocateLandingZone.html:7
msgid ""
"The lander is on autopilot and all you have to do is look around and tell it "
"where to land. The lander must <b>land on a flat zone</b> if you want to "
"remain in one piece. You indicate the lander where to land by modifying the "
"<code>getLandingZone</code> function so that it returns a "
"[!java|scala]<code>Segment</code> representing the zone of your choice."
msgstr ""
"The lander is on autopilot and அனைத்தும் you have பெறுநர் do is look around and "
"tell it where பெறுநர் land. The lander must <b>land on a கிடைவளைவு zone</b> "
"if you want பெறுநர் remain in one piece. You indicate the lander where பெறுநர் "
"land by modifying the <code>getLandingZone</code> சார்பு so that it returns a "
"[!java|scala]<code>Segment</code> representing the மண்டலம் of your choice."

#. type: Content of: <p><p>
#: src/lessons/lander/lvl2_locate_landing_zone/LocateLandingZone.html:13
msgid ""
"A segment is composed of two <code>Point</code>s, each of them composed of "
"two <code>double</code>s. A segment is built via the "
"<code>Segment([!java]Point [/!]start[!scala]:Point[/!], [!java]Point "
"[/!]end[!scala]:Point[/!])</code> constructor.  A point is built via the "
"<code>Point([!java]double [/!]x[!scala]:Double[/!], [!java]double "
"[/!]y[!scala]:Double[/!])</code> constructor. A point's coordinates are "
"accessible via its <code>[!java]double [/!]x()[!scala]:Double[/!]</code> and "
"<code>[!java]double [/!]y()[!scala]:Double[/!]</code> methods."
msgstr ""
"A segment is composed of two <code>Point</code>s, each of them composed of "
"two <code>double</code>s. A segment is built வழிமம் the <code>Segment([!java]"
"Point [/!]start[!scala]:Point[/!], [!java]Point [/!]end[!scala]:Point[/!])</"
"code> constructor.  A புள்ளியம் is built வழிமம் the <code>Point([!java]double "
"[/!]x[!scala]:Double[/!], [!java]double [/!]y[!scala]:Double[/!])</code> "
"constructor. A point's coordinates அரே accessible வழிமம் its <code>[!java]"
"double [/!]x()[!scala]:Double[/!]</code> and <code>[!java]double [/!]y()"
"[!scala]:Double[/!]</code> methods."

#. type: Content of: <p>
#: src/lessons/lander/lvl2_locate_landing_zone/LocateLandingZone.html:18
msgid ""
"[/!] [!python]tuple of two X coordinates representing the zone of your "
"choice.[/!]"
msgstr ""
"[/!] [!python]tuple of two ஃச் coordinates representing the மண்டலம் of your "
"choice.[/!]"

#. type: Content of: <p><p>
#: src/lessons/lander/lvl2_locate_landing_zone/LocateLandingZone.html:22
msgid ""
"In order to determine which zone to return, you'll need to call "
"<code>[!java]List&lt;Point&gt; "
"[/!]getGround()[!scala]List[Point][/!]</code>, which returns the vertices of "
"the ground's profile as a list of [!java|scala]<code>Point</code>[/!] "
"[!python]tuples (x,y)[/!]."
msgstr ""
"In order பெறுநர் determine which மண்டலம் பெறுநர் return, you'll need பெறுநர் call "
"<code>[!java]List&lt;Point&gt; [/!]getGround()[!scala]List[Point][/!]</"
"code>, which returns the vertices of the ground's சுயவிவரம் அச் a பட்டியல் of "
"[!java|scala]<code>Point</code>[/!] [!python]tuples (x,y)[/!]."

#. type: Content of: <p><p>
#: src/lessons/lander/lvl2_locate_landing_zone/LocateLandingZone.html:27
msgid ""
"One more thing: your function should return a valid flat zone in any kind of "
"situation, not just for the currently visualized one. That's because it will "
"be not only tested against that world, but also against the one we had in "
"the previous exercise. As usual, you can see the other existing worlds with "
"the appropriate combobox."
msgstr ""
"One more thing: your சார்பு should return a valid கிடைவளைவு மண்டலம் in any kind "
"of situation, not just க்கு the currently visualized one. That's because it "
"will be not only tested against that world, but also against the one we had "
"in the previous exercise. அச் usual, you can see the மற்றொன்று existing worlds "
"with the appropriate combobox."

#. type: Content of: <p><p>
#: src/lessons/lander/lvl2_locate_landing_zone/LocateLandingZone.html:33
msgid "Have a safe landing! Don't forget to put on your space suit on your way out."
msgstr ""
"Have a safe landing! Don't forget பெறுநர் put on your இடைவெளி suit on your "
"way out."

#. type: Content of: <h1>
#: src/lessons/lander/lvl3_fly_the_lander/FlyTheLander.html:2
msgid "Fly the Lander!"
msgstr "Fly the Lander!"

#. type: Content of: <p>
#: src/lessons/lander/lvl3_fly_the_lander/FlyTheLander.html:4
msgid ""
"After 30 days of staring at rocks and eating cereals you decide it's time to "
"go explore other parts of the planet."
msgstr ""
"After 30 days of staring at rocks and eating cereals you decide it's time "
"பெறுநர் go explore மற்றொன்று பாகங்கள் of the planet."

#. type: Content of: <p>
#: src/lessons/lander/lvl3_fly_the_lander/FlyTheLander.html:7
msgid ""
"You fly for a while and suddenly realize you're almost out of fuel.  "
"Unfortunately you're in a delicate situation and the autopilot is helpless.  "
"You will have to pilot the lander yourself. Your mission is to <b>land the "
"lander on a flat zone with a vertical speed less than 10 m/s, an horizontal "
"speed less than 5 m/s and an angle of 0°.</b>"
msgstr ""
"You fly க்கு a while and suddenly realize you're almost out of fuel.  "
"Unfortunately you're in a delicate situation and the autopilot is helpless.  "
"You will have பெறுநர் pilot the lander yourself. Your mission is பெறுநர் "
"<b>land the lander on a கிடைவளைவு மண்டலம் with a vertical விரைவு less than 10 "
"m/s, an horizontal விரைவு less than 5 m/s and an angle of 0°.</b>"

#. type: Content of: <p>
#: src/lessons/lander/lvl3_fly_the_lander/FlyTheLander.html:13
msgid ""
"You must define two functions: <code>[!java]void [/!]initialize()</code> and "
"<code>[!java]void [/!]step()</code>. <code>initialize()</code> is called "
"once just after you press \"Run\". You can use it to chose some flat "
"zone. As before, <code>step()</code> is called every 0.1 second and is used "
"for adjusting the lander's thrust and angle. As in the first exercise the "
"lander's thrust is adjusted via <code>[!java]void "
"[/!]setDesiredThrust([!java]int "
"[/!]desiredThrust[!scala]:Integer[/!])</code>.  But you can also control its "
"angle via <code>[!java]void [/!]setDesiredAngle([!java]double "
"[/!]desiredAngle[!scala]:Double[/!])</code>.  An angle of 0° denotes a "
"vertical position where the \"head\" of the lander points up.  This is the "
"angle you must land with. A positive angle denotes a left-leaning lander, a "
"negative angle a right-leaning one. You cannot lean more than by ±90°, and "
"the angle can vary by at most ±5° in one step."
msgstr ""
"You must define two functions: <code>[!java]void [/!]initialize()</code> and "
"<code>[!java]void [/!]step()</code>. <code>initialize()</code> is called "
"once just after you press \"Run\". You can use it பெறுநர் chose some கிடைவளைவு"
" zone. அச் before, <code>step()</code> is called every 0.1 second and is used "
"க்கு adjusting the lander's thrust and angle. அச் in the first exercise the "
"lander's thrust is சருசெய்த வழிமம் <code>[!java]void [/!]setDesiredThrust("
"[!java]int [/!]desiredThrust[!scala]:Integer[/!])</code>.  But you can also "
"control its angle வழிமம் <code>[!java]void [/!]setDesiredAngle([!java]double "
"[/!]desiredAngle[!scala]:Double[/!])</code>.  An angle of 0° denotes a "
"vertical position where the \"head\" of the lander பிரிவகம் up.  This is the "
"angle you must land with. A நேரமம் angle denotes a left-leaning lander, a "
"எதிர்மம் angle a right-leaning one. You cannot lean more than by ±90°, and the "
"angle can vary by at பெரும்பாலானவை ±5° in one step."

#. type: Content of: <p>
#: src/lessons/lander/lvl3_fly_the_lander/FlyTheLander.html:26
msgid ""
"As in the previous exercise, <code>[!java]List&lt;Point&gt; "
"[/!]getGround()[!scala]:List[Point][/!]</code> returns the vertices of the "
"ground's profile from left to right.  Please refer to the documentation "
"(Help/About this world) for a reference manual of your lunar lander."
msgstr ""
"அச் in the previous exercise, <code>[!java]List&lt;Point&gt; [/!]getGround()"
"[!scala]:List[Point][/!]</code> returns the vertices of the ground's சுயவிவரம்"
" இருந்து இடது பெறுநர் right.  Please refer பெறுநர் the ஆவணப்படுத்துதல் (Help/About "
"this world) க்கு a குறிப்பு manual of your lunar lander."

#. type: Content of: <p>
#: src/lessons/lander/lvl3_fly_the_lander/FlyTheLander.html:30
msgid ""
"As before, your program must safely land the lander in all the situations "
"encountered so far in addition to this new one."
msgstr ""
"அச் before, your திட்டம் must safely land the lander in அனைத்தும் the situations "
"encountered so far in கூட்டல் பெறுநர் this புதிய one."

#. type: Content of: <p>
#: src/lessons/lander/lvl3_fly_the_lander/FlyTheLander.html:33
msgid "Good luck, try not to crash!"
msgstr "Good luck, try not பெறுநர் crash!"

#. type: Content of: <h2>
#: lib/doc/MainWindow.html:1
msgid "The PLM Main Window"
msgstr "The PLM Main சாளரம்"

#. type: Content of: outside any tag (error?)
#: lib/doc/MainWindow.html:3
msgid ""
"The PLM working environment should be self-explanatory, in particular with "
"the tool tips appearing when your mouse is over the elements.  Here is a "
"little explanation of the components in case you fail to understand "
"something. The main window is made of 5 main components:"
msgstr ""
"The PLM working சூழல் should be self-explanatory, in particular with the கருவி"
" tips appearing when your mouse is வீச்சலகு the elements.  Here is a little "
"explanation of the கூறுகள் in case you fail பெறுநர் understand something. The "
"main சாளரம் is made of 5 main components:"

#. type: Content of: <ul><li>
#: lib/doc/MainWindow.html:10
msgid ""
"<b>The menu:</b> Placed on top of the window, it gives you access to some "
"advanced commands such as exiting the program, and some other that we will "
"detail later."
msgstr ""
"<b>The menu:</b> Placed on மேலே of the window, it gives you access பெறுநர் "
"some மேம்பட்ட கட்டளைகள் such அச் exiting the program, and some மற்றொன்று that we "
"will detail later."

#. type: Content of: <ul><li>
#: lib/doc/MainWindow.html:14
msgid ""
"<b>The tool bar:</b> Placed just below the menu, it gives you access to the "
"four main commands:"
msgstr ""
"<b>The கருவி bar:</b> Placed just below the menu, it gives you access பெறுநர் "
"the நான்கு, நாலடி, நான்கடி main commands:"

#. type: Content of: <ul><li><ul><li>
#: lib/doc/MainWindow.html:19
msgid ""
"The <b>Start</b> button, which begins the compilation and execution of the "
"code you may have typed in the editor. At the end of the execution, it "
"verifies whether you reach the situation constituting the objective of the "
"exercise or not. If yes, you gain access to the next exercise using the "
"<b>Exercise</b> menu. If not, you need to rework your code."
msgstr ""
"The <b>Start</b> button, which begins the compilation and execution of the "
"குறியீடு you சி-வைகாசி have typed in the editor. At the end of the execution, "
"it verifies whether you reach the situation constituting the objective of "
"the exercise or not. If yes, you பெருக்கம் access பெறுநர் the அடுத்தது exercise "
"using the <b>Exercise</b> menu. If not, you need பெறுநர் rework your code."

#. type: Content of: <ul><li><ul><li>
#: lib/doc/MainWindow.html:25
msgid ""
"The <b>Stop</b> button allows you to interupt the execution of your code, "
"what may reveal useful if you encounter an <i>infinite loop</i>."
msgstr ""
"The <b>Stop</b> button allows you பெறுநர் interupt the execution of your "
"code, what சி-வைகாசி reveal useful if you encounter an <i>infinite loop</i>."

#. type: Content of: <ul><li><ul><li>
#: lib/doc/MainWindow.html:28
msgid ""
"The <b>Reset</b> button can be used to reset the world into its initial "
"state."
msgstr ""
"The <b>Reset</b> button can be used பெறுநர் மீட்டமை the world into its initial "
"state."

#. type: Content of: <ul><li><ul><li>
#: lib/doc/MainWindow.html:31
msgid ""
"The <b>Demo</b> button shows you the execution of the expected "
"solution. During its execution, you may want to switch the seen world to see "
"the different expected solutions."
msgstr ""
"The <b>Demo</b> button shows you the execution of the expected solution. "
"During its execution, you சி-வைகாசி want பெறுநர் ஆளி, நிலைமாறி the seen world "
"பெறுநர் see the different expected solutions."

#. type: Content of: <ul><li><ul><li>
#: lib/doc/MainWindow.html:34
msgid ""
"Please note that there is often several ways of achieving the awaited "
"solution, and that the one presented during the demo is not more or less "
"correct than the others. You are completely free to not follow strictly the "
"process shown by the demo, as long as your final solution matches the "
"exercise expectations."
msgstr ""
"Please குறிப்பு that there is often several ways of achieving the awaited "
"solution, and that the one presented during the demo is not more or less "
"சரியான than the others. You அரே completely free பெறுநர் not follow strictly "
"the process shown by the demo, அச் long அச் your final நீர்மக்கூழ் matches the "
"exercise expectations."

#. type: Content of: <ul><li>
#: lib/doc/MainWindow.html:41
msgid ""
"<b>Mission and editor tabs:</b> this is were you read this very text. This "
"area contains several tabs to which you can access by clicking on their name "
"on the top left. The first tab (which is always named <b>Mission</b>)  "
"contains a presentation of the current exercise. To solve an exercise, you "
"need to write your code in the other tabs. For example, you can now clic on "
"the <b>Source Code</b> tab to see the actual source. If it is empty, that's "
"because you did not write any code yet."
msgstr ""
"<b>Mission and திருத்தி tabs:</b> this is were you read this very text. This "
"area contains several தாவல்கள் பெறுநர் which you can access by clicking on "
"their பெயர் on the மேலே left. The first தாவல் (which is எப்போதும் named "
"<b>Mission</b>)  contains a presentation of the மின்னோட்ட்ம், ஓட்டம் exercise. "
"பெறுநர் solve an exercise, you need பெறுநர் write your குறியீடு in the மற்றொன்று "
"tabs. க்கு example, you can now clic on the <b>Source Code</b> தாவல் பெறுநர் "
"see the actual source. If it is empty, that's because you did not write any "
"குறியீடு yet."

#. type: Content of: <ul><li>
#: lib/doc/MainWindow.html:49
msgid ""
"<b>The console:</b> Placed under the tabs, this is where any messages of the "
"application will appear. This area is initially empty and white."
msgstr ""
"<b>The console:</b> Placed under the tabs, this is where any செய்திகள் of the "
"application will appear. This area is initially வெறுமை and white."

#. type: Content of: <ul><li>
#: lib/doc/MainWindow.html:52
msgid ""
"<b>World view</b> Placed on the right of the tabs, it is constituted of five "
"elements:"
msgstr ""
"<b>World view</b> Placed on the வலது of the tabs, it is constituted of five "
"elements:"

#. type: Content of: <ul><li><ul><li>
#: lib/doc/MainWindow.html:57
msgid ""
"A scrolling menu allows to choose the world. Indeed, the program you write "
"may be executed in several worlds to test it in differing conditions. This "
"menu allows you to choose the world you want to see. Note that this "
"scrolling menu is hidden if there is only one world in your exercise."
msgstr ""
"A scrolling பட்டியல் allows பெறுநர் choose the world. Indeed, the திட்டம் you "
"write சி-வைகாசி be executed in several worlds பெறுநர் தேர்வு it in differing "
"conditions. This பட்டியல் allows you பெறுநர் choose the world you want பெறுநர் "
"see. குறிப்பு that this scrolling பட்டியல் is hidden if there is only one world "
"in your exercise."

#. type: Content of: <ul><li><ul><li>
#: lib/doc/MainWindow.html:62
msgid ""
"A slider placed right bellow allows to choose the animation speed of the "
"world. More precisely, it allows to choose the delay (in milliseconds) that "
"the buggles must wait after each action to allow you to see what they are "
"doing."
msgstr ""
"A slider placed வலது bellow allows பெறுநர் choose the animation விரைவு of the "
"world. More precisely, it allows பெறுநர் choose the சுணக்கம் (in milliseconds) "
"that the buggles must wait after each செயல் பெறுநர் allow you பெறுநர் see what "
"they அரே doing."

#. type: Content of: <ul><li><ul><li>
#: lib/doc/MainWindow.html:67
msgid ""
"A tab <b>World</b> represents the view of the world currently selected (from "
"the scrolling menu). This view is thus constitued of a grid forming the "
"several cells of the world, as well as several <i>buggles</i> awaiting for "
"your orders."
msgstr ""
"A தாவல் <b>World</b> represents the பார்வை of the world currently "
"தேர்ந்தெடுக்கப்பட்டது (from the scrolling menu). This பார்வை is thus constitued of "
"a வலைவாய் forming the several cells of the world, அச் well அச் several "
"<i>buggles</i> awaiting க்கு your orders."

#. type: Content of: <ul><li><ul><li>
#: lib/doc/MainWindow.html:72
msgid ""
"An <b>Objective</b> tab displaying the world as it must be by the end of the "
"exercise."
msgstr ""
"An <b>Objective</b> தாவல் displaying the world அச் it must be by the end of "
"the exercise."

#. type: Content of: <ul><li><ul><li>
#: lib/doc/MainWindow.html:76
msgid ""
"<b>The interactive controls</b>. Placed under the world view, these buttons "
"allows you to interactively control the buggles. This way, you can try to "
"<i>manually</i> bring your buggle to the scenario objective before writting "
"the needed code in the editor."
msgstr ""
"<b>The interactive controls</b>. Placed under the world view, these buttons "
"allows you பெறுநர் interactively control the buggles. This way, you can try "
"பெறுநர் <i>manually</i> bring your buggle பெறுநர் the scenario objective "
"before writting the needed குறியீடு in the editor."

#. type: Content of: <ul><li><ul><li><ul><li>
#: lib/doc/MainWindow.html:82
msgid "A scrolling menu allows to select the buggle you want to control."
msgstr ""
"A scrolling பட்டியல் allows பெறுநர் தேர்ந்தெடு the buggle you want பெறுநர் control."

#. type: Content of: <ul><li><ul><li><ul><li>
#: lib/doc/MainWindow.html:84
msgid "The <b>Forward</b> button let your buggle do one step forward."
msgstr "The <b>Forward</b> button let your buggle do one படி forward."

#. type: Content of: <ul><li><ul><li><ul><li>
#: lib/doc/MainWindow.html:86
msgid "The <b>Backward</b> button let it do one step backward."
msgstr "The <b>Backward</b> button let it do one படி backward."

#. type: Content of: <ul><li><ul><li><ul><li>
#: lib/doc/MainWindow.html:88
msgid "The <b>Turn left</b> button ask your buggle to turn of 90° to its left."
msgstr ""
"The <b>Turn left</b> button ask your buggle பெறுநர் turn of 90° பெறுநர் its "
"left."

#. type: Content of: <ul><li><ul><li><ul><li>
#: lib/doc/MainWindow.html:90
msgid ""
"The <b>Turn right</b> button asks the buggle to turn to the right (isn't "
"this amazing?)."
msgstr ""
"The <b>Turn right</b> button asks the buggle பெறுநர் turn பெறுநர் the வலது ("
"isn't this amazing?)."

#. type: Content of: <ul><li><ul><li><ul><li>
#: lib/doc/MainWindow.html:93
msgid ""
"The <b>Mark</b> button requests your buggle to leave a mark behind it when "
"it goes."
msgstr ""
"The <b>Mark</b> button requests your buggle பெறுநர் leave a mark behind it "
"when it goes."
